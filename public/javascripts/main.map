{"version":3,"file":"main.bundle.js","sources":["webpack:///./app/main.browser.ts","webpack:///./app/projects/tictactoe/tictactoe.service.ts","webpack:///./app/shared/code-container/code-container.component.ts","webpack:///./app/app-component/project-selections/project-selections.component.ts","webpack:///./app/app-component/project-view/project-view.component.ts","webpack:///./app/projects/tictactoe/tictactoe.component.ts","webpack:///./app/shared/prismjs/codeblock.component.ts","webpack:///./app/shared/prismjs/prismjs.directive.ts","webpack:///./app/shared/services/nav-title.service.ts","webpack:///./~/snapsvg/dist/snap.svg.js","webpack:///./app/app-component/app.component.html","webpack:///./app/app-component/home/home.component.html","webpack:///./app/app-component/project-selections/project-selections.component.html","webpack:///./app/app-component/project-view/project-view.component.html","webpack:///./app/projects/calculator/calculator.component.html","webpack:///./app/projects/drum-machine/drum-machine.component.html","webpack:///./app/projects/form/form.component.html","webpack:///./app/projects/tictactoe/game-information/game-information.component.html","webpack:///./app/projects/tictactoe/game-play/game-play.component.html","webpack:///./app/projects/tictactoe/game-resolution/game-resolution.component.html","webpack:///./app/projects/watches/watches.component.html","webpack:///./app/shared/accordion/accordion-group.component.html","webpack:///./app/shared/accordion/accordion.component.html","webpack:///./app/shared/code-container/code-container.component.html","webpack:///./app/app-component/app.component.ts","webpack:///./app/app-component/home/home.component.ts","webpack:///./app/projects/calculator/calculator.component.ts","webpack:///./app/projects/drum-machine/directives/drum-machine-beat.directive.ts","webpack:///./app/projects/drum-machine/directives/drum-machine-button.directive.ts","webpack:///./app/projects/drum-machine/directives/drum-machine-instrumentbutton.directive.ts","webpack:///./app/projects/drum-machine/directives/drum-machine-kit.directive.ts","webpack:///./app/projects/drum-machine/directives/drum-machine-knob.directive.ts","webpack:///./app/projects/drum-machine/directives/drum-machine-startbutton.directive.ts","webpack:///./app/projects/drum-machine/drum-machine-metronome.service.ts","webpack:///./app/projects/drum-machine/drum-machine.component.ts","webpack:///./app/projects/drum-machine/sequencerLineUp.ts","webpack:///./app/projects/form/form.component.ts","webpack:///./app/projects/tictactoe/directives/tiletype.directive.ts","webpack:///./app/projects/tictactoe/game-information/game-information.component.ts","webpack:///./app/projects/tictactoe/game-play/game-play.component.ts","webpack:///./app/projects/tictactoe/game-resolution/game-resolution.component.ts","webpack:///./app/projects/tictactoe/tictactoe.routes.ts","webpack:///./app/projects/watches/watches.component.ts","webpack:///./app/routes/app.routes.ts","webpack:///./app/shared/accordion/accordion.component.ts","webpack:///./app/shared/directives/hover-effect.directive.ts"],"sourcesContent":["import {bootstrap}    from '@angular/platform-browser-dynamic';\nimport {AppComponent} from './app-component/app.component';\nimport { HTTP_PROVIDERS} from '@angular/http';\nimport { APP_ROUTER_PROVIDERS } from './routes/app.routes';\nimport { disableDeprecatedForms, provideForms } from '@angular/forms';\n\nbootstrap(AppComponent, [\n    APP_ROUTER_PROVIDERS,\n    HTTP_PROVIDERS,\n    disableDeprecatedForms(),\n    provideForms()\n    ])\n.catch(err => console.error(err));\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/main.browser.ts\n **/","import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class TicTacToeService {\n  private userOne: Player = {\n    score: 0,\n    name: 'Player 1',\n    tileType: TileType.O\n  };\n  private userTwo: Player = {\n    score: 0,\n    name: 'Player 2',\n    tileType: TileType.X\n  };\n  private winner: Player;\n\n  toggleTile(): void {\n    let onePrevTile: TileType = this.userOne.tileType;\n    let twoPrevTile: TileType = this.userTwo.tileType;\n    this.userOne.tileType = twoPrevTile;\n    this.userTwo.tileType = onePrevTile;\n  }\n\n  setUserOne(name: string, tile: TileType): void {\n    if (name != null && name.length > 0) {\n      this.userOne.name = name;\n    }\n\n    if (tile !== this.userOne.tileType) {\n      this.toggleTile();\n    }\n\n  }\n\n  getUserOne(): Player {\n    return this.userOne;\n  }\n\n  setUserTwo(name: string, tile: TileType): void {\n    if (name != null && name.length > 0) {\n      this.userTwo.name = name;\n    }\n\n    if (tile !== this.userTwo.tileType) {\n      this.toggleTile();\n    }\n\n  }\n\n  getUserTwo(): Player {\n    return this.userTwo;\n  }\n\n  setWinner(player: Player) {\n    this.winner = player;\n  }\n\n  getWinner() {\n    return this.winner;\n  }\n\n  resetWinner() {\n    this.winner = null;\n  }\n\n  resetGame() {\n    this.userOne = {\n      score: 0,\n      name: 'Player 1',\n      tileType: TileType.O\n    };\n    this.userTwo = {\n      score: 0,\n      name: 'Player 2',\n      tileType: TileType.X\n    };\n  }\n}\n\nexport interface Player {\n  name: string;\n  score: number;\n  tileType: TileType;\n}\n\nexport enum TileType {\n  X,\n  O,\n  null\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/tictactoe/tictactoe.service.ts\n **/","import { Component, Input } from '@angular/core';\nimport { Accordion, AccordionGroup } from './../accordion/accordion.component';\nimport { CodeblockComponent } from \"./../prismjs/codeblock.component\";\nimport { PrismJsDirective } from \"./../prismjs/prismjs.directive\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'my-code-container',\n  template: require('./code-container.component.html'),\n  directives: [\n    Accordion, \n    AccordionGroup,\n    PrismJsDirective, \n    CodeblockComponent]\n})\n\nexport class CodeContainer {\n  // create an interface for this later\n  @Input('codeFiles') codeFiles: any[];\n  isOpen = false;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/shared/code-container/code-container.component.ts\n **/","import { Component, Output, EventEmitter } from '@angular/core';\nimport { ROUTER_DIRECTIVES } from '@angular/router';\nimport { HoverEffectDirective } from './../../shared/directives/hover-effect.directive';\n@Component({\n    moduleId: module.id,\n    selector: 'my-project-selections',\n    template: require('./project-selections.component.html'),\n    directives: [\n        ROUTER_DIRECTIVES,\n        HoverEffectDirective\n        ]\n})\n\nexport class ProjectSelectionsComponent {\n    @Output() projectClicked = new EventEmitter();\n\n    toggleClicked() {\n        this.projectClicked.emit(true);\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/app-component/project-selections/project-selections.component.ts\n **/","import { Component, OnInit, Input } from '@angular/core';\nimport {  Router, ROUTER_DIRECTIVES } from '@angular/router';\nimport { CodeContainer } from './../../shared/code-container/code-container.component';\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-project-view',\n    template: require('./project-view.component.html'),\n    directives: [\n        ROUTER_DIRECTIVES,\n        CodeContainer\n    ]\n})\n\nexport class ProjectViewComponent {\n    private isActive: boolean = false;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/app-component/project-view/project-view.component.ts\n **/","import { Component } from '@angular/core';\nimport { Router, ROUTER_DIRECTIVES } from '@angular/router';\nimport { TicTacToeService, Player, TileType } from './tictactoe.service';\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-tictactoe',\n    template: `\n    <div class=\"col-md-6 col-md-offset-3 tictactoe\">\n        <router-outlet></router-outlet>\n    </div>\n    `,\n    directives: [ROUTER_DIRECTIVES],\n    providers: [TicTacToeService]\n\n})\n\nexport class TicTacToeComponent {\n    constructor(private router: Router) { }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/tictactoe/tictactoe.component.ts\n **/","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"codeblock\",\n    template: `<pre><ng-content></ng-content></pre>`\n})\nexport class CodeblockComponent {}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/shared/prismjs/codeblock.component.ts\n **/","import { Directive, ViewContainerRef, AfterViewInit, Input } from '@angular/core';\n// import * as Prism from 'Prism';\n\n\n// TODO: get code viewer working again\n// let Prism = require('Prism');\n\n@Directive({\n    selector: '[prismjs]'\n})\n\nexport class PrismJsDirective implements AfterViewInit {\n    @Input('prismjs') language: string;\n\n    constructor(public viewContainer: ViewContainerRef) {}\n\n    ngAfterViewInit(): any {\n       const html = ''; \n       // Prism.highlight(this.viewContainer.element.nativeElement.innerText, Prism.languages[this.language]);\n        const elClass = 'language-' + this.language;\n        this.viewContainer.element.nativeElement.innerHTML = `<pre class=${elClass}><code>${html}</code></pre>`;\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/shared/prismjs/prismjs.directive.ts\n **/","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n@Injectable()\nexport class NavTitleService {\n    constructor(private router: Router) {}\n\n    getCurrentUrl(): string {\n        let url = this.router.url;\n        return this.parseUrl(url);\n    }\n\n    // FIXME: This can probably be done better than parsing links\n    parseUrl(url: string): string {\n        let title: string;\n        // return first part of the url\n        let parsedUrl = url.split('/')[1];\n        switch (parsedUrl) {\n            case '':\n                title = 'Home';\n                break;\n            case 'calculator':\n                title = 'Calculator';\n                break;\n            case 'tictactoe':\n                title = 'Tic Tac Toe';\n                break;                 \n        }\n        return title;\n    }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/shared/services/nav-title.service.ts\n **/","/*** IMPORTS FROM imports-loader ***/\n(function() {\nvar fix = module.exports=0;\n\n// Snap.svg 0.4.0\n// \n// Copyright (c) 2013 – 2015 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// \n// build: 2015-04-07\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.4.2\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            name = String(name);\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    \n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        name = String(name);\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = name.split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = name.split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\n        }\n        return current_event;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = name.split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = name.split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.unbind(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\n})(this);\n\n(function (glob, factory) {\n    // AMD support\n    if (typeof define == \"function\" && define.amd) {\n        // Define as an anonymous module\n        define([\"eve\"], function (eve) {\n            return factory(glob, eve);\n        });\n    } else if (typeof exports != 'undefined') {\n        // Next for Node.js or CommonJS\n        var eve = require('eve');\n        module.exports = factory(glob, eve);\n    } else {\n        // Browser globals (glob is window)\n        // Snap adds itself to window\n        factory(glob, glob.eve);\n    }\n}(window || this, function (window, eve) {\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16);\n                       },\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function () {\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        len && requestAnimFrame(frame);\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in gereal case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && requestAnimFrame(frame);\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < (1 / p)) {\n            l = s * n * n;\n        } else {\n            if (n < (2 / p)) {\n                n -= (1.5 / p);\n                l = s * n * n + .75;\n            } else {\n                if (n < (2.5 / p)) {\n                    n -= (2.25 / p);\n                    l = s * n * n + .9375;\n                } else {\n                    n -= (2.625 / p);\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n// Copyright (c) 2013 - 2015 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.4.0\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            w = glob.doc.querySelector(String(w));\n            return wrap(w);\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    reURLValue = /^url\\(#?([^)]+)\\)$/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  (type == \"null\" && o === null) ||\n            (type == typeof o && o !== null) ||\n            (type == \"object\" && o === Object(o)) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n > Parameters\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan, bestLength = scanLength, bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after, bestLength = afterLength, bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n    \n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = (h % 360) / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = (h % 360) / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = (C == 0 ? null :\n         V == r ? (g - b) / C :\n         V == g ? (b - r) / C + 2 :\n                  (r - g) / C + 4\n        );\n    H = ((H + 360) % 6) * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = (C == 0 ? null :\n         M == r ? (g - b) / C :\n         M == g ? (b - r) / C + 2 :\n                  (r - g) / C + 4);\n    H = ((H + 360) % 6) * 60 / 360;\n    L = (M + m) / 2;\n    S = (C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L));\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n    \n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = (el.node.ownerSVGElement && wrap(el.node.ownerSVGElement)) ||\n            (el.node.parentNode && wrap(el.node.parentNode)) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open((postData ? \"POST\" : \"GET\"), url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = URL(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    // animation\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            var out = [[], [], []],\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n                x, y, z, res;\n\n            if (a && a instanceof Matrix) {\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n            }\n\n            for (x = 0; x < 3; x++) {\n                for (y = 0; y < 3; y++) {\n                    res = 0;\n                    for (z = 0; z < 3; z++) {\n                        res += m[x][z] * matrix[z][y];\n                    }\n                    out[x][y] = res;\n                }\n            }\n            this.a = out[0][0];\n            this.b = out[1][0];\n            this.c = out[0][1];\n            this.d = out[1][1];\n            this.e = out[0][2];\n            this.f = out[1][2];\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            return this.add(1, 0, 0, 1, x, y);\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n            this.add(x, 0, 0, y, 0, 0);\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.c], [this.b, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = -row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) + \n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\(#?([^)]+)\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value.type == \"clipPath\") {\n                var clip = value;\n            } else {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while ((clazz = classes[j++])) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while ((clazz = classes[j++])) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while ((clazz = classes[j++])) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            this.node.appendChild(stop);\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length,\n                start = 0,\n                j = 0;\n            function seed(i, end) {\n                var step = (end - start) / (i - j);\n                for (var k = j; k < i; k++) {\n                    stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n                }\n                j = i;\n                start = end;\n            }\n            len--;\n            for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n                seed(i, stops[i].offset);\n            }\n            stops[len].offset = stops[len].offset || 100;\n            seed(len, stops[len].offset);\n            for (i = 0; i <= len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0, \n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + (+r), y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + ((j % 2) ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n    \n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n            bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    Snap.Set = Set;\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n        t1 = Snap.parseTransformString(t1) || [];\n        t2 = Snap.parseTransformString(t2) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if ((tt1[0] != tt2[0]) ||\n                (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n                (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + (k++) + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(parseFloat(obj));\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (b instanceof Snap.Matrix) {\n                b = b.toTransformString();\n            }\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.svgTransform2string(b);\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n    \n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, 3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (typeof blur == \"string\") {\n            color = blur;\n            opacity = color;\n            blur = 4;\n        }\n        if (typeof color != \"string\") {\n            opacity = color;\n            color = \"#000\";\n        }\n        color = color || \"#000\";\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\nreturn Snap;\n}));\n}.call(window));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/imports-loader?this=>window,fix=>module.exports=0!./~/snapsvg/dist/snap.svg.js\n ** module id = 725\n ** module chunks = 2\n **/","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/app-component/app.component.html\n ** module id = 728\n ** module chunks = 2\n **/","module.exports = \"<div [style.backgroundColor]=\\\"activeProject.color\\\" class=\\\"home-container\\\">\\n\\n    <nav class=\\\"animated fadeIn\\\">\\n        <div class=\\\"navigation-logo\\\">\\n            <h5>JOEY FARINA</h5>\\n        </div>\\n        <div class=\\\"navigation-menu\\\">\\n            <span class=\\\"small-text menu\\\">resume</span>\\n            <span class=\\\"small-text menu\\\">contact</span>\\n        </div>\\n    </nav>\\n\\n    <!--IMAGES-->\\n    <div [ngClass]=\\\"{\\n    'active-image animated slideInRight':       '02' === activeProject.number, \\n    'inactive-image':           '02' !== activeProject.number\\n    }\\\" class=\\\"single-div-container\\\">\\n        <div id=\\\"calculator\\\" class=\\\"single-div__calculator\\\"></div>\\n    </div>\\n\\n    <div [ngClass]=\\\"{\\n    'active-image animated slideInRight':       '01' === activeProject.number, \\n    'inactive-image':                           '01' !== activeProject.number\\n    }\\\" class=\\\"single-div-container\\\">\\n        <img class=\\\"sequencer-image\\\" src=\\\"public/assets/sequencer.svg\\\" alt=\\\"sequencer\\\">\\n    </div>\\n\\n    <div [ngClass]=\\\"{\\n    'active-image animated slideInRight':    '03' === activeProject.number, \\n    'inactive-image':           '03' !== activeProject.number\\n    }\\\" class=\\\"single-div-container\\\">\\n        <img class=\\\"tictactoe-image\\\" src=\\\"public/assets/tictactoe.svg\\\" alt=\\\"sequencer\\\">\\n    </div>\\n\\n\\n    <!--TEXT-->\\n    <div class=\\\"project-container animated fadeIn\\\">\\n        <p class=\\\"project-description\\\">\\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vitae aut assumenda laborum fugit est quibusdam quo minus! Lorem\\n            ipsum dolor sit amet, consectetur adipisicing elit.\\n        </p>\\n        <p class=\\\"project-container-heading small-text\\\">Showcase</p>\\n        <div class=\\\"project-groups\\\">\\n            <div class=\\\"project-group\\\" *ngFor=\\\"let project of projects\\\" (mouseenter)=\\\"setActiveProject(project)\\\" [class.text-inactive]=\\\"project !== activeProject\\\">\\n                    <a [routerLink]=\\\"'/' + project.link\\\" >\\n                        <span class=\\\"project-group-number small-text\\\">{{project.number}}</span>\\n                        <h3 class=\\\"project-group-heading\\\">{{project.heading}}</h3>\\n                        <p class=\\\" project-group-caption small-text\\\" [class.text-inactive]=\\\"project !== activeProject\\\">{{project.caption}}</p>\\n                    </a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/app-component/home/home.component.html\n ** module id = 729\n ** module chunks = 2\n **/","module.exports = \"<section id=\\\"page-grid\\\" class=\\\"row \\\">\\n\\n    <div  (click)=\\\"toggleClicked()\\\" class=\\\"col-md-3 col-xs-6\\\">\\n        <div my-hover-effect class=\\\"box yellow\\\">\\n            <a [routerLink]=\\\"['/tictactoe']\\\">\\n                <div class=\\\"box-content\\\" id=\\\"credit-card-form\\\">\\n                    <h3>TicTacToe</h3>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n\\n    <div my-hover-effect (click)=\\\"toggleClicked()\\\" class=\\\"col-md-3 col-xs-6\\\">\\n        <div class=\\\"box white\\\">\\n            <a [routerLink]=\\\"['/calculator']\\\">\\n                <div class=\\\"box-content\\\" id=\\\"credit-card-form\\\">\\n                    <h3>Calculator</h3>\\n                    <div id=\\\"calculator\\\"></div>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n\\n</section>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/app-component/project-selections/project-selections.component.html\n ** module id = 730\n ** module chunks = 2\n **/","module.exports = \"<!--<div \\n    class=\\\"overlay\\\" \\n    [class.is-active]=\\\"isActive\\\">-->\\n\\n    <!--<div class=\\\"overlay-content\\\">-->\\n        <router-outlet></router-outlet>\\n    <!--</div>-->\\n\\n<!--</div>-->\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/app-component/project-view/project-view.component.html\n ** module id = 731\n ** module chunks = 2\n **/","module.exports = \"<div class=\\\"calculator\\\">\\n<pre *ngIf=\\\"showVariables\\\">\\n     displayValue {{displayValue}}\\n     operatorValue {{operatorValue}}\\n     currentValue {{currentValue}}\\n     valueToOperate {{valueToOperate}}\\n     operatorPressed {{operatorPressed}}\\n     isNegative {{isNegative}}\\n     displayResetAfterOperator {{displayResetAfterOperator}}\\n</pre>\\n    <div class=\\\"row no-gutters\\\">\\n        <!-- display -->\\n        <input class=\\\"col-xs-12 button display\\\" [(ngModel)]=\\\"displayValue\\\" type=\\\"number\\\" />\\n    </div>\\n    \\n    <div class=\\\"button-group\\\">\\n\\n        <div class=\\\"row no-gutters\\\"> <!-- first row -->\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"clear()\\\">\\n                <div class=\\\"button functions clear\\\"><span class=\\\"button-content\\\">C</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"delete()\\\">\\n                <div class=\\\"button functions\\\"><span class=\\\"button-content\\\">Del</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"toggleNegative()\\\">\\n                <div class=\\\"button functions\\\"><span class=\\\"button-content\\\">+/-</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setOperator('/')\\\">\\n                <div class=\\\"button operator\\\"><span class=\\\"button-content\\\">&#247;</span></div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row no-gutters\\\"> <!-- second row -->\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue(7)\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">7</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue(8)\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">8</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue(9)\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">9</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setOperator('*')\\\">\\n                <div class=\\\"button operator\\\"><span class=\\\"button-content\\\">*</span></div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row no-gutters\\\"> <!-- third row -->\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue(4)\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">4</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue(5)\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">5</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue(6)\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">6</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setOperator('(-)')\\\">\\n                <div class=\\\"button operator\\\"><span class=\\\"button-content\\\">-</span></div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row no-gutters\\\"> <!-- fourth row -->\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue(1)\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">1</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue(2)\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">2</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue(3)\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">3</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setOperator('+')\\\">\\n                <div class=\\\"button operator\\\"><span class=\\\"button-content\\\">+</span></div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row no-gutters\\\">\\n            <!-- fith row -->\\n            <div class=\\\"col-xs-6\\\" (click)=\\\"setDisplayValue(0)\\\">\\n                <div class=\\\"button number double-button\\\"><span class=\\\"button-content\\\">0</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"setDisplayValue('.')\\\">\\n                <div class=\\\"button number\\\"><span class=\\\"button-content\\\">.</span></div>\\n            </div>\\n            <div class=\\\"col-xs-3\\\" (click)=\\\"equals()\\\">\\n                <div class=\\\"button operator equals\\\"><span class=\\\"button-content\\\">=</span></div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n<button class='btn calc-btn' (click)=\\\"showVariables = !showVariables\\\" >See how the variables work and toggle the source code below</button>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/projects/calculator/calculator.component.html\n ** module id = 732\n ** module chunks = 2\n **/","module.exports = \"<div class=\\\"drum-machine-wrapper\\\">\\n\\n  <svg class=\\\"animated fadeInDownBig\\\" id=\\\"drum\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 3954.04 1350.11\\\">\\n    <title>beatbox</title>\\n    <!--<rect width=\\\"3954.04\\\" height=\\\"2585.11\\\" fill=\\\"#839b99\\\" />-->\\n    <g  transform=\\\"translate(0 -550.49)\\\">\\n      <g id=\\\"base\\\">\\n        <rect id=\\\"body-2\\\" data-name=\\\"body\\\" x=\\\"921.6\\\" y=\\\"633.7\\\" width=\\\"2016.41\\\" height=\\\"1200.72\\\" fill=\\\"#222826\\\" />\\n        <path d=\\\"M951.47,1868.14l15,40.12a8.17,8.17,0,0,1-8.17,8.17H877.4c-4.51,0-6.8-3.64-8.17-8.17l-7.67-22.75c-0.1-.31-1.25-3.72-2.51-7.45l-0.67-2-1.59-4.71-0.36-1.07c-0.23-.67-0.41-1.23-0.55-1.64l-0.17-.49V669l0.17-.49c0.14-.41.32-1,0.55-1.64l0.36-1.07,1.59-4.71,0.67-2c1.26-3.73,2.41-7.14,2.51-7.45l7.67-22.75c1.37-4.53,3.66-8.17,8.17-8.17h80.85a8.17,8.17,0,0,1,8.17,8.17l-15,40.12V1868.14Z\\\"\\n          transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#1e2424\\\" />\\n        <polygon points=\\\"2936.9 634.48 920.5 634.48 933.58 599.36 2924.27 599.36 2936.9 634.48\\\" fill=\\\"#3b4949\\\" />\\n        <polygon points=\\\"2936.9 1833.64 920.5 1833.64 933.58 1868.76 2924.27 1868.76 2936.9 1833.64\\\" fill=\\\"#3b4949\\\" />\\n        <path d=\\\"M859.05,1878.06c1.26,3.73,2.41,7.14,2.51,7.45-0.44-.78-14.45-26-22-51.16-0.82-2.68-3.81-17.09-3.81-19.89V722.65c0-2.8,3-17.21,3.81-19.89,7.57-25.11,21.58-50.38,22-51.16-0.1.31-1.25,3.72-2.51,7.45-0.22.67-.45,1.34-0.67,2l-1.59,4.71-0.36,1.07c-0.23.67-.41,1.23-0.55,1.64a3.2,3.2,0,0,0-.17,1V1867.62a3.2,3.2,0,0,0,.17,1c0.14,0.41.32,1,.55,1.64l0.36,1.07,1.59,4.71C858.6,1876.72,858.83,1877.39,859.05,1878.06Z\\\"\\n          transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#151b1a\\\" />\\n        <path d=\\\"M2966.76,1868.14l-15,40.12a8.17,8.17,0,0,0,8.17,8.17h80.85c4.51,0,6.8-3.64,8.17-8.17l7.67-22.75c0.1-.31,1.25-3.72,2.51-7.45l0.67-2,1.59-4.71,0.36-1.07c0.23-.67.41-1.23,0.55-1.64l0.17-.49V669l-0.17-.49c-0.14-.41-0.32-1-0.55-1.64l-0.36-1.07-1.59-4.71-0.67-2c-1.26-3.73-2.41-7.14-2.51-7.45L3049,628.85c-1.37-4.53-3.66-8.17-8.17-8.17H2960a8.17,8.17,0,0,0-8.17,8.17l15,40.12V1868.14Z\\\"\\n          transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#1e2424\\\" />\\n        <path d=\\\"M3059.18,1878.06c-1.26,3.73-2.41,7.14-2.51,7.45,0.44-.78,14.45-26,22-51.16,0.82-2.68,3.81-17.09,3.81-19.89V722.65c0-2.8-3-17.21-3.81-19.89-7.57-25.11-21.58-50.38-22-51.16,0.1,0.31,1.25,3.72,2.51,7.45,0.22,0.67.45,1.34,0.67,2l1.59,4.71,0.36,1.07c0.23,0.67.41,1.23,0.55,1.64a3.2,3.2,0,0,1,.17,1V1867.62a3.2,3.2,0,0,1-.17,1c-0.14.41-.32,1-0.55,1.64l-0.36,1.07-1.59,4.71C3059.63,1876.72,3059.4,1877.39,3059.18,1878.06Z\\\"\\n          transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#151b1a\\\" />\\n      </g>\\n      <g id=\\\"styling\\\">\\n        <path d=\\\"M2894.69,1613.95v206.8a7.62,7.62,0,0,1-7.6,7.6H1027.27a7.62,7.62,0,0,1-7.6-7.6v-206.8a7.62,7.62,0,0,1,7.6-7.6h238.8a7.62,7.62,0,0,1,7.6,7.6l0,155.45c0,4.18,3.73,7.29,7.91,7.29h24.68l0.09,0.06H2716.83l0.15-.11h6.16a7.62,7.62,0,0,0,7.6-7.6V1613.1a7.62,7.62,0,0,1,7.55-6.75h148.8A7.62,7.62,0,0,1,2894.69,1613.95Z\\\"\\n          transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#b3b8b6\\\" />\\n        <path d=\\\"M2731,1765.41\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#b3b8b6\\\" />\\n        <rect x=\\\"989.69\\\" y=\\\"1546.52\\\" width=\\\"1875.02\\\" height=\\\"9\\\" fill=\\\"#b3b8b6\\\" />\\n        <rect x=\\\"989.69\\\" y=\\\"788.13\\\" width=\\\"1875.02\\\" height=\\\"9\\\" fill=\\\"#b3b8b6\\\" />\\n        <g id=\\\"button_labels\\\" data-name=\\\"button labels\\\">\\n          <g id=\\\"Layer_25\\\" data-name=\\\"Layer 25\\\">\\n            <rect x=\\\"1382.69\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"1465.09\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"1545.57\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"1627.97\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"1708.7\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"1791.1\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"1871.58\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"1953.98\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"2036.79\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"2119.19\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"2199.66\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"2282.07\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"2362.79\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"2445.19\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"2525.67\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n            <rect x=\\\"2608.07\\\" y=\\\"1579.15\\\" width=\\\"57.4\\\" height=\\\"23.75\\\" rx=\\\"11.88\\\" ry=\\\"11.88\\\" fill=\\\"#b3b8b6\\\" />\\n          </g>\\n          <g id=\\\"Layer_27\\\" data-name=\\\"Layer 27\\\">\\n            <path d=\\\"M1444.36,1622.26l2.82-1.82h1.07v9.89H1446v-6.9l-1.63,1.06v-2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n            />\\n            <path d=\\\"M1529,1624l-1.88-.91s1-2.88,3.65-2.88c3.39,0,3.84,2.23,3.84,3.48,0,2.32-3.49,4.62-3.49,4.62h3.67v2h-7.71v-0.56s5.1-4.21,5.1-6a1.4,1.4,0,0,0-1.4-1.57C1529.71,1622.16,1529,1624,1529,1624Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1608.59,1622.43a3.12,3.12,0,0,1,3.27-2.17,3,3,0,0,1,3.25,2.88,2.26,2.26,0,0,1-.88,1.86,2.53,2.53,0,0,1,1.26,2.27c0,1.89-1.55,3.25-3.67,3.25a3.65,3.65,0,0,1-3.72-2.43l2.09-1a1.64,1.64,0,0,0,1.62,1.51,1.28,1.28,0,0,0,1.43-1.31,1.41,1.41,0,0,0-1.43-1.45,1.36,1.36,0,0,0-.43.07v-1.48h0.49a1.24,1.24,0,0,0,1.19-1.25,1.17,1.17,0,0,0-1.22-1.09,1.51,1.51,0,0,0-1.48,1.22Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1699.16,1626.27v2H1698v2.09h-2.11v-2.09H1691v-0.67l4.75-7.14H1698v5.83h1.15Zm-3.29-2.82-1.76,2.82h1.79v-2.82h0Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1771.38,1627.5a1.63,1.63,0,0,0,1.74,1.13,1.38,1.38,0,0,0,1.42-1.44c0-1.31-1.28-1.74-2.57-1.74a4.22,4.22,0,0,0-1.69.31l0.83-5.33h5v2H1773l-0.22,1.38h0.28c1.87,0,3.69.73,3.69,3.48,0,1.89-1.55,3.25-3.67,3.25a3.47,3.47,0,0,1-3.53-2.15Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1855.84,1623.83a1.52,1.52,0,0,1,.71-0.14,3.31,3.31,0,0,1,3.15,3.47c0,2.34-1.88,3.36-3.67,3.36-2.22,0-3.95-1.46-3.95-3.36a5.75,5.75,0,0,1,1.56-3.95l2.33-2.77h2.78Zm0.08,4.82a1.47,1.47,0,0,0,1.52-1.5,1.51,1.51,0,1,0-3,0A1.45,1.45,0,0,0,1855.93,1628.65Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1941.83,1621.1l-5.23,9.24h-2.66l4.56-7.92h-4.26v-2h7.59v0.66Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n            />\\n            <path d=\\\"M2022.78,1625a2.8,2.8,0,0,1,1.74,2.67c0,1.67-1.83,2.84-3.69,2.84s-3.71-1.17-3.71-2.84a2.79,2.79,0,0,1,1.73-2.67,2.46,2.46,0,0,1-1.31-2.24c0-1.46,1.64-2.49,3.27-2.49s3.24,1,3.24,2.49A2.45,2.45,0,0,1,2022.78,1625Zm-2,3.57a1.26,1.26,0,1,0-1.25-1.26A1.2,1.2,0,0,0,2020.81,1628.57Zm0-6.61a1.11,1.11,0,1,0,0,2.22,1,1,0,0,0,1.09-1.1A1.06,1.06,0,0,0,2020.82,1622Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2100.69,1626.94a1.52,1.52,0,0,1-.71.14,3.31,3.31,0,0,1-3.15-3.47c0-2.34,1.88-3.36,3.67-3.36,2.22,0,3.95,1.46,3.95,3.36a5.75,5.75,0,0,1-1.56,3.95l-2.33,2.77h-2.78Zm-0.08-4.82a1.47,1.47,0,0,0-1.52,1.5,1.51,1.51,0,1,0,3,0A1.45,1.45,0,0,0,2100.61,1622.12Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <g>\\n              <path d=\\\"M2177.24,1622.26l2.82-1.82h1.07v9.89h-2.26v-6.9l-1.63,1.06v-2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n              />\\n              <path d=\\\"M2186.21,1620.26c2.12,0,4,1.7,4,5.13,0,3.67-1.9,5.12-4,5.12s-4-1.45-4-5.12C2182.18,1622,2184.09,1620.26,2186.21,1620.26Zm0,8.28c1.08,0,1.74-1,1.74-3.14s-0.66-3.15-1.74-3.15-1.75,1.16-1.75,3.15S2185.12,1628.53,2186.21,1628.53Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            </g>\\n            <g>\\n              <path d=\\\"M2258.72,1622.26l2.82-1.82h1.07v9.89h-2.25v-6.9l-1.63,1.06v-2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n              />\\n              <path d=\\\"M2263.67,1622.26l2.82-1.82h1.07v9.89h-2.25v-6.9l-1.63,1.06v-2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n              />\\n            </g>\\n            <g>\\n              <path d=\\\"M2342.14,1622.26l2.82-1.82H2346v9.89h-2.25v-6.9l-1.63,1.06v-2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n              />\\n              <path d=\\\"M2349.34,1624l-1.88-.91s1-2.88,3.65-2.88c3.39,0,3.84,2.23,3.84,3.48,0,2.32-3.49,4.62-3.49,4.62h3.67v2h-7.71v-0.56s5.1-4.21,5.1-6a1.4,1.4,0,0,0-1.4-1.57C2350,1622.16,2349.34,1624,2349.34,1624Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            </g>\\n            <g>\\n              <path d=\\\"M2422.77,1622.26l2.82-1.82h1.07v9.89h-2.25v-6.9l-1.63,1.06v-2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n              />\\n              <path d=\\\"M2428.06,1622.43a3.12,3.12,0,0,1,3.27-2.17,3,3,0,0,1,3.25,2.88,2.26,2.26,0,0,1-.88,1.86,2.53,2.53,0,0,1,1.26,2.27,3.36,3.36,0,0,1-3.67,3.25,3.65,3.65,0,0,1-3.72-2.43l2.09-1a1.64,1.64,0,0,0,1.62,1.51,1.28,1.28,0,0,0,1.43-1.31,1.41,1.41,0,0,0-1.43-1.45,1.36,1.36,0,0,0-.43.07v-1.48h0.49a1.24,1.24,0,0,0,1.19-1.25,1.17,1.17,0,0,0-1.22-1.09,1.51,1.51,0,0,0-1.48,1.22Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            </g>\\n            <g>\\n              <path d=\\\"M2505.24,1622.26l2.82-1.82h1.07v9.89h-2.25v-6.9l-1.63,1.06v-2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n              />\\n              <path d=\\\"M2517.68,1626.27v2h-1.15v2.09h-2.11v-2.09h-4.87v-0.67l4.75-7.14h2.23v5.83h1.15Zm-3.29-2.82-1.76,2.82h1.79v-2.82h0Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            </g>\\n            <g>\\n              <path d=\\\"M2585.66,1622.26l2.82-1.82h1.07v9.89h-2.26v-6.9l-1.63,1.06v-2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n              />\\n              <path d=\\\"M2592.28,1627.5a1.63,1.63,0,0,0,1.74,1.13,1.38,1.38,0,0,0,1.42-1.44c0-1.31-1.28-1.74-2.57-1.74a4.22,4.22,0,0,0-1.69.31l0.83-5.33h5v2h-3.12l-0.22,1.38H2594c1.87,0,3.69.73,3.69,3.48,0,1.89-1.55,3.25-3.67,3.25a3.47,3.47,0,0,1-3.53-2.15Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            </g>\\n            <g>\\n              <path d=\\\"M2668.09,1622.26l2.82-1.82H2672v9.89h-2.25v-6.9l-1.63,1.06v-2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n              />\\n              <path d=\\\"M2676.74,1623.83a1.52,1.52,0,0,1,.71-0.14,3.31,3.31,0,0,1,3.15,3.47c0,2.34-1.88,3.36-3.67,3.36-2.22,0-3.95-1.46-3.95-3.36a5.74,5.74,0,0,1,1.56-3.95l2.33-2.77h2.78Zm0.08,4.82a1.47,1.47,0,0,0,1.52-1.5,1.51,1.51,0,1,0-3,0A1.45,1.45,0,0,0,2676.83,1628.65Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"Layer_28\\\" data-name=\\\"Layer 28\\\">\\n        <polygon points=\\\"1357.3 1604.2 1357.3 1595.78 1349.62 1595.78 1349.62 1602.42 1255.08 1602.42 1255.08 1578.85 1349.62 1578.85 1349.62 1585.49 1357.3 1585.49 1357.3 1578.16 1373.66 1591.18 1357.3 1604.2\\\"\\n          fill=\\\"#b3b8b6\\\" />\\n        <g>\\n          <path d=\\\"M1315.66,1619.56c1.7,0,3,.64,3,2.52a2.49,2.49,0,0,0,.88,4.62c0,1.63-1.19,2.76-3.24,2.76h-3.75v-9.89h3.07Zm-0.64,3.87c1,0,1.5-.3,1.5-1.13s-0.52-1-1.5-1h-0.18v2.13H1315Zm0.53,4.28c1.07,0,1.65-.32,1.65-1.1s-0.59-1.24-1.65-1.24h-0.71v2.34h0.71Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          <path d=\\\"M1322.34,1626.68a1.26,1.26,0,0,0,1.33,1.27,1.69,1.69,0,0,0,1.5-.68l1.54,0.77a3.42,3.42,0,0,1-3.19,1.61,3.26,3.26,0,1,1,0-6.51,3,3,0,0,1,3.3,3.26,2.27,2.27,0,0,1,0,.29h-4.46Zm2.4-1.18a1.09,1.09,0,0,0-1.16-1,1.06,1.06,0,0,0-1.18,1h2.34Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          <path d=\\\"M1330.37,1623.12a2.8,2.8,0,0,1,2,.77v-0.59h2.12v6.15h-2.1v-0.7h0a2.73,2.73,0,0,1-2,.88A3.26,3.26,0,0,1,1330.37,1623.12Zm0.64,4.7a1.38,1.38,0,0,0,1.43-1.44,1.43,1.43,0,1,0-2.87,0A1.37,1.37,0,0,0,1331,1627.83Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          <path d=\\\"M1336.23,1621h2.12v2.29h1.3v1.62h-1.3v2c0,0.58.14,0.85,0.48,0.85a1,1,0,0,0,.53-0.19l0.53,1.71a3.51,3.51,0,0,1-1.56.38c-1.69,0-2.1-1.26-2.1-2.35v-2.36h-0.89v-1.62h0.89V1621Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          <path d=\\\"M1346,1629.46h-1.49l0.68-2.63H1344l0.38-1.45h1.22l0.46-1.75h-1.28l0.38-1.45h1.28l0.68-2.61h1.49l-0.68,2.61h1.3l0.68-2.61h1.49l-0.68,2.61h1.22l-0.38,1.45h-1.22l-0.46,1.75h1.28l-0.38,1.45h-1.28l-0.68,2.63h-1.49l0.68-2.63h-1.3Zm2.82-5.83h-1.3l-0.46,1.75h1.3Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n        </g>\\n        <line x1=\\\"1392.24\\\" y1=\\\"1468.99\\\" x2=\\\"2696.22\\\" y2=\\\"1468.99\\\" fill=\\\"none\\\" stroke=\\\"#e5662f\\\" stroke-miterlimit=\\\"10\\\" stroke-width=\\\"2\\\"\\n        />\\n        <rect x=\\\"1379.55\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"719.19\\\" fill=\\\"#fffef6\\\" />\\n        <rect x=\\\"1544.35\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"559.8\\\" fill=\\\"#fffef6\\\" />\\n        <rect x=\\\"1709.15\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"559.8\\\" fill=\\\"#fffef6\\\" />\\n        <rect x=\\\"1873.94\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"559.8\\\" fill=\\\"#fffef6\\\" />\\n        <rect x=\\\"2038.74\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"559.8\\\" fill=\\\"#fffef6\\\" />\\n        <rect x=\\\"2203.53\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"559.8\\\" fill=\\\"#fffef6\\\" />\\n        <rect x=\\\"2368.33\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"559.8\\\" fill=\\\"#fffef6\\\" />\\n        <rect x=\\\"2533.12\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"559.8\\\" fill=\\\"#fffef6\\\" />\\n        <rect x=\\\"2697.92\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"559.8\\\" fill=\\\"#fffef6\\\" />\\n        <rect x=\\\"2862.71\\\" y=\\\"804.14\\\" width=\\\"2\\\" height=\\\"559.8\\\" fill=\\\"#fffef6\\\" />\\n        <g>\\n          <path d=\\\"M2010.13,1451.43c7.45,0,13.1,4,13.1,11.93,0,6-3.31,10.08-8.23,11.64l13.83,16.6h-11.64l-12.27-15.87v15.87h-9.15v-40.17h14.36Zm-4.14,17.82c3.46,0,7.6-.24,7.6-5.26s-4.14-5.26-7.6-5.26h-1.07v10.52H2006Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2030.63,1449.72h8.62v19.53h0.1a10.35,10.35,0,0,1,7.16-3.36c4.58,0,11,2.29,11,9.25v16.46h-8.62v-14.12a4.62,4.62,0,0,0-4.48-4.87,5.31,5.31,0,0,0-5.11,4.87v14.12h-8.62v-41.87Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2091.69,1466.62l-19.62,37.64h-9.93l8.62-16.55-11.83-21.08h9.93l7,12.8,5.94-12.8h9.93Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2095.1,1457.32h8.62v9.3H2109v6.57h-5.26v7.94c0,2.34.58,3.46,1.95,3.46a4.07,4.07,0,0,0,2.14-.78l2.14,7a14.26,14.26,0,0,1-6.33,1.56c-6.87,0-8.52-5.11-8.52-9.54v-9.59h-3.6v-6.57h3.6v-9.3Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2112.87,1449.72h8.62v19.53h0.1a10.35,10.35,0,0,1,7.16-3.36c4.58,0,11,2.29,11,9.25v16.46h-8.62v-14.12a4.62,4.62,0,0,0-4.48-4.87,5.31,5.31,0,0,0-5.11,4.87v14.12h-8.62v-41.87Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2145.06,1466.62h8.62v2.63h0.1a10.35,10.35,0,0,1,7.16-3.36c3.31,0,7,1.22,8.72,4.58,2.63-3.16,5.55-4.58,8.28-4.58,4.58,0,9.74,2.29,9.74,9.25v16.46H2179v-14.12c0-2.48-1.31-4.67-4.38-4.67a3.83,3.83,0,0,0-4,3.89v14.9H2162v-14.12c0-2.48-1.31-4.67-4.38-4.67-2.87,0-4,2.19-4,4.19v14.61h-8.62v-25Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2234,1480.84l3.9,7.79s-4.48,3.7-13.2,3.7c-11.34,0-21.76-9.25-21.76-20.74s10.37-20.89,21.76-20.89c8.72,0,13.2,3.7,13.2,3.7l-3.9,7.79a14,14,0,0,0-7.89-2.48c-9.2,0-13.24,6.43-13.24,11.78s4,11.83,13.24,11.83A14,14,0,0,0,2234,1480.84Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2254.66,1465.89c8.28,0,14.9,5.45,14.9,13.24s-6.28,13.2-14.9,13.2c-9,0-15-5.5-15-13.2S2246.24,1465.89,2254.66,1465.89Zm0,19.09a5.61,5.61,0,0,0,5.79-5.84,5.82,5.82,0,1,0-11.64,0A5.57,5.57,0,0,0,2254.61,1485Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2273.51,1466.62h8.62v2.63h0.1a10.35,10.35,0,0,1,7.16-3.36c3.31,0,7,1.22,8.72,4.58,2.63-3.16,5.55-4.58,8.28-4.58,4.58,0,9.74,2.29,9.74,9.25v16.46h-8.62v-14.12c0-2.48-1.31-4.67-4.38-4.67a3.83,3.83,0,0,0-4,3.89v14.9h-8.62v-14.12c0-2.48-1.31-4.67-4.38-4.67-2.87,0-4,2.19-4,4.19v14.61h-8.62v-25Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2338.27,1492.33a11.36,11.36,0,0,1-8.18-3.12v15h-8.62v-37.64H2330v2.82h0.1a11.06,11.06,0,0,1,8.18-3.55c7.3,0,12.42,5.89,12.42,13.2S2345.57,1492.33,2338.27,1492.33Zm-2.58-19.09a5.61,5.61,0,0,0-5.79,5.84,5.82,5.82,0,1,0,11.64,0A5.57,5.57,0,0,0,2335.69,1473.24Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2368,1465.89c8.28,0,14.9,5.45,14.9,13.24s-6.28,13.2-14.9,13.2c-9,0-15-5.5-15-13.2S2359.55,1465.89,2368,1465.89Zm0,19.09a5.61,5.61,0,0,0,5.79-5.84,5.82,5.82,0,1,0-11.64,0A5.57,5.57,0,0,0,2367.92,1485Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2406,1467.84l-2.82,5.65a14.06,14.06,0,0,0-5.55-1.56c-1.9,0-2.68.34-2.68,1.51s1.75,1.7,3.9,2.39c3.31,1,7.6,2.87,7.6,8,0,7.35-6.72,8.52-11.83,8.52a14.94,14.94,0,0,1-9.64-3.36l3.51-5.89s3.41,2.87,6.18,2.87c1.22,0,2.68-.15,2.68-1.8s-2.73-1.95-5.55-3.41c-2.53-1.32-5.06-3.07-5.06-6.82,0-5.11,4.33-8,10.91-8A19.08,19.08,0,0,1,2406,1467.84Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2417.84,1480.3c0,3.85,3.21,5.16,5.4,5.16,2.78,0,4-.54,6.09-2.78l6.23,3.12c-2.82,4.72-7.4,6.53-13,6.53-7.55,0-13.73-5.94-13.73-13.2a13.52,13.52,0,0,1,13.73-13.24c7.6,0,13.39,4.48,13.39,13.24a9.15,9.15,0,0,1,0,1.17h-18.11Zm9.74-4.77a4.43,4.43,0,0,0-4.72-4c-3,0-4.62,1.75-4.77,4h9.5Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2439.94,1466.62h8.62v3.6h0.1s2.73-4.33,7.64-4.33a10.35,10.35,0,0,1,5.45,1.56l-3.6,7.3a7.27,7.27,0,0,0-4.48-1.36c-4.48,0-5.11,4.43-5.11,5.06v13.15h-8.62v-25Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2495,1480.25c0,7.89-4.48,12.08-12.51,12.08a13.91,13.91,0,0,1-9.4-3.85l2.92-7.64s2.87,2.73,5.21,2.73c2.63,0,4.63-1.61,4.63-5.65v-26.49H2495v28.82Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2523.55,1459.46h-14.07v8h13v8h-13v16.12h-9.15v-40.17h23.22v8Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\"\\n          />\\n          <path d=\\\"M2543.61,1473.78v7.45h-15.68v-7.45h15.68Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2571.22,1469.93a11.38,11.38,0,0,1,7.06,10.86c0,6.77-7.45,11.54-15,11.54-7.79,0-15-4.77-15-11.54a11.34,11.34,0,0,1,7-10.86,10,10,0,0,1-5.31-9.11c0-5.94,6.67-10.13,13.29-10.13,6.87,0,13.15,4.19,13.15,10.13A10,10,0,0,1,2571.22,1469.93Zm-8,14.51a5.11,5.11,0,1,0-5.06-5.11A4.87,4.87,0,0,0,2563.23,1484.44Zm0-26.83a4.5,4.5,0,1,0,0,9,4.26,4.26,0,0,0,4.43-4.48A4.32,4.32,0,0,0,2563.28,1457.61Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2597.71,1450.7c8.62,0,16.31,6.91,16.31,20.84,0,14.9-7.69,20.79-16.31,20.79s-16.36-5.89-16.36-20.79C2581.35,1457.61,2589.09,1450.7,2597.71,1450.7Zm0,33.6c4.38,0,7.06-4.09,7.06-12.76,0-8.13-2.68-12.81-7.06-12.81s-7.11,4.72-7.11,12.81C2590.6,1480.2,2593.28,1484.29,2597.71,1484.29Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n          <path d=\\\"M2640.07,1469.93a11.38,11.38,0,0,1,7.06,10.86c0,6.77-7.45,11.54-15,11.54-7.79,0-15-4.77-15-11.54a11.34,11.34,0,0,1,7-10.86,10,10,0,0,1-5.31-9.11c0-5.94,6.67-10.13,13.29-10.13,6.87,0,13.15,4.19,13.15,10.13A10,10,0,0,1,2640.07,1469.93Zm-8,14.51a5.11,5.11,0,1,0-5.06-5.11A4.87,4.87,0,0,0,2632.08,1484.44Zm0-26.83a4.5,4.5,0,1,0,0,9,4.26,4.26,0,0,0,4.43-4.48A4.32,4.32,0,0,0,2632.13,1457.61Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#e5662f\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2409.48,1534h-4.83l-1.46-3.94h-7.5l-1.46,3.94h-4.83l8-19.71h4.16Zm-10-13.62h0l-2.2,5.73h4.44Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2410.25,1521.72h4.23V1523h0a5.08,5.08,0,0,1,3.51-1.65c2.25,0,5.38,1.12,5.38,4.54V1534h-4.23v-6.93a2.27,2.27,0,0,0-2.2-2.39,2.61,2.61,0,0,0-2.51,2.39V1534h-4.23v-12.26Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2429,1535.3a3.69,3.69,0,0,0,3.32,1.58,2.82,2.82,0,0,0,3-2.87v-0.91c-0.91,1-2.34,1.24-4,1.24a6.15,6.15,0,0,1-6.09-6.48c0-3.58,2.51-6.5,6.09-6.5a5.6,5.6,0,0,1,3.94,1.46h0.07v-1.1h4.23v12.59c0,4.11-3,6.24-7.22,6.24-2.56,0-5.5-.57-6.79-3.56Zm3.56-4.56a2.75,2.75,0,0,0,2.84-2.87,2.86,2.86,0,1,0-5.71,0A2.73,2.73,0,0,0,2432.53,1530.73Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2446.37,1527.56c0,2.41.65,3.34,2.41,3.34s2.41-.93,2.41-3.34v-5.83h4.23v6.86c0,4.11-2.05,5.76-6.64,5.76s-6.64-1.65-6.64-5.76v-6.86h4.23v5.83Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2458.05,1513.43h4.23V1534h-4.23v-20.55Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2470.36,1521.37a5.57,5.57,0,0,1,4,1.53v-1.17h4.23V1534h-4.18v-1.39h0a5.43,5.43,0,0,1-4,1.74,6.15,6.15,0,0,1-6.09-6.48C2464.27,1524.28,2466.78,1521.37,2470.36,1521.37Zm1.27,9.37a2.75,2.75,0,0,0,2.84-2.87,2.86,2.86,0,1,0-5.71,0A2.73,2.73,0,0,0,2471.63,1530.73Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2481.48,1521.72h4.23v1.77h0a4.8,4.8,0,0,1,3.75-2.13,5.08,5.08,0,0,1,2.68.76l-1.77,3.58a3.57,3.57,0,0,0-2.2-.67,2.54,2.54,0,0,0-2.51,2.48V1534h-4.23v-12.26Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2497.11,1521.46l-3.75-1.82s1.91-5.74,7.26-5.74c6.76,0,7.65,4.44,7.65,6.93,0,4.61-7,9.2-7,9.2h7.31V1534h-15.36v-1.12s10.16-8.39,10.16-12c0-.72-0.17-3.13-2.8-3.13C2498.47,1517.71,2497.11,1521.46,2497.11,1521.46Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2531.5,1528.7l1.91,3.82a10.63,10.63,0,0,1-6.48,1.82c-5.57,0-10.68-4.54-10.68-10.18s5.09-10.25,10.68-10.25a10.63,10.63,0,0,1,6.48,1.82l-1.91,3.82a6.85,6.85,0,0,0-3.87-1.22c-4.52,0-6.5,3.15-6.5,5.78s2,5.81,6.5,5.81A6.85,6.85,0,0,0,2531.5,1528.7Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2541.64,1521.37c4.06,0,7.31,2.68,7.31,6.5s-3.08,6.48-7.31,6.48c-4.42,0-7.38-2.7-7.38-6.48S2537.5,1521.37,2541.64,1521.37Zm0,9.37a2.75,2.75,0,0,0,2.84-2.87,2.86,2.86,0,1,0-5.71,0A2.73,2.73,0,0,0,2541.61,1530.73Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2550.89,1521.72h4.23V1523h0a5.08,5.08,0,0,1,3.51-1.65c2.25,0,5.38,1.12,5.38,4.54V1534h-4.23v-6.93a2.27,2.27,0,0,0-2.2-2.39,2.61,2.61,0,0,0-2.51,2.39V1534h-4.23v-12.26Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2567.26,1517.16h4.23v4.56h2.58V1525h-2.58v3.89c0,1.15.29,1.7,1,1.7a2,2,0,0,0,1.05-.38l1.05,3.42a7,7,0,0,1-3.11.76c-3.37,0-4.18-2.51-4.18-4.68V1525h-1.77v-3.23h1.77v-4.56Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2576,1521.72h4.23v1.77h0a4.8,4.8,0,0,1,3.75-2.13,5.08,5.08,0,0,1,2.68.76l-1.77,3.58a3.57,3.57,0,0,0-2.2-.67,2.54,2.54,0,0,0-2.51,2.48V1534H2576v-12.26Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2594.24,1521.37c4.06,0,7.31,2.68,7.31,6.5s-3.08,6.48-7.31,6.48c-4.42,0-7.38-2.7-7.38-6.48S2590.11,1521.37,2594.24,1521.37Zm0,9.37a2.75,2.75,0,0,0,2.84-2.87,2.86,2.86,0,1,0-5.71,0A2.73,2.73,0,0,0,2594.22,1530.73Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2603.49,1513.43h4.23V1534h-4.23v-20.55Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2610.59,1513.43h4.23V1534h-4.23v-20.55Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2621.2,1528.44a2.51,2.51,0,0,0,2.65,2.53,3.36,3.36,0,0,0,3-1.36l3.06,1.53c-1.39,2.32-3.63,3.2-6.36,3.2a6.49,6.49,0,1,1,0-13c3.73,0,6.57,2.2,6.57,6.5a4.32,4.32,0,0,1,0,.57h-8.89Zm4.78-2.34a2.18,2.18,0,0,0-2.32-2,2.11,2.11,0,0,0-2.34,2H2626Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n          <path d=\\\"M2637.31,1521.37a5.57,5.57,0,0,1,4,1.53v-9.46h4.23V1534h-4.18v-1.39h0a5.43,5.43,0,0,1-4,1.74,6.15,6.15,0,0,1-6.09-6.48C2631.22,1524.28,2633.73,1521.37,2637.31,1521.37Zm1.27,9.37a2.75,2.75,0,0,0,2.84-2.87,2.86,2.86,0,1,0-5.71,0A2.73,2.73,0,0,0,2638.58,1530.73Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1469.34,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1485.75,856.36h-4.47v2.88h5v2.25h-7.74V849.35H1486v2.25h-4.74v2.52h4.47v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1491.13,861.49l-3.89-12.14h3l1.48,5.13c0.41,1.44.79,2.83,1.08,4.34h0.05c0.31-1.46.68-2.9,1.1-4.29l1.55-5.19h2.92l-4.09,12.14h-3.21Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1506.94,856.36h-4.47v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.74v2.52h4.47v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1509.33,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1465.59,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6L1473,992h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1475.42,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1485.68,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1494.73,988.88l-0.86,3.11H1491l3.71-12.14h3.6L1502.1,992h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1512.18,991.65a7.82,7.82,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1514,979.86h2.72v5.37h0.05c0.27-.47.56-0.9,0.83-1.33l2.75-4h3.37l-4,5.17,4.23,7h-3.21l-3-5.24-1,1.28v4H1514V979.86Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1466.94,1108.55a24.49,24.49,0,0,1,3.71-.25,7.81,7.81,0,0,1,5,1.3,5.37,5.37,0,0,1,2.05,4.57,6.15,6.15,0,0,1-2,4.92,8.71,8.71,0,0,1-5.6,1.57,23.7,23.7,0,0,1-3.11-.18v-11.92Zm2.75,9.9a5,5,0,0,0,1,.05c2.48,0,4.1-1.35,4.1-4.25a3.48,3.48,0,0,0-3.82-3.85,5.72,5.72,0,0,0-1.24.11v7.94Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1486.69,1115.4h-4.47v2.88h5v2.25h-7.74v-12.14H1487v2.25h-4.74v2.52h4.47v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1498,1120.18a7.82,7.82,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1502.8,1117.41l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1512.88,1120.53v-5l-3.83-7.17h3.13l1.24,2.92c0.38,0.88.63,1.53,0.94,2.32h0c0.27-.76.56-1.46,0.92-2.32l1.22-2.92h3.08l-4,7.08v5.06h-2.74Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1477.83,1249.49a13.58,13.58,0,0,1-4.05.68,6.76,6.76,0,0,1-4.93-1.64,5.87,5.87,0,0,1-1.71-4.41c0-4,3-6.34,6.93-6.34a8.36,8.36,0,0,1,3.37.59l-0.58,2.2a6.72,6.72,0,0,0-2.83-.52,4,4,0,1,0,1.15,7.72v-2.54h-1.87v-2.14h4.52v6.39Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1480,1238.08a24.11,24.11,0,0,1,3.65-.25,6.19,6.19,0,0,1,3.93,1,3.08,3.08,0,0,1,1.12,2.54,3.22,3.22,0,0,1-2.14,3v0.05a3.06,3.06,0,0,1,1.62,2.27c0.38,1.37.76,3,1,3.42h-2.81a15.16,15.16,0,0,1-.85-2.83c-0.32-1.51-.85-1.93-2-1.94h-0.83v4.77H1480v-12Zm2.72,5.22h1.08c1.37,0,2.18-.68,2.18-1.75s-0.76-1.67-2-1.69a6.85,6.85,0,0,0-1.24.09v3.35Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1493.64,1246.94l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1505.37,1237.91v12.14h-2.75v-12.14h2.75Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1507.75,1250.05v-12.14h3.2l2.52,4.45a35.18,35.18,0,0,1,2,4.16h0.05a45,45,0,0,1-.23-5.06v-3.55h2.52v12.14h-2.88l-2.59-4.68a45.16,45.16,0,0,1-2.11-4.29l-0.05,0c0.07,1.6.11,3.31,0.11,5.29v3.66h-2.52Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1636.13,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1652.55,856.36h-4.47v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.74v2.52h4.47v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1657.93,861.49L1654,849.35h3l1.48,5.13c0.41,1.44.79,2.83,1.08,4.34h0.05c0.31-1.46.68-2.9,1.1-4.29l1.55-5.19h2.92l-4.09,12.14h-3.21Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1673.74,856.36h-4.47v2.88h5v2.25h-7.74V849.35H1674v2.25h-4.74v2.52h4.47v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1676.13,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1632.39,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1642.22,982.16H1639v-2.3h9.33v2.3H1645V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1652.48,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1661.53,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6L1668.9,992h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1679,991.65a7.82,7.82,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1680.77,979.86h2.72v5.37h0.05c0.27-.47.56-0.9,0.83-1.33l2.75-4h3.37l-4,5.17,4.23,7h-3.21l-3-5.24-1,1.28v4h-2.72V979.86Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1633.74,1108.55a24.49,24.49,0,0,1,3.71-.25,7.81,7.81,0,0,1,5,1.3,5.37,5.37,0,0,1,2.05,4.57,6.15,6.15,0,0,1-2,4.92,8.71,8.71,0,0,1-5.6,1.57,23.7,23.7,0,0,1-3.11-.18v-11.92Zm2.75,9.9a5,5,0,0,0,1,.05c2.48,0,4.1-1.35,4.1-4.25a3.48,3.48,0,0,0-3.82-3.85,5.72,5.72,0,0,0-1.24.11v7.94Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1653.49,1115.4H1649v2.88h5v2.25h-7.74v-12.14h7.49v2.25H1649v2.52h4.47v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1664.79,1120.18a7.82,7.82,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1669.6,1117.41l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1679.68,1120.53v-5l-3.83-7.17H1679l1.24,2.92c0.38,0.88.63,1.53,0.94,2.32h0c0.27-.76.56-1.46,0.92-2.32l1.22-2.92h3.08l-4,7.08v5.06h-2.74Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1644.63,1249.49a13.58,13.58,0,0,1-4.05.68,6.76,6.76,0,0,1-4.93-1.64,5.87,5.87,0,0,1-1.71-4.41c0-4,3-6.34,6.93-6.34a8.36,8.36,0,0,1,3.37.59l-0.58,2.2a6.72,6.72,0,0,0-2.83-.52,4,4,0,1,0,1.15,7.72v-2.54h-1.87v-2.14h4.52v6.39Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1646.77,1238.08a24.11,24.11,0,0,1,3.65-.25,6.19,6.19,0,0,1,3.93,1,3.08,3.08,0,0,1,1.12,2.54,3.22,3.22,0,0,1-2.14,3v0.05a3.06,3.06,0,0,1,1.62,2.27c0.38,1.37.76,3,1,3.42h-2.81a15.16,15.16,0,0,1-.85-2.83c-0.32-1.51-.85-1.93-2-1.94h-0.83v4.77h-2.72v-12Zm2.72,5.22h1.08c1.37,0,2.18-.68,2.18-1.75s-0.76-1.67-2-1.69a6.85,6.85,0,0,0-1.24.09v3.35Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1660.43,1246.94l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1672.17,1237.91v12.14h-2.75v-12.14h2.75Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1674.54,1250.05v-12.14h3.2l2.52,4.45a35.18,35.18,0,0,1,2,4.16h0.05a45,45,0,0,1-.23-5.06v-3.55h2.52v12.14h-2.88l-2.59-4.68a45.16,45.16,0,0,1-2.11-4.29l-0.05,0c0.07,1.6.11,3.31,0.11,5.29v3.66h-2.52Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1803.19,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1819.61,856.36h-4.46v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1825,861.49l-3.89-12.14h3l1.48,5.13c0.41,1.44.79,2.83,1.08,4.34h0.05c0.31-1.46.68-2.9,1.1-4.29l1.55-5.19h2.92l-4.09,12.14H1825Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1840.79,856.36h-4.46v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1843.19,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1799.45,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1809.28,982.16H1806v-2.3h9.33v2.3H1812V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1819.54,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1828.59,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6L1836,992h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1846,991.65a7.81,7.81,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1847.83,979.86h2.72v5.37h0.05c0.27-.47.56-0.9,0.83-1.33l2.75-4h3.37l-4,5.17,4.23,7h-3.21l-3-5.24-1,1.28v4h-2.72V979.86Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1800.8,1108.55a24.5,24.5,0,0,1,3.71-.25,7.81,7.81,0,0,1,5,1.3,5.37,5.37,0,0,1,2.05,4.57,6.16,6.16,0,0,1-2,4.92,8.71,8.71,0,0,1-5.6,1.57,23.71,23.71,0,0,1-3.12-.18v-11.92Zm2.75,9.9a5,5,0,0,0,1,.05c2.49,0,4.11-1.35,4.11-4.25a3.48,3.48,0,0,0-3.82-3.85,5.73,5.73,0,0,0-1.24.11v7.94Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1820.54,1115.4h-4.46v2.88h5v2.25h-7.74v-12.14h7.49v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1831.85,1120.18a7.81,7.81,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1836.65,1117.41l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1846.73,1120.53v-5l-3.83-7.17H1846l1.24,2.92c0.38,0.88.63,1.53,0.94,2.32h0c0.27-.76.56-1.46,0.92-2.32l1.22-2.92h3.08l-4,7.08v5.06h-2.74Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1811.69,1249.49a13.59,13.59,0,0,1-4.05.68,6.76,6.76,0,0,1-4.93-1.64,5.87,5.87,0,0,1-1.71-4.41c0-4,3-6.34,6.93-6.34a8.35,8.35,0,0,1,3.37.59l-0.58,2.2a6.72,6.72,0,0,0-2.83-.52,4,4,0,1,0,1.15,7.72v-2.54h-1.87v-2.14h4.52v6.39Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1813.83,1238.08a24.12,24.12,0,0,1,3.66-.25,6.19,6.19,0,0,1,3.92,1,3.08,3.08,0,0,1,1.12,2.54,3.22,3.22,0,0,1-2.14,3v0.05a3.06,3.06,0,0,1,1.62,2.27c0.38,1.37.76,3,1,3.42h-2.81a15.19,15.19,0,0,1-.85-2.83c-0.32-1.51-.85-1.93-2-1.94h-0.83v4.77h-2.72v-12Zm2.72,5.22h1.08c1.37,0,2.18-.68,2.18-1.75s-0.76-1.67-2-1.69a6.85,6.85,0,0,0-1.24.09v3.35Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1827.49,1246.94l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1839.23,1237.91v12.14h-2.75v-12.14h2.75Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1841.6,1250.05v-12.14h3.2l2.52,4.45a35.26,35.26,0,0,1,2,4.16h0.05a45.12,45.12,0,0,1-.23-5.06v-3.55h2.52v12.14h-2.88l-2.59-4.68a44.93,44.93,0,0,1-2.11-4.29l-0.05,0c0.07,1.6.11,3.31,0.11,5.29v3.66h-2.52Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1961.66,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1978.08,856.36h-4.46v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1983.46,861.49l-3.89-12.14h3l1.48,5.13c0.41,1.44.79,2.83,1.08,4.34h0.05c0.31-1.46.68-2.9,1.1-4.29l1.55-5.19h2.92l-4.09,12.14h-3.21Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1999.26,856.36h-4.46v2.88h5v2.25H1992V849.35h7.49v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2001.65,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1957.91,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57H1961Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1967.74,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1978,982.16h-3.26v-2.3h9.33v2.3h-3.31V992H1978v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1987.06,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2004.5,991.65a7.82,7.82,0,0,1-3.12.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.86,6.86,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2006.3,979.86H2009v5.37h0.05c0.27-.47.56-0.9,0.83-1.33l2.75-4H2016l-4,5.17,4.23,7H2013l-3-5.24-1,1.28v4h-2.72V979.86Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1959.26,1108.55a24.48,24.48,0,0,1,3.71-.25,7.8,7.8,0,0,1,5,1.3,5.37,5.37,0,0,1,2.05,4.57,6.15,6.15,0,0,1-2,4.92,8.71,8.71,0,0,1-5.6,1.57,23.69,23.69,0,0,1-3.11-.18v-11.92Zm2.75,9.9a5,5,0,0,0,1,.05c2.48,0,4.1-1.35,4.1-4.25a3.48,3.48,0,0,0-3.82-3.85,5.72,5.72,0,0,0-1.24.11v7.94Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1979,1115.4h-4.47v2.88h5v2.25h-7.74v-12.14h7.49v2.25h-4.74v2.52H1979v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1990.32,1120.18a7.82,7.82,0,0,1-3.12.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.86,6.86,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1995.12,1117.41l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2005.2,1120.53v-5l-3.83-7.17h3.13l1.24,2.92c0.38,0.88.63,1.53,0.94,2.32h0c0.27-.76.56-1.46,0.92-2.32l1.22-2.92h3.08l-4,7.08v5.06h-2.74Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1970.16,1249.49a13.57,13.57,0,0,1-4.05.68,6.76,6.76,0,0,1-4.93-1.64,5.87,5.87,0,0,1-1.71-4.41c0-4,3-6.34,6.93-6.34a8.36,8.36,0,0,1,3.37.59l-0.58,2.2a6.72,6.72,0,0,0-2.83-.52,4,4,0,1,0,1.15,7.72v-2.54h-1.87v-2.14h4.52v6.39Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1972.3,1238.08a24.1,24.1,0,0,1,3.65-.25,6.2,6.2,0,0,1,3.93,1,3.08,3.08,0,0,1,1.12,2.54,3.22,3.22,0,0,1-2.14,3v0.05a3.06,3.06,0,0,1,1.62,2.27c0.38,1.37.76,3,1,3.42h-2.81a15.14,15.14,0,0,1-.85-2.83c-0.32-1.51-.85-1.93-2-1.94H1975v4.77h-2.72v-12Zm2.72,5.22h1.08c1.37,0,2.18-.68,2.18-1.75s-0.76-1.67-2-1.69a6.85,6.85,0,0,0-1.24.09v3.35Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1986,1246.94l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11H1986Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57H1989Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1997.69,1237.91v12.14h-2.75v-12.14h2.75Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2000.07,1250.05v-12.14h3.21l2.52,4.45a35.11,35.11,0,0,1,2,4.16h0.05a44.89,44.89,0,0,1-.23-5.06v-3.55h2.52v12.14h-2.88l-2.59-4.68a45.4,45.4,0,0,1-2.11-4.29l-0.05,0c0.07,1.6.11,3.31,0.11,5.29v3.66h-2.52Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2125.13,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2141.55,856.36h-4.47v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.74v2.52h4.47v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2146.93,861.49L2143,849.35h3l1.48,5.13c0.41,1.44.79,2.83,1.08,4.34h0.05c0.31-1.46.68-2.9,1.1-4.29l1.55-5.19h2.92l-4.09,12.14h-3.21Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2162.73,856.36h-4.47v2.88h5v2.25h-7.74V849.35H2163v2.25h-4.74v2.52h4.47v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2165.12,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2121.38,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2131.21,982.16H2128v-2.3h9.33v2.3H2134V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2141.47,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2150.52,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2168,991.65a7.82,7.82,0,0,1-3.12.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.86,6.86,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2169.77,979.86h2.72v5.37h0.05c0.27-.47.56-0.9,0.83-1.33l2.75-4h3.37l-4,5.17,4.23,7h-3.21l-3-5.24-1,1.28v4h-2.72V979.86Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2122.73,1108.55a24.48,24.48,0,0,1,3.71-.25,7.8,7.8,0,0,1,5,1.3,5.37,5.37,0,0,1,2.05,4.57,6.15,6.15,0,0,1-2,4.92,8.71,8.71,0,0,1-5.6,1.57,23.69,23.69,0,0,1-3.11-.18v-11.92Zm2.75,9.9a5,5,0,0,0,1,.05c2.48,0,4.1-1.35,4.1-4.25a3.48,3.48,0,0,0-3.82-3.85,5.72,5.72,0,0,0-1.24.11v7.94Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2142.48,1115.4H2138v2.88h5v2.25h-7.74v-12.14h7.49v2.25H2138v2.52h4.47v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2153.79,1120.18a7.82,7.82,0,0,1-3.12.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.86,6.86,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2158.59,1117.41l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2168.67,1120.53v-5l-3.83-7.17H2168l1.24,2.92c0.38,0.88.63,1.53,0.94,2.32h0c0.27-.76.56-1.46,0.92-2.32l1.22-2.92h3.08l-4,7.08v5.06h-2.74Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2133.63,1249.49a13.57,13.57,0,0,1-4.05.68,6.76,6.76,0,0,1-4.93-1.64,5.87,5.87,0,0,1-1.71-4.41c0-4,3-6.34,6.93-6.34a8.36,8.36,0,0,1,3.37.59l-0.58,2.2a6.72,6.72,0,0,0-2.83-.52,4,4,0,1,0,1.15,7.72v-2.54h-1.87v-2.14h4.52v6.39Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2135.77,1238.08a24.1,24.1,0,0,1,3.65-.25,6.2,6.2,0,0,1,3.93,1,3.08,3.08,0,0,1,1.12,2.54,3.22,3.22,0,0,1-2.14,3v0.05a3.06,3.06,0,0,1,1.62,2.27c0.38,1.37.76,3,1,3.42h-2.81a15.14,15.14,0,0,1-.85-2.83c-0.32-1.51-.85-1.93-2-1.94h-0.83v4.77h-2.72v-12Zm2.72,5.22h1.08c1.37,0,2.18-.68,2.18-1.75s-0.76-1.67-2-1.69a6.85,6.85,0,0,0-1.24.09v3.35Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2149.43,1246.94l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2161.16,1237.91v12.14h-2.75v-12.14h2.75Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2163.54,1250.05v-12.14h3.21l2.52,4.45a35.11,35.11,0,0,1,2,4.16h0.05a44.89,44.89,0,0,1-.23-5.06v-3.55h2.52v12.14h-2.88l-2.59-4.68a45.4,45.4,0,0,1-2.11-4.29l-0.05,0c0.07,1.6.11,3.31,0.11,5.29v3.66h-2.52Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2295,849.35h2.75v9.83h4.83v2.3H2295V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2311.42,856.36H2307v2.88h5v2.25h-7.74V849.35h7.49v2.25H2307v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2316.81,861.49l-3.89-12.14h3l1.48,5.13c0.41,1.44.79,2.83,1.08,4.34h0.05c0.31-1.46.68-2.9,1.1-4.29l1.55-5.19h2.92L2320,861.49h-3.21Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2332.61,856.36h-4.46v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.73v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2335,849.35h2.75v9.83h4.83v2.3H2335V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2291.26,988.88L2290.4,992h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2301.09,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2311.35,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2320.4,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2337.85,991.65a7.81,7.81,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2339.65,979.86h2.72v5.37h0.05c0.27-.47.56-0.9,0.83-1.33l2.75-4h3.37l-4,5.17,4.23,7h-3.21l-3-5.24-1,1.28v4h-2.72V979.86Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2292.61,1108.55a24.5,24.5,0,0,1,3.71-.25,7.81,7.81,0,0,1,5,1.3,5.37,5.37,0,0,1,2.05,4.57,6.16,6.16,0,0,1-2,4.92,8.71,8.71,0,0,1-5.6,1.57,23.71,23.71,0,0,1-3.12-.18v-11.92Zm2.75,9.9a5,5,0,0,0,1,.05c2.49,0,4.11-1.35,4.11-4.25a3.48,3.48,0,0,0-3.82-3.85,5.73,5.73,0,0,0-1.24.11v7.94Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2312.36,1115.4h-4.46v2.88h5v2.25h-7.74v-12.14h7.49v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2323.66,1120.18a7.81,7.81,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2328.47,1117.41l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2338.55,1120.53v-5l-3.83-7.17h3.13l1.24,2.92c0.38,0.88.63,1.53,0.94,2.32h0c0.27-.76.56-1.46,0.92-2.32l1.22-2.92h3.08l-4,7.08v5.06h-2.74Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2303.51,1249.49a13.59,13.59,0,0,1-4.05.68,6.76,6.76,0,0,1-4.93-1.64,5.87,5.87,0,0,1-1.71-4.41c0-4,3-6.34,6.93-6.34a8.35,8.35,0,0,1,3.37.59l-0.58,2.2a6.72,6.72,0,0,0-2.83-.52,4,4,0,1,0,1.15,7.72v-2.54H2299v-2.14h4.52v6.39Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2305.64,1238.08a24.12,24.12,0,0,1,3.66-.25,6.19,6.19,0,0,1,3.92,1,3.08,3.08,0,0,1,1.12,2.54,3.22,3.22,0,0,1-2.14,3v0.05a3.06,3.06,0,0,1,1.62,2.27c0.38,1.37.76,3,1,3.42H2312a15.19,15.19,0,0,1-.85-2.83c-0.32-1.51-.85-1.93-2-1.94h-0.83v4.77h-2.72v-12Zm2.72,5.22h1.08c1.37,0,2.18-.68,2.18-1.75s-0.76-1.67-2-1.69a6.85,6.85,0,0,0-1.24.09v3.35Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2319.31,1246.94l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2331,1237.91v12.14h-2.75v-12.14H2331Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2333.42,1250.05v-12.14h3.2l2.52,4.45a35.26,35.26,0,0,1,2,4.16h0.05a45.12,45.12,0,0,1-.23-5.06v-3.55h2.52v12.14h-2.88l-2.59-4.68a44.93,44.93,0,0,1-2.11-4.29l-0.05,0c0.07,1.6.11,3.31,0.11,5.29v3.66h-2.52Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2455.86,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2472.28,856.36h-4.46v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.73v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2477.66,861.49l-3.89-12.14h3l1.48,5.13c0.41,1.44.79,2.83,1.08,4.34h0.05c0.31-1.46.68-2.9,1.1-4.29l1.55-5.19h2.92l-4.09,12.14h-3.21Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2493.46,856.36H2489v2.88h5v2.25h-7.74V849.35h7.49v2.25H2489v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2495.86,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2452.12,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2461.94,982.16h-3.26v-2.3H2468v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2472.2,982.16h-3.26v-2.3h9.33v2.3H2475V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2481.26,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2498.7,991.65a7.81,7.81,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2500.5,979.86h2.72v5.37h0.05c0.27-.47.56-0.9,0.83-1.33l2.75-4h3.37l-4,5.17,4.23,7h-3.21l-3-5.24-1,1.28v4h-2.72V979.86Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2453.47,1108.55a24.5,24.5,0,0,1,3.71-.25,7.81,7.81,0,0,1,5,1.3,5.37,5.37,0,0,1,2.05,4.57,6.16,6.16,0,0,1-2,4.92,8.71,8.71,0,0,1-5.6,1.57,23.71,23.71,0,0,1-3.12-.18v-11.92Zm2.75,9.9a5,5,0,0,0,1,.05c2.49,0,4.11-1.35,4.11-4.25a3.48,3.48,0,0,0-3.82-3.85,5.73,5.73,0,0,0-1.24.11v7.94Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2473.21,1115.4h-4.46v2.88h5v2.25H2466v-12.14h7.49v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2484.52,1120.18a7.81,7.81,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2489.32,1117.41l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2499.4,1120.53v-5l-3.83-7.17h3.13l1.24,2.92c0.38,0.88.63,1.53,0.94,2.32h0c0.27-.76.56-1.46,0.92-2.32l1.22-2.92h3.08l-4,7.08v5.06h-2.74Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2464.36,1249.49a13.59,13.59,0,0,1-4.05.68,6.76,6.76,0,0,1-4.93-1.64,5.87,5.87,0,0,1-1.71-4.41c0-4,3-6.34,6.93-6.34a8.35,8.35,0,0,1,3.37.59l-0.58,2.2a6.72,6.72,0,0,0-2.83-.52,4,4,0,1,0,1.15,7.72v-2.54h-1.87v-2.14h4.52v6.39Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2466.5,1238.08a24.12,24.12,0,0,1,3.66-.25,6.19,6.19,0,0,1,3.92,1,3.08,3.08,0,0,1,1.12,2.54,3.22,3.22,0,0,1-2.14,3v0.05a3.06,3.06,0,0,1,1.62,2.27c0.38,1.37.76,3,1,3.42h-2.81a15.19,15.19,0,0,1-.85-2.83c-0.32-1.51-.85-1.93-2-1.94h-0.83v4.77h-2.72v-12Zm2.72,5.22h1.08c1.37,0,2.18-.68,2.18-1.75s-0.76-1.67-2-1.69a6.85,6.85,0,0,0-1.24.09v3.35Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2480.16,1246.94l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2491.9,1237.91v12.14h-2.75v-12.14h2.75Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2494.27,1250.05v-12.14h3.2l2.52,4.45a35.26,35.26,0,0,1,2,4.16H2502a45.12,45.12,0,0,1-.23-5.06v-3.55h2.52v12.14h-2.88l-2.59-4.68a44.93,44.93,0,0,1-2.11-4.29l-0.05,0c0.07,1.6.11,3.31,0.11,5.29v3.66h-2.52Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2620.64,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2637.05,856.36h-4.46v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2642.44,861.49l-3.89-12.14h3l1.48,5.13c0.41,1.44.79,2.83,1.08,4.34h0.05c0.31-1.46.68-2.9,1.1-4.29l1.55-5.19h2.92l-4.09,12.14h-3.21Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2658.24,856.36h-4.46v2.88h5v2.25H2651V849.35h7.49v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2660.63,849.35h2.75v9.83h4.83v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2616.89,988.88L2616,992h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57H2620Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2626.72,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2637,982.16h-3.26v-2.3H2643v2.3h-3.31V992H2637v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2646,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6L2653.4,992h-3l-0.94-3.11H2646Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2663.48,991.65a7.82,7.82,0,0,1-3.12.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.86,6.86,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2665.28,979.86H2668v5.37H2668c0.27-.47.56-0.9,0.83-1.33l2.75-4H2675l-4,5.17,4.23,7H2672l-3-5.24-1,1.28v4h-2.72V979.86Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2618.24,1108.55a24.48,24.48,0,0,1,3.71-.25,7.8,7.8,0,0,1,5,1.3,5.37,5.37,0,0,1,2.05,4.57,6.15,6.15,0,0,1-2,4.92,8.71,8.71,0,0,1-5.6,1.57,23.69,23.69,0,0,1-3.11-.18v-11.92Zm2.75,9.9a5,5,0,0,0,1,.05c2.48,0,4.1-1.35,4.1-4.25a3.48,3.48,0,0,0-3.82-3.85,5.72,5.72,0,0,0-1.24.11v7.94Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2638,1115.4h-4.47v2.88h5v2.25h-7.74v-12.14h7.49v2.25h-4.74v2.52H2638v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2649.3,1120.18a7.82,7.82,0,0,1-3.12.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.86,6.86,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2654.1,1117.41l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2664.18,1120.53v-5l-3.83-7.17h3.13l1.24,2.92c0.38,0.88.63,1.53,0.94,2.32h0c0.27-.76.56-1.46,0.92-2.32l1.22-2.92h3.08l-4,7.08v5.06h-2.74Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2629.14,1249.49a13.57,13.57,0,0,1-4.05.68,6.76,6.76,0,0,1-4.93-1.64,5.87,5.87,0,0,1-1.71-4.41c0-4,3-6.34,6.93-6.34a8.36,8.36,0,0,1,3.37.59l-0.58,2.2a6.72,6.72,0,0,0-2.83-.52,4,4,0,1,0,1.15,7.72v-2.54h-1.87v-2.14h4.52v6.39Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2631.27,1238.08a24.1,24.1,0,0,1,3.65-.25,6.2,6.2,0,0,1,3.93,1,3.08,3.08,0,0,1,1.12,2.54,3.22,3.22,0,0,1-2.14,3v0.05a3.06,3.06,0,0,1,1.62,2.27c0.38,1.37.76,3,1,3.42h-2.81a15.14,15.14,0,0,1-.85-2.83c-0.32-1.51-.85-1.93-2-1.94H2634v4.77h-2.72v-12Zm2.72,5.22h1.08c1.37,0,2.18-.68,2.18-1.75s-0.76-1.67-2-1.69a6.85,6.85,0,0,0-1.24.09v3.35Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2644.94,1246.94l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57H2648Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2656.67,1237.91v12.14h-2.75v-12.14h2.75Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2659,1250.05v-12.14h3.21l2.52,4.45a35.11,35.11,0,0,1,2,4.16h0.05a44.89,44.89,0,0,1-.23-5.06v-3.55h2.52v12.14h-2.88l-2.59-4.68a45.4,45.4,0,0,1-2.11-4.29l-0.05,0c0.07,1.6.11,3.31,0.11,5.29v3.66H2659Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2790.39,849.35h2.75v9.83H2798v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2806.81,856.36h-4.46v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.73v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2812.19,861.49l-3.89-12.14h3l1.48,5.13c0.41,1.44.79,2.83,1.08,4.34h0.05c0.31-1.46.68-2.9,1.1-4.29l1.55-5.19h2.92l-4.09,12.14h-3.21Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2828,856.36h-4.46v2.88h5v2.25h-7.74V849.35h7.49v2.25h-4.73v2.52H2828v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2830.39,849.35h2.75v9.83H2838v2.3h-7.58V849.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2786.65,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6L2794,992h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2796.48,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2806.74,982.16h-3.26v-2.3h9.33v2.3h-3.31V992h-2.75v-9.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2815.79,988.88l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.47Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2833.23,991.65a7.81,7.81,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2835,979.86h2.72v5.37h0.05c0.27-.47.56-0.9,0.83-1.33l2.75-4h3.37l-4,5.17,4.23,7h-3.21l-3-5.24-1,1.28v4H2835V979.86Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2788,1108.55a24.5,24.5,0,0,1,3.71-.25,7.81,7.81,0,0,1,5,1.3,5.37,5.37,0,0,1,2.05,4.57,6.16,6.16,0,0,1-2,4.92,8.71,8.71,0,0,1-5.6,1.57,23.71,23.71,0,0,1-3.12-.18v-11.92Zm2.75,9.9a5,5,0,0,0,1,.05c2.49,0,4.11-1.35,4.11-4.25a3.48,3.48,0,0,0-3.82-3.85,5.73,5.73,0,0,0-1.24.11v7.94Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2807.75,1115.4h-4.46v2.88h5v2.25h-7.74v-12.14H2808v2.25h-4.74v2.52h4.46v2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M2819.05,1120.18a7.81,7.81,0,0,1-3.11.52c-4.2,0-6.36-2.61-6.36-6.07,0-4.14,3-6.45,6.63-6.45a7.16,7.16,0,0,1,3,.54l-0.56,2.18a5.92,5.92,0,0,0-2.3-.45,4,4,0,0,0,0,8,6.85,6.85,0,0,0,2.29-.4Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2823.86,1117.41l-0.86,3.11h-2.84l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2833.94,1120.53v-5l-3.83-7.17h3.13l1.24,2.92c0.38,0.88.63,1.53,0.94,2.32h0c0.27-.76.56-1.46,0.92-2.32l1.22-2.92h3.08l-4,7.08v5.06h-2.74Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M2798.89,1249.49a13.59,13.59,0,0,1-4.05.68,6.76,6.76,0,0,1-4.93-1.64,5.87,5.87,0,0,1-1.71-4.41c0-4,3-6.34,6.93-6.34a8.35,8.35,0,0,1,3.37.59l-0.58,2.2a6.72,6.72,0,0,0-2.83-.52,4,4,0,1,0,1.15,7.72v-2.54h-1.87v-2.14h4.52v6.39Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2801,1238.08a24.12,24.12,0,0,1,3.66-.25,6.19,6.19,0,0,1,3.92,1,3.08,3.08,0,0,1,1.12,2.54,3.22,3.22,0,0,1-2.14,3v0.05a3.06,3.06,0,0,1,1.62,2.27c0.38,1.37.76,3,1,3.42h-2.81a15.19,15.19,0,0,1-.85-2.83c-0.32-1.51-.85-1.93-2-1.94h-0.83v4.77H2801v-12Zm2.72,5.22h1.08c1.37,0,2.18-.68,2.18-1.75s-0.76-1.67-2-1.69a6.85,6.85,0,0,0-1.24.09v3.35Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2814.69,1246.94l-0.86,3.11H2811l3.71-12.14h3.6l3.76,12.14h-3l-0.94-3.11h-3.48Zm3.08-2.05-0.76-2.57c-0.22-.72-0.43-1.62-0.61-2.34h0c-0.18.72-.36,1.64-0.56,2.34l-0.72,2.57h2.68Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2826.43,1237.91v12.14h-2.75v-12.14h2.75Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M2828.8,1250.05v-12.14h3.2l2.52,4.45a35.26,35.26,0,0,1,2,4.16h0.05a45.12,45.12,0,0,1-.23-5.06v-3.55h2.52v12.14H2836l-2.59-4.68a44.93,44.93,0,0,1-2.11-4.29l-0.05,0c0.07,1.6.11,3.31,0.11,5.29v3.66h-2.52Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n      </g>\\n      <g id=\\\"main_knobs\\\">\\n        <g>\\n          <path d=\\\"M1167.56,1267.94h-5.79v-4.1h16.57v4.1h-5.89v17.47h-4.9v-17.47Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\"\\n          />\\n          <path d=\\\"M1193.77,1276.29h-7.94v5.12h8.86v4h-13.76v-21.57h13.31v4h-8.42v4.48h7.94v4Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1216.27,1277.16c-0.1-2.59-.19-5.73-0.19-8.86H1216c-0.67,2.75-1.57,5.82-2.4,8.35l-2.62,8.42h-3.81l-2.3-8.35c-0.7-2.53-1.44-5.6-2-8.42h-0.06c-0.13,2.91-.22,6.24-0.38,8.93l-0.38,8.19h-4.51l1.38-21.57h6.5l2.11,7.2c0.67,2.5,1.34,5.18,1.82,7.71h0.1c0.61-2.5,1.34-5.34,2-7.74l2.3-7.17h6.37l1.18,21.57h-4.77Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1225.1,1264.13a39.87,39.87,0,0,1,6.59-.45c3,0,5.15.58,6.59,1.73a6.3,6.3,0,0,1,2.3,5,6.89,6.89,0,0,1-2,5.12c-1.66,1.57-4.13,2.27-7,2.27a12.29,12.29,0,0,1-1.66-.1v7.71h-4.83v-21.28Zm4.83,9.79a7.44,7.44,0,0,0,1.63.13c2.59,0,4.19-1.31,4.19-3.52,0-2-1.38-3.17-3.81-3.17a8.29,8.29,0,0,0-2,.19v6.37Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1263.43,1274.4c0,7.07-4.29,11.36-10.59,11.36s-10.14-4.83-10.14-11c0-6.46,4.13-11.3,10.5-11.3C1259.82,1263.49,1263.43,1268.45,1263.43,1274.4Zm-15.58.29c0,4.22,2,7.2,5.25,7.2s5.18-3.14,5.18-7.33c0-3.87-1.86-7.2-5.22-7.2S1247.85,1270.5,1247.85,1274.69Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n        </g>\\n        <g>\\n          <path d=\\\"M1050.07,1093.84l-1.54,5.54h-5.06l6.59-21.57h6.4l6.69,21.57h-5.25l-1.66-5.54h-6.18Zm5.47-3.65-1.34-4.58c-0.38-1.28-.77-2.88-1.09-4.16H1053c-0.32,1.28-.64,2.91-1,4.16l-1.28,4.58h4.77Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1081.07,1098.76a13.91,13.91,0,0,1-5.54.93c-7.46,0-11.29-4.64-11.29-10.78,0-7.36,5.25-11.46,11.77-11.46a12.72,12.72,0,0,1,5.31,1l-1,3.87a10.53,10.53,0,0,0-4.1-.8c-3.87,0-6.88,2.34-6.88,7.14,0,4.32,2.56,7,6.91,7a12.19,12.19,0,0,0,4.06-.7Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1099.15,1098.76a13.91,13.91,0,0,1-5.54.93c-7.46,0-11.29-4.64-11.29-10.78,0-7.36,5.25-11.46,11.77-11.46a12.72,12.72,0,0,1,5.31,1l-1,3.87a10.53,10.53,0,0,0-4.1-.8c-3.87,0-6.88,2.34-6.88,7.14,0,4.32,2.56,7,6.91,7a12.19,12.19,0,0,0,4.06-.7Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1115.18,1090.25h-7.94v5.12h8.86v4h-13.76v-21.57h13.31v4h-8.42v4.48h7.94v4Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n            fill=\\\"#fff\\\" />\\n          <path d=\\\"M1119.44,1099.37v-21.57h5.7l4.48,7.9a62.5,62.5,0,0,1,3.52,7.39h0.1a80.07,80.07,0,0,1-.42-9v-6.3h4.48v21.57h-5.12l-4.61-8.32a80.06,80.06,0,0,1-3.74-7.62l-0.1,0c0.13,2.85.19,5.89,0.19,9.41v6.5h-4.48Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1145.68,1081.9h-5.79v-4.1h16.57v4.1h-5.89v17.47h-4.9V1081.9Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\"\\n          />\\n        </g>\\n        <g>\\n          <path d=\\\"M1232.54,971.13l-6.91-21.57H1231l2.62,9.12c0.74,2.56,1.41,5,1.92,7.71h0.1c0.54-2.59,1.22-5.15,2-7.62l2.75-9.22h5.18l-7.26,21.57h-5.7Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1267.29,960.12c0,7.07-4.29,11.36-10.59,11.36s-10.14-4.83-10.14-11c0-6.46,4.13-11.3,10.5-11.3C1263.67,949.21,1267.29,954.17,1267.29,960.12Zm-15.58.29c0,4.22,2,7.2,5.25,7.2s5.18-3.14,5.18-7.33c0-3.87-1.86-7.2-5.22-7.2S1251.71,956.22,1251.71,960.41Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1270.49,949.56h4.9V967H1284v4.1h-13.47V949.56Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1290.72,949.56V962c0,3.71,1.41,5.6,3.9,5.6s4-1.79,4-5.6V949.56h4.86v12.1c0,6.66-3.36,9.82-9,9.82-5.44,0-8.64-3-8.64-9.89v-12h4.9Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1325.91,962.87c-0.1-2.59-.19-5.73-0.19-8.86h-0.1c-0.67,2.75-1.57,5.82-2.4,8.35l-2.62,8.42h-3.81l-2.3-8.35c-0.7-2.53-1.44-5.6-2-8.42h-0.06c-0.13,2.91-.22,6.24-0.38,8.93l-0.38,8.19h-4.51l1.38-21.57h6.5l2.11,7.2c0.67,2.5,1.34,5.18,1.82,7.71h0.1c0.61-2.5,1.34-5.34,2-7.74l2.3-7.17h6.37l1.18,21.57h-4.77Z\\\"\\n            transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          <path d=\\\"M1347.58,962h-7.94v5.12h8.86v4h-13.76V949.56h13.31v4h-8.42V958h7.94v4Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\"\\n          />\\n        </g>\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"0\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat\\\" cx=\\\"1396.82\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#39b54a\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 1)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][0][currentType]\\\" id=\\\"_1\\\" data-name=\\\"1\\\">\\n        <rect id=\\\"background-2\\\" data-name=\\\"background\\\" x=\\\"1382.69\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\" fill=\\\"#f58667\\\"\\n        />\\n        <polygon id=\\\"highlight\\\" points=\\\"1440.09 1648.86 1440.09 1713.32 1434.69 1655.86 1388.09 1655.86 1382.69 1713.32 1382.69 1648.86 1440.09 1648.86\\\"\\n          fill=\\\"#fdd7c7\\\" opacity=\\\"0.62\\\" />\\n        <circle id=\\\"indicator-1\\\" cx=\\\"1411.39\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"1\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-2\\\" data-name=\\\"beat\\\" cx=\\\"1480.16\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 2)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][1][currentType]\\\" id=\\\"_2\\\" data-name=\\\"2\\\">\\n        <rect id=\\\"background-3\\\" data-name=\\\"background\\\" x=\\\"1465.09\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\" fill=\\\"#f58667\\\"\\n        />\\n        <polygon id=\\\"highlight-2\\\" data-name=\\\"highlight\\\" points=\\\"1522.49 1648.86 1522.49 1713.32 1517.09 1655.86 1470.49 1655.86 1465.09 1713.32 1465.09 1648.86 1522.49 1648.86\\\"\\n          fill=\\\"#fdd7c7\\\" opacity=\\\"0.62\\\" />\\n        <circle id=\\\"indicator-2\\\" data-name=\\\"indicator\\\" cx=\\\"1493.79\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"2\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-3\\\"  data-name=\\\"beat\\\" cx=\\\"1561.78\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 3)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][2][currentType]\\\" id=\\\"_3\\\" data-name=\\\"3\\\">\\n        <rect id=\\\"background-4\\\" data-name=\\\"background\\\" x=\\\"1545.57\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\" fill=\\\"#f58667\\\"\\n        />\\n        <polygon id=\\\"highlight-3\\\" data-name=\\\"highlight\\\" points=\\\"1602.97 1648.86 1602.97 1713.32 1597.57 1655.86 1550.97 1655.86 1545.57 1713.32 1545.57 1648.86 1602.97 1648.86\\\"\\n          fill=\\\"#fdd7c7\\\" opacity=\\\"0.62\\\" />\\n        <circle id=\\\"indicator-3\\\" data-name=\\\"indicator\\\" cx=\\\"1574.27\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"3\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-4\\\"  data-name=\\\"beat\\\" cx=\\\"1644.96\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 4)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][3][currentType]\\\" id=\\\"_4\\\" data-name=\\\"4\\\">\\n        <rect id=\\\"background-5\\\" data-name=\\\"background\\\" x=\\\"1627.97\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\" fill=\\\"#f58667\\\"\\n        />\\n        <polygon id=\\\"highlight-4\\\" data-name=\\\"highlight\\\" points=\\\"1685.37 1648.86 1685.37 1713.32 1679.97 1655.86 1633.37 1655.86 1627.97 1713.32 1627.97 1648.86 1685.37 1648.86\\\"\\n          fill=\\\"#fdd7c7\\\" opacity=\\\"0.62\\\" />\\n        <circle id=\\\"indicator-4\\\" data-name=\\\"indicator\\\" cx=\\\"1656.67\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"4\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-5\\\" data-name=\\\"beat\\\" cx=\\\"1725.02\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 5)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][4][currentType]\\\" id=\\\"_5\\\" data-name=\\\"5\\\">\\n        <rect id=\\\"background-6\\\" data-name=\\\"background\\\" x=\\\"1708.7\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\" fill=\\\"#f8995c\\\"\\n        />\\n        <polygon id=\\\"highlight-5\\\" data-name=\\\"highlight\\\" points=\\\"1766.1 1648.86 1766.1 1713.32 1760.7 1655.86 1714.1 1655.86 1708.7 1713.32 1708.7 1648.86 1766.1 1648.86\\\"\\n          fill=\\\"#feddc5\\\" opacity=\\\"0.62\\\" />\\n        <circle id=\\\"indicator-5\\\" data-name=\\\"indicator\\\" cx=\\\"1737.4\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"5\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-6\\\" data-name=\\\"beat\\\" cx=\\\"1808.89\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 6)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][5][currentType]\\\" id=\\\"_6\\\" data-name=\\\"6\\\">\\n        <rect id=\\\"background-7\\\" data-name=\\\"background\\\" x=\\\"1791.1\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\" fill=\\\"#f8995c\\\"\\n        />\\n        <polygon id=\\\"highlight-6\\\" data-name=\\\"highlight\\\" points=\\\"1848.5 1648.86 1848.5 1713.32 1843.1 1655.86 1796.5 1655.86 1791.1 1713.32 1791.1 1648.86 1848.5 1648.86\\\"\\n          fill=\\\"#feddc5\\\" opacity=\\\"0.62\\\" />\\n        <circle id=\\\"indicator-6\\\" data-name=\\\"indicator\\\" cx=\\\"1819.8\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"6\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-7\\\" data-name=\\\"beat\\\" cx=\\\"1889.05\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 7)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][6][currentType]\\\" id=\\\"_7\\\" data-name=\\\"7\\\">\\n        <rect id=\\\"background-8\\\" data-name=\\\"background\\\" x=\\\"1871.57\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\" fill=\\\"#f8995c\\\"\\n        />\\n        <polygon id=\\\"highlight-7\\\" data-name=\\\"highlight\\\" points=\\\"1928.97 1648.86 1928.97 1713.32 1923.58 1655.86 1876.97 1655.86 1871.58 1713.32 1871.58 1648.86 1928.97 1648.86\\\"\\n          fill=\\\"#feddc5\\\" opacity=\\\"0.62\\\" />\\n        <circle id=\\\"indicator-7\\\" data-name=\\\"indicator\\\" cx=\\\"1900.27\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"7\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-8\\\" data-name=\\\"beat\\\" cx=\\\"1970.34\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 8)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][7][currentType]\\\" id=\\\"_8\\\" data-name=\\\"8\\\">\\n        <rect id=\\\"background-9\\\" data-name=\\\"background\\\" x=\\\"1953.97\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\" fill=\\\"#f8995c\\\"\\n        />\\n        <polygon id=\\\"highlight-8\\\" data-name=\\\"highlight\\\" points=\\\"2011.38 1648.86 2011.38 1713.32 2005.98 1655.86 1959.38 1655.86 1953.98 1713.32 1953.98 1648.86 2011.38 1648.86\\\"\\n          fill=\\\"#feddc5\\\" opacity=\\\"0.62\\\" />\\n        <circle id=\\\"indicator-8\\\" data-name=\\\"indicator\\\" cx=\\\"1982.67\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"8\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-9\\\" data-name=\\\"beat\\\" cx=\\\"2053.66\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 9)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][8][currentType]\\\" id=\\\"_9\\\" data-name=\\\"9\\\">\\n        <rect id=\\\"background-10\\\" data-name=\\\"background\\\" x=\\\"2036.78\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\"\\n          fill=\\\"#fde56c\\\" />\\n        <polygon id=\\\"highlight-9\\\" data-name=\\\"highlight\\\" points=\\\"2094.18 1648.86 2094.18 1713.32 2088.78 1655.86 2042.18 1655.86 2036.79 1713.32 2036.79 1648.86 2094.18 1648.86\\\"\\n          fill=\\\"#fff5d1\\\" opacity=\\\"0.71\\\" />\\n        <circle id=\\\"indicator-9\\\" data-name=\\\"indicator\\\" cx=\\\"2065.48\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"9\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-10\\\" data-name=\\\"beat\\\" cx=\\\"2134.55\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 10)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][9][currentType]\\\" id=\\\"_10\\\" data-name=\\\"10\\\">\\n        <rect id=\\\"background-11\\\" data-name=\\\"background\\\" x=\\\"2119.18\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\"\\n          fill=\\\"#fde56c\\\" />\\n        <polygon id=\\\"highlight-10\\\" data-name=\\\"highlight\\\" points=\\\"2176.59 1648.86 2176.59 1713.32 2171.19 1655.86 2124.59 1655.86 2119.19 1713.32 2119.19 1648.86 2176.59 1648.86\\\"\\n          fill=\\\"#fff5d1\\\" opacity=\\\"0.71\\\" />\\n        <circle id=\\\"indicator-10\\\" data-name=\\\"indicator\\\" cx=\\\"2147.89\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"10\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-11\\\" data-name=\\\"beat\\\" cx=\\\"2215.36\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 11)\\\"  [initial]=\\\"sequencerLineUp['rhythmSettings'][10][currentType]\\\" id=\\\"_11\\\" data-name=\\\"11\\\">\\n        <rect id=\\\"background-12\\\" data-name=\\\"background\\\" x=\\\"2199.66\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\"\\n          fill=\\\"#fde56c\\\" />\\n        <polygon id=\\\"highlight-11\\\" data-name=\\\"highlight\\\" points=\\\"2257.06 1648.86 2257.06 1713.32 2251.66 1655.86 2205.06 1655.86 2199.66 1713.32 2199.66 1648.86 2257.06 1648.86\\\"\\n          fill=\\\"#fff5d1\\\" opacity=\\\"0.71\\\" />\\n        <circle id=\\\"indicator-11\\\" data-name=\\\"indicator\\\" cx=\\\"2228.36\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"11\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-12\\\" data-name=\\\"beat\\\" cx=\\\"2298.1\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 12)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][11][currentType]\\\" id=\\\"_12\\\" data-name=\\\"12\\\">\\n        <rect id=\\\"background-13\\\" data-name=\\\"background\\\" x=\\\"2283.06\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\"\\n          fill=\\\"#fde56c\\\" />\\n        <polygon id=\\\"highlight-12\\\" data-name=\\\"highlight\\\" points=\\\"2340.46 1648.86 2340.46 1713.32 2335.06 1655.86 2288.46 1655.86 2283.06 1713.32 2283.06 1648.86 2340.46 1648.86\\\"\\n          fill=\\\"#fff5d1\\\" opacity=\\\"0.71\\\" />\\n        <circle id=\\\"indicator-12\\\" data-name=\\\"indicator\\\" cx=\\\"2311.76\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"12\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-13\\\" data-name=\\\"beat\\\" cx=\\\"2380.63\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 13)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][12][currentType]\\\" id=\\\"_13\\\" data-name=\\\"13\\\">\\n        <rect id=\\\"background-14\\\" data-name=\\\"background\\\" x=\\\"2363.78\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\"\\n          fill=\\\"#fff\\\" />\\n        <polygon id=\\\"highlight-13\\\" data-name=\\\"highlight\\\" points=\\\"2421.18 1648.86 2421.18 1713.32 2415.78 1655.86 2369.18 1655.86 2363.78 1713.32 2363.78 1648.86 2421.18 1648.86\\\"\\n          fill=\\\"#efefef\\\" />\\n        <circle id=\\\"indicator-13\\\" data-name=\\\"indicator\\\" cx=\\\"2392.48\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"13\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-14\\\" data-name=\\\"beat\\\" cx=\\\"2462.64\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 14)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][13][currentType]\\\" id=\\\"_14\\\" data-name=\\\"14\\\">\\n        <rect id=\\\"background-15\\\" data-name=\\\"background\\\" x=\\\"2446.18\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\"\\n          fill=\\\"#fff\\\" />\\n        <polygon id=\\\"highlight-14\\\" data-name=\\\"highlight\\\" points=\\\"2503.59 1648.86 2503.59 1713.32 2498.19 1655.86 2451.59 1655.86 2446.19 1713.32 2446.19 1648.86 2503.59 1648.86\\\"\\n          fill=\\\"#efefef\\\" />\\n        <circle id=\\\"indicator-14\\\" data-name=\\\"indicator\\\" cx=\\\"2474.89\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"14\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-15\\\" data-name=\\\"beat\\\" cx=\\\"2542.95\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 15)\\\" [initial]=\\\"sequencerLineUp['rhythmSettings'][14][currentType]\\\" id=\\\"_15\\\" data-name=\\\"15\\\">\\n        <rect id=\\\"background-16\\\" data-name=\\\"background\\\" x=\\\"2526.66\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\"\\n          fill=\\\"#fff\\\" />\\n        <polygon id=\\\"highlight-15\\\" data-name=\\\"highlight\\\" points=\\\"2584.06 1648.86 2584.06 1713.32 2578.66 1655.86 2532.06 1655.86 2526.66 1713.32 2526.66 1648.86 2584.06 1648.86\\\"\\n          fill=\\\"#efefef\\\" />\\n        <circle id=\\\"indicator-15\\\" data-name=\\\"indicator\\\" cx=\\\"2555.36\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      <circle my-instrument-beat-changer [beat]=\\\"15\\\" [current-beat]=\\\"sequencerLineUp['projectSettings']['beat']\\\" id=\\\"beat-16\\\" data-name=\\\"beat\\\" cx=\\\"2626.39\\\" cy=\\\"1591.03\\\" r=\\\"5.66\\\" fill=\\\"#003b05\\\" />\\n      \\n      <g my-button-pusher (value)=\\\"beatOutputValue($event, 16)\\\"  [initial]=\\\"sequencerLineUp['rhythmSettings'][15][currentType]\\\" id=\\\"_16\\\" data-name=\\\"16\\\">\\n        <rect id=\\\"background-17\\\" data-name=\\\"background\\\" x=\\\"2610.06\\\" y=\\\"1619.42\\\" width=\\\"57.4\\\" height=\\\"100.25\\\" rx=\\\"6.35\\\" ry=\\\"6.35\\\"\\n          fill=\\\"#fff\\\" />\\n        <polygon id=\\\"highlight-16\\\" data-name=\\\"highlight\\\" points=\\\"2667.46 1648.86 2667.46 1713.32 2662.06 1655.86 2615.46 1655.86 2610.06 1713.32 2610.06 1648.86 2667.46 1648.86\\\"\\n          fill=\\\"#efefef\\\" />\\n        <circle id=\\\"indicator-16\\\" data-name=\\\"indicator\\\" cx=\\\"2638.76\\\" cy=\\\"1634.21\\\" r=\\\"5.66\\\" fill=\\\"#512829\\\" />\\n      </g>\\n      \\n      \\n      \\n      <g id=\\\"start_stop_button\\\" data-name=\\\"start/stop_button\\\">\\n      \\n        <g  my-start-button-pusher (value)=\\\"togglePlay($event)\\\">\\n          <rect id=\\\"background-18\\\" data-name=\\\"background\\\" x=\\\"1030.86\\\" y=\\\"1633.6\\\" width=\\\"171.45\\\" height=\\\"86.26\\\" rx=\\\"3.1\\\" ry=\\\"3.1\\\" fill=\\\"#757777\\\"\\n          />\\n          <rect id=\\\"start_button\\\" x=\\\"1033.29\\\" y=\\\"1635.7\\\" width=\\\"167.11\\\" height=\\\"82.05\\\" rx=\\\"3.1\\\" ry=\\\"3.1\\\" fill=\\\"#f58667\\\" />\\n      \\n          <g id=\\\"start_text_button\\\">\\n            <path d=\\\"M1092.16,1703.47l-1.54,3a6.9,6.9,0,0,0-3.39-1.16c-1.3,0-2,.59-2,1.5s1.58,1.6,3.49,2.42,3.92,2.38,3.92,4.57c0,4-3,5.4-6.31,5.4A9.78,9.78,0,0,1,1080,1717l1.91-3.21s2.23,1.89,4.1,1.89c0.83,0,2.42-.08,2.42-1.64,0-1.22-1.79-1.77-3.77-2.76s-3.19-2.56-3.19-4.3a5.29,5.29,0,0,1,5.46-5.11A9.52,9.52,0,0,1,1092.16,1703.47Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n            <path d=\\\"M1092.4,1702.19h11.77v3.35h-4v13.39h-3.82v-13.39h-4v-3.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n            <path d=\\\"M1119.85,1718.93h-4.1l-1.24-3.35h-6.37l-1.24,3.35h-4.1l6.76-16.74h3.53Zm-8.5-11.57h0l-1.87,4.87h3.77Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#fff\\\" />\\n            <path d=\\\"M1126.49,1702.19c3.1,0,5.46,1.68,5.46,5a4.78,4.78,0,0,1-3.43,4.85l5.76,6.92h-4.85l-5.11-6.62v6.62h-3.81v-16.74h6Zm-1.73,7.43c1.44,0,3.17-.1,3.17-2.19s-1.73-2.19-3.17-2.19h-0.45v4.38h0.45Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n            <path d=\\\"M1133.17,1702.19h11.77v3.35h-4v13.39h-3.82v-13.39h-4v-3.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n            <path d=\\\"M1148.68,1721.37h-3.1l8.36-19.89h3.1Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n            <path d=\\\"M1169.68,1703.47l-1.54,3a6.9,6.9,0,0,0-3.39-1.16c-1.3,0-2,.59-2,1.5s1.58,1.6,3.49,2.42,3.92,2.38,3.92,4.57c0,4-3,5.4-6.31,5.4a9.78,9.78,0,0,1-6.29-2.21l1.91-3.21s2.23,1.89,4.1,1.89c0.83,0,2.42-.08,2.42-1.64,0-1.22-1.79-1.77-3.77-2.76s-3.19-2.56-3.19-4.3a5.29,5.29,0,0,1,5.46-5.11A9.52,9.52,0,0,1,1169.68,1703.47Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n            <path d=\\\"M1169.93,1702.19h11.77v3.35h-4v13.39h-3.81v-13.39h-4v-3.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n            <path d=\\\"M1190.13,1701.88a8.68,8.68,0,0,1,0,17.35,8.33,8.33,0,0,1-8.44-8.69A8.52,8.52,0,0,1,1190.13,1701.88Zm0,13.66c3,0,4.3-2.5,4.3-5s-1.34-5-4.3-5-4.32,2.5-4.32,5S1187,1715.54,1190.13,1715.54Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n            <path d=\\\"M1206.35,1702.19c3.27,0,5.72,1.68,5.72,5.16s-2.46,5.38-5.72,5.38h-2.29v6.21h-3.81v-16.74h6.11Zm-1.22,7.49c1.5,0,2.92-.51,2.92-2.21s-1.42-2.23-2.92-2.23h-1.08v4.44h1.08Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#fff\\\" />\\n          </g>\\n        </g>\\n      </g>\\n      \\n      \\n      <!--INSTRUMENT SELECTORS-->\\n      <g>\\n        <g my-instrument-button-pusher [current]=\\\"currentType\\\" [type]=\\\"'kick'\\\" [button-group]=\\\"'instrument'\\\" (value)=\\\"instrumentSet($event)\\\"  id=\\\"kick\\\">\\n          <rect id=\\\"background-19\\\" data-name=\\\"background\\\" x=\\\"1388.55\\\" y=\\\"1338.81\\\" width=\\\"146.42\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"\\n          />\\n          <circle id=\\\"indicator-17\\\" data-name=\\\"indicator\\\" cx=\\\"1403.47\\\" cy=\\\"1350.87\\\" r=\\\"7.31\\\" fill=\\\"#39b54a\\\" />\\n          <g>\\n            <path d=\\\"M1468.27,1390.42l-3.65-4.2v4.2h-2.25v-9.89h2.25v4l3.39-4h2.73l-4,4.69,4.61,5.21h-3.11Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1474.07,1390.42h-2.25v-9.89h2.25v9.89Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1482.34,1387.77l1,1.92a5.14,5.14,0,1,1,0-8.43l-1,1.92a3.44,3.44,0,0,0-1.94-.61,2.93,2.93,0,1,0,0,5.82A3.44,3.44,0,0,0,1482.34,1387.77Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1490.07,1390.42l-3.65-4.2v4.2h-2.25v-9.89h2.25v4l3.39-4h2.73l-4,4.69,4.61,5.21h-3.11Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1499.75,1380.52a4.95,4.95,0,1,1,0,9.89h-2.87v-9.89h2.87Zm-0.26,7.88a2.93,2.93,0,0,0,0-5.86h-0.35v5.86h0.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1509.28,1380.52c1.83,0,3.23,1,3.23,2.94a2.83,2.83,0,0,1-2,2.87l3.41,4.09H1511l-3-3.91v3.91h-2.25v-9.89h3.54Zm-1,4.39c0.85,0,1.87-.06,1.87-1.3s-1-1.3-1.87-1.3H1508v2.59h0.26Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1521.94,1386.9c0,2.45-1.34,3.69-3.86,3.69s-3.86-1.25-3.86-3.69v-6.38h2.25v5.72c0,1.66.5,2.13,1.61,2.13s1.61-.48,1.61-2.13v-5.72h2.25v6.38Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1531,1384.55h-0.06l-2,5.8h-1.34l-2-5.8h-0.06l-0.47,5.86h-2.25l0.89-9.89h2.4l2.19,5.71,2.19-5.71h2.4l0.89,9.89h-2.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          </g>\\n        </g>\\n        <g my-instrument-button-pusher [current]=\\\"currentType\\\" [type]=\\\"'snare'\\\" [button-group]=\\\"'instrument'\\\" (value)=\\\"instrumentSet($event)\\\"  id=\\\"snare\\\">\\n          <rect id=\\\"background-20\\\" data-name=\\\"background\\\" x=\\\"1554.76\\\" y=\\\"1338.81\\\" width=\\\"146.42\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"\\n          />\\n          <circle id=\\\"indicator-18\\\" data-name=\\\"indicator\\\" cx=\\\"1569.68\\\" cy=\\\"1350.87\\\" r=\\\"7.31\\\" fill=\\\"#003b05\\\" />\\n          <g>\\n            <path d=\\\"M1631.3,1381.28l-0.91,1.8a4.08,4.08,0,0,0-2-.68,1,1,0,0,0-1.18.89c0,0.55.94,0.95,2.06,1.43s2.31,1.4,2.31,2.7c0,2.36-1.8,3.19-3.73,3.19a5.78,5.78,0,0,1-3.72-1.31l1.13-1.9a4.83,4.83,0,0,0,2.42,1.12,1.15,1.15,0,0,0,1.43-1c0-.72-1.06-1-2.23-1.63a3,3,0,0,1-1.88-2.54,3.13,3.13,0,0,1,3.23-3A5.63,5.63,0,0,1,1631.3,1381.28Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1634.9,1390.42h-2.25v-9.89h2.25l3.93,6.14h0v-6.14h2.25v9.89h-2.25l-3.93-6.14h0v6.14Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1651.57,1390.42h-2.42l-0.73-2h-3.77l-0.73,2h-2.42l4-9.89h2.09Zm-5-6.84h0l-1.1,2.88h2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1655.5,1380.52c1.83,0,3.23,1,3.23,2.94a2.83,2.83,0,0,1-2,2.87l3.41,4.09h-2.87l-3-3.91v3.91H1652v-9.89h3.54Zm-1,4.39c0.85,0,1.87-.06,1.87-1.3s-1-1.3-1.87-1.3h-0.26v2.59h0.26Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1666.22,1382.5h-3.41v2h3.26v2h-3.26v2h3.41v2h-5.66v-9.89h5.66v2Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"\\n            />\\n            <path d=\\\"M1673.66,1380.52a4.95,4.95,0,1,1,0,9.89h-2.87v-9.89h2.87Zm-0.26,7.88a2.93,2.93,0,0,0,0-5.86H1673v5.86h0.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1683.18,1380.52c1.83,0,3.23,1,3.23,2.94a2.83,2.83,0,0,1-2,2.87l3.41,4.09h-2.87l-3-3.91v3.91h-2.25v-9.89h3.54Zm-1,4.39c0.85,0,1.87-.06,1.87-1.3s-1-1.3-1.87-1.3h-0.26v2.59h0.26Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1695.84,1386.9c0,2.45-1.34,3.69-3.86,3.69s-3.86-1.25-3.86-3.69v-6.38h2.25v5.72c0,1.66.5,2.13,1.61,2.13s1.61-.48,1.61-2.13v-5.72h2.25v6.38Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1704.88,1384.55h-0.06l-2,5.8h-1.34l-2-5.8h-0.06l-0.47,5.86h-2.25l0.89-9.89h2.4l2.2,5.71,2.19-5.71h2.4l0.89,9.89h-2.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          </g>\\n        </g>\\n        <g my-instrument-button-pusher [current]=\\\"currentType\\\" [type]=\\\"'lowtom'\\\" [button-group]=\\\"'instrument'\\\" (value)=\\\"instrumentSet($event)\\\"  id=\\\"lowtom\\\">\\n          <rect id=\\\"background-21\\\" data-name=\\\"background\\\" x=\\\"1719.33\\\" y=\\\"1338.81\\\" width=\\\"146.42\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"\\n          />\\n          <circle id=\\\"indicator-19\\\" data-name=\\\"indicator\\\" cx=\\\"1734.25\\\" cy=\\\"1350.87\\\" r=\\\"7.31\\\" fill=\\\"#003b05\\\" />\\n          <g>\\n            <path d=\\\"M1798.41,1388.44h3.41v2h-5.66v-9.89h2.25v7.92Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1807.48,1380.34a5.13,5.13,0,0,1,0,10.25,4.92,4.92,0,0,1-5-5.13A5,5,0,0,1,1807.48,1380.34Zm0,8.07c1.8,0,2.54-1.48,2.54-3s-0.79-3-2.54-3-2.55,1.48-2.55,3S1805.63,1388.41,1807.48,1388.41Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1819.08,1384.86l-1.58,5.55H1815l-2.82-9.89h2.51l1.69,6.79h0.06l1.8-6.79h1.7l1.8,6.79h0.06l1.69-6.79h2.5l-2.82,9.89h-2.5Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1828.6,1380.52h7v2h-2.35v7.92H1831v-7.92h-2.35v-2Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1840.54,1380.34a5.13,5.13,0,0,1,0,10.25,4.92,4.92,0,0,1-5-5.13A5,5,0,0,1,1840.54,1380.34Zm0,8.07c1.8,0,2.54-1.48,2.54-3s-0.79-3-2.54-3-2.55,1.48-2.55,3S1838.69,1388.41,1840.54,1388.41Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1854.23,1384.55h-0.06l-2,5.8h-1.34l-2-5.8h-0.06l-0.47,5.86H1846l0.89-9.89h2.4l2.2,5.71,2.19-5.71h2.4l0.89,9.89h-2.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          </g>\\n        </g>\\n        <g my-instrument-button-pusher [current]=\\\"currentType\\\" [type]=\\\"'midtom'\\\" [button-group]=\\\"'instrument'\\\" (value)=\\\"instrumentSet($event)\\\"  id=\\\"midtom\\\">\\n          <rect id=\\\"background-22\\\" data-name=\\\"background\\\" x=\\\"1884.13\\\" y=\\\"1338.81\\\" width=\\\"146.42\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"\\n          />\\n          <circle id=\\\"indicator-20\\\" data-name=\\\"indicator\\\" cx=\\\"1899.04\\\" cy=\\\"1350.87\\\" r=\\\"7.31\\\" fill=\\\"#003b05\\\" />\\n          <g>\\n            <path d=\\\"M1973.66,1384.55h-0.06l-2,5.8h-1.34l-2-5.8h-0.06l-0.47,5.86h-2.25l0.89-9.89h2.4l2.2,5.71,2.19-5.71h2.4l0.89,9.89h-2.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1979.55,1390.42h-2.25v-9.89h2.25v9.89Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1983.86,1380.52a4.95,4.95,0,1,1,0,9.89H1981v-9.89h2.87Zm-0.26,7.88a2.93,2.93,0,0,0,0-5.86h-0.35v5.86h0.35Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M1991.93,1380.52h7v2h-2.35v7.92h-2.25v-7.92h-2.35v-2Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2003.86,1380.34a5.13,5.13,0,0,1,0,10.25,4.92,4.92,0,0,1-5-5.13A5,5,0,0,1,2003.86,1380.34Zm0,8.07c1.8,0,2.54-1.48,2.54-3s-0.79-3-2.54-3-2.55,1.48-2.55,3S2002,1388.41,2003.86,1388.41Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2017.56,1384.55h-0.06l-2,5.8h-1.34l-2-5.8H2012l-0.47,5.86h-2.25l0.89-9.89h2.4l2.19,5.71,2.2-5.71h2.4l0.89,9.89H2018Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          </g>\\n        </g>\\n        <g my-instrument-button-pusher [current]=\\\"currentType\\\" [type]=\\\"'hitom'\\\"  [button-group]=\\\"'instrument'\\\" (value)=\\\"instrumentSet($event)\\\"  id=\\\"hitom\\\">\\n          <rect id=\\\"background-23\\\" data-name=\\\"background\\\" x=\\\"2048.92\\\" y=\\\"1338.81\\\" width=\\\"146.42\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"\\n          />\\n          <circle id=\\\"indicator-21\\\" data-name=\\\"indicator\\\" cx=\\\"2063.84\\\" cy=\\\"1350.87\\\" r=\\\"7.31\\\" fill=\\\"#003b05\\\" />\\n          <g>\\n            <path d=\\\"M2139,1390.42h-2.25v-9.89H2139v3.95h3.19v-3.95h2.25v9.89h-2.25v-4H2139v4Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2148.14,1390.42h-2.25v-9.89h2.25v9.89Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2151.66,1380.52h7v2h-2.35v7.92H2154v-7.92h-2.35v-2Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2163.6,1380.34a5.13,5.13,0,0,1,0,10.25,4.92,4.92,0,0,1-5-5.13A5,5,0,0,1,2163.6,1380.34Zm0,8.07c1.8,0,2.54-1.48,2.54-3s-0.79-3-2.54-3-2.55,1.48-2.55,3S2161.75,1388.41,2163.6,1388.41Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2177.29,1384.55h-0.06l-2,5.8h-1.34l-2-5.8h-0.06l-0.47,5.86H2169l0.89-9.89h2.4l2.2,5.71,2.2-5.71h2.4l0.89,9.89h-2.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          </g>\\n        </g>\\n        <g my-instrument-button-pusher [current]=\\\"currentType\\\" [type]=\\\"'rimshot'\\\" [button-group]=\\\"'instrument'\\\" (value)=\\\"instrumentSet($event)\\\"  id=\\\"rimshot\\\">\\n          <rect id=\\\"background-24\\\" data-name=\\\"background\\\" x=\\\"2213.72\\\" y=\\\"1338.81\\\" width=\\\"146.42\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"\\n          />\\n          <circle id=\\\"indicator-22\\\" data-name=\\\"indicator\\\" cx=\\\"2228.64\\\" cy=\\\"1350.87\\\" r=\\\"7.31\\\" fill=\\\"#003b05\\\" />\\n          <g>\\n            <path d=\\\"M2298.08,1380.52c1.83,0,3.23,1,3.23,2.94a2.83,2.83,0,0,1-2,2.87l3.41,4.09h-2.87l-3-3.91v3.91h-2.25v-9.89h3.54Zm-1,4.39c0.85,0,1.87-.06,1.87-1.3s-1-1.3-1.87-1.3h-0.26v2.59h0.26Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2305.38,1390.42h-2.25v-9.89h2.25v9.89Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2314.54,1384.55h-0.06l-2,5.8h-1.34l-2-5.8H2309l-0.47,5.86h-2.25l0.89-9.89h2.4l2.19,5.71,2.2-5.71h2.4l0.89,9.89H2315Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2324.65,1381.28l-0.91,1.8a4.08,4.08,0,0,0-2-.68,1,1,0,0,0-1.18.89c0,0.55.94,0.95,2.06,1.43s2.31,1.4,2.31,2.7c0,2.36-1.8,3.19-3.73,3.19a5.78,5.78,0,0,1-3.72-1.31l1.13-1.9a4.83,4.83,0,0,0,2.42,1.12,1.15,1.15,0,0,0,1.43-1c0-.72-1.06-1-2.23-1.63a3,3,0,0,1-1.88-2.54,3.13,3.13,0,0,1,3.23-3A5.63,5.63,0,0,1,2324.65,1381.28Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2328.26,1390.42H2326v-9.89h2.25v3.95h3.19v-3.95h2.25v9.89h-2.25v-4h-3.19v4Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2339.69,1380.34a5.13,5.13,0,0,1,0,10.25,4.92,4.92,0,0,1-5-5.13A5,5,0,0,1,2339.69,1380.34Zm0,8.07c1.8,0,2.54-1.48,2.54-3s-0.79-3-2.54-3-2.55,1.48-2.55,3S2337.84,1388.41,2339.69,1388.41Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2344.66,1380.52h7v2h-2.35v7.92H2347v-7.92h-2.35v-2Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          </g>\\n        </g>\\n        <g my-instrument-button-pusher [current]=\\\"currentType\\\" [type]=\\\"'clap'\\\"  [button-group]=\\\"'instrument'\\\" (value)=\\\"instrumentSet($event)\\\" id=\\\"clap\\\">\\n          <rect id=\\\"background-25\\\" data-name=\\\"background\\\" x=\\\"2378.51\\\" y=\\\"1338.81\\\" width=\\\"146.42\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"\\n          />\\n          <circle id=\\\"indicator-23\\\" data-name=\\\"indicator\\\" cx=\\\"2393.43\\\" cy=\\\"1350.87\\\" r=\\\"7.31\\\" fill=\\\"#003b05\\\" />\\n          <g>\\n            <path d=\\\"M2474.54,1387.77l1,1.92a5.14,5.14,0,1,1,0-8.43l-1,1.92a3.44,3.44,0,0,0-1.94-.61,2.93,2.93,0,1,0,0,5.82A3.44,3.44,0,0,0,2474.54,1387.77Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2478.62,1388.44H2482v2h-5.66v-9.89h2.25v7.92Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2492.35,1390.42h-2.42l-0.73-2h-3.77l-0.73,2h-2.42l4-9.89h2.09Zm-5-6.84h0l-1.1,2.88h2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2496.35,1380.52c1.93,0,3.38,1,3.38,3a3.08,3.08,0,0,1-3.38,3.18H2495v3.67h-2.25v-9.89h3.61Zm-0.72,4.43c0.89,0,1.73-.3,1.73-1.31s-0.84-1.32-1.73-1.32H2495v2.63h0.64Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          </g>\\n        </g>\\n        <g my-instrument-button-pusher [current]=\\\"currentType\\\" [type]=\\\"'hihat'\\\" [button-group]=\\\"'instrument'\\\" (value)=\\\"instrumentSet($event)\\\"  id=\\\"hihat\\\">\\n          <rect id=\\\"background-26\\\" data-name=\\\"background\\\" x=\\\"2543.31\\\" y=\\\"1338.81\\\" width=\\\"146.42\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"\\n          />\\n          <circle id=\\\"indicator-24\\\" data-name=\\\"indicator\\\" cx=\\\"2558.23\\\" cy=\\\"1350.87\\\" r=\\\"7.31\\\" fill=\\\"#003b05\\\" />\\n          <g>\\n            <path d=\\\"M2631.38,1390.42h-2.25v-9.89h2.25v3.95h3.19v-3.95h2.25v9.89h-2.25v-4h-3.19v4Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2640.53,1390.42h-2.25v-9.89h2.25v9.89Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2647.5,1390.42h-2.25v-9.89h2.25v3.95h3.19v-3.95h2.25v9.89h-2.25v-4h-3.19v4Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2663.41,1390.42H2661l-0.73-2h-3.77l-0.73,2h-2.42l4-9.89h2.09Zm-5-6.84h0l-1.1,2.88h2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2662.6,1380.52h7v2h-2.35v7.92h-2.25v-7.92h-2.35v-2Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          </g>\\n        </g>\\n        <g my-instrument-button-pusher [current]=\\\"currentType\\\" [type]=\\\"'cymbal'\\\" [button-group]=\\\"'instrument'\\\" (value)=\\\"instrumentSet($event)\\\"   id=\\\"cymbal\\\">\\n          <rect id=\\\"background-27\\\" data-name=\\\"background\\\" x=\\\"2708.1\\\" y=\\\"1338.81\\\" width=\\\"146.42\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"\\n          />\\n          <circle id=\\\"indicator-25\\\" data-name=\\\"indicator\\\" cx=\\\"2723.02\\\" cy=\\\"1350.87\\\" r=\\\"7.31\\\" fill=\\\"#003b05\\\" />\\n          <g>\\n            <path d=\\\"M2797.13,1387.77l1,1.92a5.14,5.14,0,1,1,0-8.43l-1,1.92a3.43,3.43,0,0,0-1.94-.61,2.93,2.93,0,1,0,0,5.82A3.43,3.43,0,0,0,2797.13,1387.77Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2800.59,1380.52l2.06,3.17,2.06-3.17h2.71l-3.65,5.46v4.44h-2.26V1386l-3.65-5.46h2.71Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2815.5,1384.55h-0.06l-2,5.8h-1.34l-2-5.8H2810l-0.47,5.86h-2.25l0.89-9.89h2.4l2.2,5.71,2.2-5.71h2.4l0.89,9.89H2816Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2822.21,1380.52c1.7,0,3,.64,3,2.52a2.49,2.49,0,0,0,.88,4.62c0,1.63-1.19,2.76-3.24,2.76h-3.75v-9.89h3.07Zm-0.63,3.87c1,0,1.5-.3,1.5-1.13s-0.52-1-1.5-1h-0.18v2.14h0.18Zm0.53,4.28c1.07,0,1.65-.32,1.65-1.1s-0.59-1.24-1.65-1.24h-0.71v2.34h0.71Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2835.91,1390.42h-2.42l-0.73-2H2829l-0.73,2h-2.42l4-9.89h2.09Zm-5-6.84h0l-1.1,2.88H2832Z\\\" transform=\\\"translate(-29.98 -34.49)\\\"\\n              fill=\\\"#231f20\\\" />\\n            <path d=\\\"M2838.56,1388.44H2842v2h-5.66v-9.89h2.26v7.92Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\" />\\n          </g>\\n        </g>\\n      </g>\\n      \\n      <g id=\\\"kick_knobs\\\">\\n        <g id=\\\"kick_level\\\">\\n          <g my-knob-turner (value)=\\\"instrumentKnob($event, 'kick', 'level')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['kick']['level']\\\" >\\n            <circle cx=\\\"1462.35\\\" cy=\\\"889.64\\\" r=\\\"33.08\\\" fill=\\\"#e7745a\\\" />\\n            <path d=\\\"M1492.94,889.28a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1492.94,889.28Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41H1495a0.41,0.41,0,0,0,.4-0.41V892.83c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1492.94,954.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n            <rect x=\\\"1462.35\\\" y=\\\"859.1\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n          </g>\\n          <g>\\n            <rect id=\\\"min7\\\" x=\\\"1524.8\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-259.19 1324.14) rotate(-45)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min6\\\" x=\\\"1538.25\\\" y=\\\"918.08\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(585.35 2427.9) rotate(-90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min5\\\" x=\\\"1524.8\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1943.99 2565.26) rotate(-135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min4\\\" x=\\\"1492.33\\\" y=\\\"872.16\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2955.89 1720.71) rotate(180)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min3\\\" x=\\\"1459.86\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3093.26 453.93) rotate(135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min2\\\" x=\\\"1446.41\\\" y=\\\"918.09\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2340.56 -557.98) rotate(90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min1\\\" x=\\\"1459.86\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1073.77 -787.19) rotate(45)\\\"\\n              fill=\\\"#fff\\\" />\\n          </g>\\n      \\n        </g>\\n        <g id=\\\"kick_decay\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'kick', 'attack')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['kick']['attack']\\\" >\\n              <circle cx=\\\"1462.95\\\" cy=\\\"1017.14\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1492.94,1017.37a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1492.94,1017.37Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41H1495a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1492.94,1082.34Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1462.35\\\" y=\\\"987.19\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-2\\\" data-name=\\\"min7\\\" x=\\\"1524.8\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-349.85 1361.69) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-2\\\" data-name=\\\"min6\\\" x=\\\"1538.25\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(457.14 2556.1) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-2\\\" data-name=\\\"min5\\\" x=\\\"1524.8\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1853.32 2784.12) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-2\\\" data-name=\\\"min4\\\" x=\\\"1492.33\\\" y=\\\"1000.37\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2955.89 1977.13) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-2\\\" data-name=\\\"min3\\\" x=\\\"1459.85\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3183.91 672.8) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-2\\\" data-name=\\\"min2\\\" x=\\\"1446.4\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2468.76 -429.77) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-2\\\" data-name=\\\"min1\\\" x=\\\"1459.85\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1164.43 -749.64) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_attack\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'kick', 'decay')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['kick']['decay']\\\" >\\n              <circle cx=\\\"1462.95\\\" cy=\\\"1145.45\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1492.94,1145.78a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1492.94,1145.78Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69V1160a0.4,0.4,0,0,0,.4.41H1495a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1492.94,1210.75Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1462.35\\\" y=\\\"1115.6\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-3\\\" data-name=\\\"min7\\\" x=\\\"1524.8\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-440.51 1399.25) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-3\\\" data-name=\\\"min6\\\" x=\\\"1538.25\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(328.94 2684.31) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-3\\\" data-name=\\\"min5\\\" x=\\\"1524.8\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1762.67 3002.99) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-3\\\" data-name=\\\"min4\\\" x=\\\"1492.33\\\" y=\\\"1128.58\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2955.89 2233.55) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-3\\\" data-name=\\\"min3\\\" x=\\\"1459.86\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3274.57 891.66) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-3\\\" data-name=\\\"min2\\\" x=\\\"1446.41\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2596.98 -301.56) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-3\\\" data-name=\\\"min1\\\" x=\\\"1459.86\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1255.09 -712.09) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_distortion\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'kick', 'distortion')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['kick']['distortion']\\\" >\\n              <circle cx=\\\"1463.03\\\" cy=\\\"1273.73\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1492.94,1274a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1492.94,1274Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41H1495a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1492.94,1338.93Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1462.35\\\" y=\\\"1243.78\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-4\\\" data-name=\\\"min7\\\" x=\\\"1524.8\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-531.17 1436.79) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-4\\\" data-name=\\\"min6\\\" x=\\\"1538.25\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(200.72 2812.52) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-4\\\" data-name=\\\"min5\\\" x=\\\"1524.8\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1672.01 3221.85) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-4\\\" data-name=\\\"min4\\\" x=\\\"1492.33\\\" y=\\\"1256.79\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2955.89 2489.96) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-4\\\" data-name=\\\"min3\\\" x=\\\"1459.85\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3365.22 1110.53) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-4\\\" data-name=\\\"min2\\\" x=\\\"1446.4\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2725.18 -173.35) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-4\\\" data-name=\\\"min1\\\" x=\\\"1459.85\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1345.74 -674.53) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"snare_knobs\\\">\\n        <g id=\\\"kick_level_copy\\\" data-name=\\\"kick_level copy\\\">\\n          <g my-knob-turner (value)=\\\"instrumentKnob($event, 'snare', 'level')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['snare']['level']\\\" >\\n            <circle cx=\\\"1625.54\\\" cy=\\\"889.64\\\" r=\\\"33.08\\\" fill=\\\"#e7745a\\\" />\\n            <path d=\\\"M1656.13,889.28a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1656.13,889.28Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41V892.83c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1656.13,954.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n            <rect x=\\\"1625.54\\\" y=\\\"859.1\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n          </g>\\n          <g>\\n            <rect id=\\\"min7-5\\\" data-name=\\\"min7\\\" x=\\\"1687.99\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-211.4 1439.54) rotate(-45)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min6-5\\\" data-name=\\\"min6\\\" x=\\\"1701.44\\\" y=\\\"918.08\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(748.55 2591.09) rotate(-90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min5-5\\\" data-name=\\\"min5\\\" x=\\\"1687.99\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2222.57 2680.65) rotate(-135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min4-5\\\" data-name=\\\"min4\\\" x=\\\"1655.52\\\" y=\\\"872.16\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3282.28 1720.71) rotate(180)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min3-5\\\" data-name=\\\"min3\\\" x=\\\"1623.05\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3371.84 338.53) rotate(135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min2-5\\\" data-name=\\\"min2\\\" x=\\\"1609.6\\\" y=\\\"918.09\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2503.75 -721.17) rotate(90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min1-5\\\" data-name=\\\"min1\\\" x=\\\"1623.05\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1121.57 -902.58) rotate(45)\\\"\\n              fill=\\\"#fff\\\" />\\n          </g>\\n        </g>\\n        <g id=\\\"kick_decay_copy\\\" data-name=\\\"kick_decay copy\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'snare', 'attack')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['snare']['attack']\\\" >\\n              <circle cx=\\\"1626.14\\\" cy=\\\"1017.14\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1656.13,1017.37a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1656.13,1017.37Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1656.13,1082.34Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1625.54\\\" y=\\\"987.19\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-6\\\" data-name=\\\"min7\\\" x=\\\"1687.99\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-302.05 1477.08) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-6\\\" data-name=\\\"min6\\\" x=\\\"1701.44\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(620.33 2719.29) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-6\\\" data-name=\\\"min5\\\" x=\\\"1687.99\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2131.91 2899.52) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-6\\\" data-name=\\\"min4\\\" x=\\\"1655.52\\\" y=\\\"1000.37\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3282.27 1977.13) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-6\\\" data-name=\\\"min3\\\" x=\\\"1623.04\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3462.49 557.4) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-6\\\" data-name=\\\"min2\\\" x=\\\"1609.59\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2631.95 -592.96) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-6\\\" data-name=\\\"min1\\\" x=\\\"1623.04\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1212.23 -865.03) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_attack_copy\\\" data-name=\\\"kick_attack copy\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'snare', 'decay')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['snare']['decay']\\\" >\\n              <circle cx=\\\"1626.14\\\" cy=\\\"1145.45\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1656.13,1145.78a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1656.13,1145.78Zm0,65A30.73,30.73,0,0,1,1625.4,1180c0-16.58,11.81-30.08,28.25-30.69V1160a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1656.13,1210.75Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1625.54\\\" y=\\\"1115.6\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-7\\\" data-name=\\\"min7\\\" x=\\\"1687.99\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-392.71 1514.64) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-7\\\" data-name=\\\"min6\\\" x=\\\"1701.44\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(492.13 2847.5) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-7\\\" data-name=\\\"min5\\\" x=\\\"1687.99\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2041.26 3118.38) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-7\\\" data-name=\\\"min4\\\" x=\\\"1655.52\\\" y=\\\"1128.58\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3282.28 2233.55) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-7\\\" data-name=\\\"min3\\\" x=\\\"1623.05\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3553.16 776.27) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-7\\\" data-name=\\\"min2\\\" x=\\\"1609.6\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2760.17 -464.75) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-7\\\" data-name=\\\"min1\\\" x=\\\"1623.05\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1302.88 -827.48) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_distortion_copy\\\" data-name=\\\"kick_distortion copy\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'snare', 'distortion')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['snare']['distortion']\\\" >\\n              <circle cx=\\\"1626.22\\\" cy=\\\"1273.73\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1656.13,1274a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1656.13,1274Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1656.13,1338.93Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1625.54\\\" y=\\\"1243.78\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-8\\\" data-name=\\\"min7\\\" x=\\\"1687.99\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-483.37 1552.19) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-8\\\" data-name=\\\"min6\\\" x=\\\"1701.44\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(363.92 2975.71) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-8\\\" data-name=\\\"min5\\\" x=\\\"1687.99\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1950.59 3337.25) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-8\\\" data-name=\\\"min4\\\" x=\\\"1655.52\\\" y=\\\"1256.79\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3282.27 2489.96) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-8\\\" data-name=\\\"min3\\\" x=\\\"1623.04\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3643.81 995.13) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-8\\\" data-name=\\\"min2\\\" x=\\\"1609.59\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2888.37 -336.54) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-8\\\" data-name=\\\"min1\\\" x=\\\"1623.04\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1393.54 -789.93) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"lowtom_knobs\\\">\\n        <g id=\\\"kick_level_copy_2\\\" data-name=\\\"kick_level copy 2\\\">\\n          <g my-knob-turner (value)=\\\"instrumentKnob($event, 'lowtom', 'level')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['lowtom']['level']\\\" >\\n            <circle cx=\\\"1791.94\\\" cy=\\\"889.64\\\" r=\\\"33.08\\\" fill=\\\"#e7745a\\\" />\\n            <path d=\\\"M1822.53,889.28a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1822.53,889.28Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41V892.83c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1822.53,954.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n            <rect x=\\\"1791.94\\\" y=\\\"859.1\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n          </g>\\n          <g>\\n            <rect id=\\\"min7-9\\\" data-name=\\\"min7\\\" x=\\\"1854.39\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-162.66 1557.2) rotate(-45)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min6-9\\\" data-name=\\\"min6\\\" x=\\\"1867.84\\\" y=\\\"918.08\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(914.94 2757.49) rotate(-90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min5-9\\\" data-name=\\\"min5\\\" x=\\\"1854.39\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2506.63 2798.31) rotate(-135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min4-9\\\" data-name=\\\"min4\\\" x=\\\"1821.92\\\" y=\\\"872.16\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3615.07 1720.71) rotate(180)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min3-9\\\" data-name=\\\"min3\\\" x=\\\"1789.44\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3655.9 220.87) rotate(135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min2-9\\\" data-name=\\\"min2\\\" x=\\\"1775.99\\\" y=\\\"918.09\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2670.15 -887.57) rotate(90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min1-9\\\" data-name=\\\"min1\\\" x=\\\"1789.45\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1170.31 -1020.25) rotate(45)\\\"\\n              fill=\\\"#fff\\\" />\\n          </g>\\n      \\n        </g>\\n        <g id=\\\"kick_decay_copy_2\\\" data-name=\\\"kick_decay copy 2\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'lowtom', 'attack')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['lowtom']['attack']\\\">\\n              <circle cx=\\\"1792.54\\\" cy=\\\"1017.14\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1822.53,1017.37a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1822.53,1017.37Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1822.53,1082.34Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1791.94\\\" y=\\\"987.19\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-10\\\" data-name=\\\"min7\\\" x=\\\"1854.39\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-253.32 1594.74) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-10\\\" data-name=\\\"min6\\\" x=\\\"1867.84\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(786.73 2885.69) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-10\\\" data-name=\\\"min5\\\" x=\\\"1854.39\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2415.97 3017.18) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-10\\\" data-name=\\\"min4\\\" x=\\\"1821.91\\\" y=\\\"1000.37\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3615.06 1977.13) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-10\\\" data-name=\\\"min3\\\" x=\\\"1789.44\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3746.55 439.74) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-10\\\" data-name=\\\"min2\\\" x=\\\"1775.99\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2798.35 -759.36) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-10\\\" data-name=\\\"min1\\\" x=\\\"1789.44\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1260.96 -982.69) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_attack_copy_2\\\" data-name=\\\"kick_attack copy 2\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'lowtom', 'decay')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['lowtom']['decay']\\\">\\n              <circle cx=\\\"1792.54\\\" cy=\\\"1145.45\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1822.53,1145.78a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1822.53,1145.78Zm0,65A30.73,30.73,0,0,1,1791.8,1180c0-16.58,11.81-30.08,28.25-30.69V1160a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1822.53,1210.75Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1791.94\\\" y=\\\"1115.6\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-11\\\" data-name=\\\"min7\\\" x=\\\"1854.39\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-343.97 1632.3) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-11\\\" data-name=\\\"min6\\\" x=\\\"1867.84\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(658.53 3013.9) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-11\\\" data-name=\\\"min5\\\" x=\\\"1854.39\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2325.32 3236.05) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-11\\\" data-name=\\\"min4\\\" x=\\\"1821.92\\\" y=\\\"1128.58\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3615.07 2233.55) rotate(180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-11\\\" data-name=\\\"min3\\\" x=\\\"1789.44\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3837.21 658.6) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-11\\\" data-name=\\\"min2\\\" x=\\\"1775.99\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2926.56 -631.15) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-11\\\" data-name=\\\"min1\\\" x=\\\"1789.45\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1351.62 -945.14) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_distortion_copy_2\\\" data-name=\\\"kick_distortion copy 2\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'lowtom', 'distortion')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['lowtom']['distortion']\\\">\\n              <circle cx=\\\"1792.61\\\" cy=\\\"1273.73\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1822.53,1274a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1822.53,1274Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1822.53,1338.93Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1791.94\\\" y=\\\"1243.78\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-12\\\" data-name=\\\"min7\\\" x=\\\"1854.39\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-434.63 1669.85) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-12\\\" data-name=\\\"min6\\\" x=\\\"1867.84\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(530.31 3142.11) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-12\\\" data-name=\\\"min5\\\" x=\\\"1854.39\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2234.66 3454.91) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-12\\\" data-name=\\\"min4\\\" x=\\\"1821.91\\\" y=\\\"1256.79\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3615.06 2489.96) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-12\\\" data-name=\\\"min3\\\" x=\\\"1789.44\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3927.87 877.48) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-12\\\" data-name=\\\"min2\\\" x=\\\"1775.99\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3054.77 -502.94) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-12\\\" data-name=\\\"min1\\\" x=\\\"1789.44\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1442.27 -907.59) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"midtom_knobs\\\">\\n        <g id=\\\"kick_level_copy_3\\\" data-name=\\\"kick_level copy 3\\\">\\n          <g my-knob-turner (value)=\\\"instrumentKnob($event, 'midtom', 'level')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['midtom']['level']\\\">\\n            <circle cx=\\\"1953.37\\\" cy=\\\"889.64\\\" r=\\\"33.08\\\" fill=\\\"#e7745a\\\" />\\n            <path d=\\\"M1984,889.28a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1984,889.28Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41H1986a0.41,0.41,0,0,0,.4-0.41V892.83c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1984,954.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n            <rect x=\\\"1953.37\\\" y=\\\"859.1\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n          </g>\\n          <g>\\n            <rect id=\\\"min7-13\\\" data-name=\\\"min7\\\" x=\\\"2015.82\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-115.38 1671.35) rotate(-45)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min6-13\\\" data-name=\\\"min6\\\" x=\\\"2029.27\\\" y=\\\"918.08\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1076.37 2918.92) rotate(-90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min5-13\\\" data-name=\\\"min5\\\" x=\\\"2015.82\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2782.21 2912.46) rotate(-135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min4-13\\\" data-name=\\\"min4\\\" x=\\\"1983.35\\\" y=\\\"872.16\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3937.93 1720.71) rotate(180)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min3-13\\\" data-name=\\\"min3\\\" x=\\\"1950.88\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3931.48 106.72) rotate(135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min2-13\\\" data-name=\\\"min2\\\" x=\\\"1937.43\\\" y=\\\"918.09\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2831.58 -1049) rotate(90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min1-13\\\" data-name=\\\"min1\\\" x=\\\"1950.88\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1217.59 -1134.39) rotate(45)\\\"\\n              fill=\\\"#fff\\\" />\\n          </g>\\n      \\n        </g>\\n        <g id=\\\"kick_decay_copy_3\\\" data-name=\\\"kick_decay copy 3\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'midtom', 'attack')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['midtom']['attack']\\\">\\n              <circle cx=\\\"1953.97\\\" cy=\\\"1017.14\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1984,1017.37a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1984,1017.37Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41H1986a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1984,1082.34Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1953.37\\\" y=\\\"987.19\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-14\\\" data-name=\\\"min7\\\" x=\\\"2015.82\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-206.04 1708.89) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-14\\\" data-name=\\\"min6\\\" x=\\\"2029.27\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(948.16 3047.12) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-14\\\" data-name=\\\"min5\\\" x=\\\"2015.82\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2691.55 3131.33) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-14\\\" data-name=\\\"min4\\\" x=\\\"1983.35\\\" y=\\\"1000.37\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3937.93 1977.13) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-14\\\" data-name=\\\"min3\\\" x=\\\"1950.87\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4022.13 325.59) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-14\\\" data-name=\\\"min2\\\" x=\\\"1937.42\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2959.78 -920.79) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-14\\\" data-name=\\\"min1\\\" x=\\\"1950.87\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1308.24 -1096.84) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_attack_copy_3\\\" data-name=\\\"kick_attack copy 3\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'midtom', 'decay')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['midtom']['decay']\\\">\\n              <circle cx=\\\"1953.97\\\" cy=\\\"1145.45\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1984,1145.78A34.25,34.25,0,1,0,2018.2,1180,34.25,34.25,0,0,0,1984,1145.78Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69V1160a0.4,0.4,0,0,0,.4.41H1986a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1984,1210.75Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1953.37\\\" y=\\\"1115.6\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-15\\\" data-name=\\\"min7\\\" x=\\\"2015.82\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-296.69 1746.45) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-15\\\" data-name=\\\"min6\\\" x=\\\"2029.27\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(819.96 3175.33) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-15\\\" data-name=\\\"min5\\\" x=\\\"2015.82\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2600.9 3350.2) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-15\\\" data-name=\\\"min4\\\" x=\\\"1983.35\\\" y=\\\"1128.58\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3937.93 2233.55) rotate(180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-15\\\" data-name=\\\"min3\\\" x=\\\"1950.88\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4112.79 544.45) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-15\\\" data-name=\\\"min2\\\" x=\\\"1937.43\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3088 -792.58) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-15\\\" data-name=\\\"min1\\\" x=\\\"1950.88\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1398.9 -1059.29) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_distortion_copy_3\\\" data-name=\\\"kick_distortion copy 3\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'midtom', 'distortion')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['midtom']['distortion']\\\">\\n              <circle cx=\\\"1954.05\\\" cy=\\\"1273.73\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M1984,1274a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,1984,1274Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41H1986a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,1984,1338.93Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"1953.37\\\" y=\\\"1243.78\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-16\\\" data-name=\\\"min7\\\" x=\\\"2015.82\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-387.35 1784) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-16\\\" data-name=\\\"min6\\\" x=\\\"2029.27\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(691.74 3303.54) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-16\\\" data-name=\\\"min5\\\" x=\\\"2015.82\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2510.24 3569.06) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-16\\\" data-name=\\\"min4\\\" x=\\\"1983.35\\\" y=\\\"1256.79\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3937.93 2489.96) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-16\\\" data-name=\\\"min3\\\" x=\\\"1950.87\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4203.45 763.33) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-16\\\" data-name=\\\"min2\\\" x=\\\"1937.42\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3216.2 -664.37) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-16\\\" data-name=\\\"min1\\\" x=\\\"1950.87\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1489.56 -1021.74) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"hitom_knobs\\\">\\n        <g id=\\\"kick_level_copy_4\\\" data-name=\\\"kick_level copy 4\\\">\\n          <g my-knob-turner (value)=\\\"instrumentKnob($event, 'hitom', 'level')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['hitom']['level']\\\">\\n            <circle cx=\\\"2121.53\\\" cy=\\\"889.64\\\" r=\\\"33.08\\\" fill=\\\"#e7745a\\\" />\\n            <path d=\\\"M2152.12,889.28a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2152.12,889.28Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41V892.83c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2152.12,954.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n            <rect x=\\\"2121.53\\\" y=\\\"859.1\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n          </g>\\n          <g>\\n            <rect id=\\\"min7-17\\\" data-name=\\\"min7\\\" x=\\\"2183.98\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-66.12 1790.25) rotate(-45)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min6-17\\\" data-name=\\\"min6\\\" x=\\\"2197.43\\\" y=\\\"918.08\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1244.53 3087.08) rotate(-90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min5-17\\\" data-name=\\\"min5\\\" x=\\\"2183.98\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3069.28 3031.37) rotate(-135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min4-17\\\" data-name=\\\"min4\\\" x=\\\"2151.51\\\" y=\\\"872.16\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4274.25 1720.71) rotate(-180)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min3-17\\\" data-name=\\\"min3\\\" x=\\\"2119.04\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4218.55 -12.19) rotate(135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min2-17\\\" data-name=\\\"min2\\\" x=\\\"2105.58\\\" y=\\\"918.09\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2999.74 -1217.16) rotate(90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min1-17\\\" data-name=\\\"min1\\\" x=\\\"2119.04\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1266.84 -1253.3) rotate(45)\\\"\\n              fill=\\\"#fff\\\" />\\n          </g>\\n      \\n        </g>\\n        <g id=\\\"kick_decay_copy_4\\\" data-name=\\\"kick_decay copy 4\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'hitom', 'attack')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['hitom']['attack']\\\">\\n              <circle cx=\\\"2122.13\\\" cy=\\\"1017.14\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2152.12,1017.37a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2152.12,1017.37Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2152.12,1082.34Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2121.53\\\" y=\\\"987.19\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-18\\\" data-name=\\\"min7\\\" x=\\\"2183.98\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-156.78 1827.8) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-18\\\" data-name=\\\"min6\\\" x=\\\"2197.43\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1116.32 3215.28) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-18\\\" data-name=\\\"min5\\\" x=\\\"2183.98\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2978.62 3250.23) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-18\\\" data-name=\\\"min4\\\" x=\\\"2151.5\\\" y=\\\"1000.37\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4274.24 1977.13) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-18\\\" data-name=\\\"min3\\\" x=\\\"2119.03\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4309.2 206.69) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-18\\\" data-name=\\\"min2\\\" x=\\\"2105.58\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3127.94 -1088.95) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-18\\\" data-name=\\\"min1\\\" x=\\\"2119.03\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1357.49 -1215.75) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_attack_copy_4\\\" data-name=\\\"kick_attack copy 4\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'hitom', 'decay')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['hitom']['decay']\\\">\\n              <circle cx=\\\"2122.13\\\" cy=\\\"1145.45\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2152.12,1145.78a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2152.12,1145.78Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69V1160a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2152.12,1210.75Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2121.53\\\" y=\\\"1115.6\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-19\\\" data-name=\\\"min7\\\" x=\\\"2183.98\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-247.44 1865.36) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-19\\\" data-name=\\\"min6\\\" x=\\\"2197.43\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(988.12 3343.49) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-19\\\" data-name=\\\"min5\\\" x=\\\"2183.98\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2887.96 3469.1) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-19\\\" data-name=\\\"min4\\\" x=\\\"2151.51\\\" y=\\\"1128.58\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4274.25 2233.55) rotate(180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-19\\\" data-name=\\\"min3\\\" x=\\\"2119.04\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4399.86 425.55) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-19\\\" data-name=\\\"min2\\\" x=\\\"2105.58\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3256.15 -960.74) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-19\\\" data-name=\\\"min1\\\" x=\\\"2119.04\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1448.16 -1178.2) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_distortion_copy_4\\\" data-name=\\\"kick_distortion copy 4\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'hitom', 'distortion')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['hitom']['distortion']\\\">\\n              <circle cx=\\\"2122.21\\\" cy=\\\"1273.73\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2152.12,1274a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2152.12,1274Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2152.12,1338.93Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2121.53\\\" y=\\\"1243.78\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-20\\\" data-name=\\\"min7\\\" x=\\\"2183.98\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-338.1 1902.9) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-20\\\" data-name=\\\"min6\\\" x=\\\"2197.43\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(859.9 3471.7) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-20\\\" data-name=\\\"min5\\\" x=\\\"2183.98\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2797.3 3687.96) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-20\\\" data-name=\\\"min4\\\" x=\\\"2151.5\\\" y=\\\"1256.79\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4274.24 2489.96) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-20\\\" data-name=\\\"min3\\\" x=\\\"2119.03\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4490.51 644.42) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-20\\\" data-name=\\\"min2\\\" x=\\\"2105.58\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3384.36 -832.53) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-20\\\" data-name=\\\"min1\\\" x=\\\"2119.03\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1538.81 -1140.64) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"rimshot_knobs\\\">\\n        <g id=\\\"kick_level_copy_5\\\" data-name=\\\"kick_level copy 5\\\">\\n          <g my-knob-turner (value)=\\\"instrumentKnob($event, 'rimshot', 'level')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['rimshot']['level']\\\">\\n            <circle cx=\\\"2286.32\\\" cy=\\\"889.64\\\" r=\\\"33.08\\\" fill=\\\"#e7745a\\\" />\\n            <path d=\\\"M2316.92,889.28a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2316.92,889.28Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41H2319a0.41,0.41,0,0,0,.4-0.41V892.83c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2316.92,954.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n            <rect x=\\\"2286.32\\\" y=\\\"859.1\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n          </g>\\n          <g>\\n            <rect id=\\\"min7-21\\\" data-name=\\\"min7\\\" x=\\\"2348.78\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-17.86 1906.78) rotate(-45)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min6-21\\\" data-name=\\\"min6\\\" x=\\\"2362.23\\\" y=\\\"918.08\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1409.33 3251.87) rotate(-90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min5-21\\\" data-name=\\\"min5\\\" x=\\\"2348.78\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3350.6 3147.9) rotate(-135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min4-21\\\" data-name=\\\"min4\\\" x=\\\"2316.3\\\" y=\\\"872.16\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4603.84 1720.71) rotate(-180)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min3-21\\\" data-name=\\\"min3\\\" x=\\\"2283.83\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4499.87 -128.71) rotate(135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min2-21\\\" data-name=\\\"min2\\\" x=\\\"2270.38\\\" y=\\\"918.09\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3164.53 -1381.95) rotate(90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min1-21\\\" data-name=\\\"min1\\\" x=\\\"2283.83\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1315.11 -1369.83) rotate(45)\\\"\\n              fill=\\\"#fff\\\" />\\n          </g>\\n      \\n        </g>\\n        <g id=\\\"kick_decay_copy_5\\\" data-name=\\\"kick_decay copy 5\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'rimshot', 'attack')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['rimshot']['attack']\\\">\\n              <circle cx=\\\"2286.93\\\" cy=\\\"1017.14\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2316.92,1017.37a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2316.92,1017.37Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41H2319a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2316.92,1082.34Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2286.32\\\" y=\\\"987.19\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-22\\\" data-name=\\\"min7\\\" x=\\\"2348.77\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-108.52 1944.33) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-22\\\" data-name=\\\"min6\\\" x=\\\"2362.22\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1281.12 3380.08) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-22\\\" data-name=\\\"min5\\\" x=\\\"2348.77\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3259.94 3366.76) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-22\\\" data-name=\\\"min4\\\" x=\\\"2316.3\\\" y=\\\"1000.37\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4603.84 1977.13) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-22\\\" data-name=\\\"min3\\\" x=\\\"2283.83\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4590.52 90.16) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-22\\\" data-name=\\\"min2\\\" x=\\\"2270.38\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3292.74 -1253.74) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-22\\\" data-name=\\\"min1\\\" x=\\\"2283.83\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1405.76 -1332.27) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_attack_copy_5\\\" data-name=\\\"kick_attack copy 5\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'rimshot', 'decay')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['rimshot']['decay']\\\">\\n              <circle cx=\\\"2286.93\\\" cy=\\\"1145.45\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2316.92,1145.78a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2316.92,1145.78Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69V1160a0.4,0.4,0,0,0,.4.41H2319a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2316.92,1210.75Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2286.32\\\" y=\\\"1115.6\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-23\\\" data-name=\\\"min7\\\" x=\\\"2348.78\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-199.17 1981.88) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-23\\\" data-name=\\\"min6\\\" x=\\\"2362.23\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1152.91 3508.29) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-23\\\" data-name=\\\"min5\\\" x=\\\"2348.78\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3169.28 3585.63) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-23\\\" data-name=\\\"min4\\\" x=\\\"2316.3\\\" y=\\\"1128.58\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4603.84 2233.55) rotate(180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-23\\\" data-name=\\\"min3\\\" x=\\\"2283.83\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4681.18 309.02) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-23\\\" data-name=\\\"min2\\\" x=\\\"2270.38\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3420.95 -1125.54) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-23\\\" data-name=\\\"min1\\\" x=\\\"2283.83\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1496.43 -1294.73) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_distortion_copy_5\\\" data-name=\\\"kick_distortion copy 5\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'rimshot', 'distortion')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['rimshot']['distortion']\\\">\\n              <circle cx=\\\"2287\\\" cy=\\\"1273.73\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2316.92,1274a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2316.92,1274Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41H2319a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2316.92,1338.93Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2286.32\\\" y=\\\"1243.78\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-24\\\" data-name=\\\"min7\\\" x=\\\"2348.77\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-289.83 2019.43) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-24\\\" data-name=\\\"min6\\\" x=\\\"2362.22\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1024.7 3636.49) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-24\\\" data-name=\\\"min5\\\" x=\\\"2348.77\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3078.63 3804.49) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-24\\\" data-name=\\\"min4\\\" x=\\\"2316.3\\\" y=\\\"1256.79\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4603.84 2489.96) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-24\\\" data-name=\\\"min3\\\" x=\\\"2283.83\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4771.84 527.89) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-24\\\" data-name=\\\"min2\\\" x=\\\"2270.38\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3549.15 -997.32) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-24\\\" data-name=\\\"min1\\\" x=\\\"2283.83\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1587.08 -1257.17) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"clap_knobs\\\">\\n        <g id=\\\"kick_level_copy_6\\\" data-name=\\\"kick_level copy 6\\\">\\n          <g my-knob-turner (value)=\\\"instrumentKnob($event, 'clap', 'level')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['clap']['level']\\\">\\n            <circle cx=\\\"2451.12\\\" cy=\\\"889.64\\\" r=\\\"33.08\\\" fill=\\\"#e7745a\\\" />\\n            <path d=\\\"M2481.71,889.28A34.25,34.25,0,1,0,2516,923.52,34.25,34.25,0,0,0,2481.71,889.28Zm0,65A30.73,30.73,0,0,1,2451,923.52c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41V892.83c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2481.71,954.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n            <rect x=\\\"2451.12\\\" y=\\\"859.1\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n          </g>\\n          <g>\\n            <rect id=\\\"min7-25\\\" data-name=\\\"min7\\\" x=\\\"2513.57\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(30.41 2023.31) rotate(-45)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min6-25\\\" data-name=\\\"min6\\\" x=\\\"2527.02\\\" y=\\\"918.08\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1574.12 3416.67) rotate(-90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min5-25\\\" data-name=\\\"min5\\\" x=\\\"2513.57\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3631.92 3264.43) rotate(-135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min4-25\\\" data-name=\\\"min4\\\" x=\\\"2481.1\\\" y=\\\"872.16\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4933.43 1720.71) rotate(180)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min3-25\\\" data-name=\\\"min3\\\" x=\\\"2448.63\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4781.19 -245.24) rotate(135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min2-25\\\" data-name=\\\"min2\\\" x=\\\"2435.18\\\" y=\\\"918.09\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3329.33 -1546.75) rotate(90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min1-25\\\" data-name=\\\"min1\\\" x=\\\"2448.63\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1363.38 -1486.36) rotate(45)\\\"\\n              fill=\\\"#fff\\\" />\\n          </g>\\n      \\n        </g>\\n        <g id=\\\"kick_decay_copy_6\\\" data-name=\\\"kick_decay copy 6\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'clap', 'attack')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['clap']['attack']\\\">\\n              <circle cx=\\\"2451.72\\\" cy=\\\"1017.14\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2481.71,1017.37a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2481.71,1017.37Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2481.71,1082.34Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2451.12\\\" y=\\\"987.19\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-26\\\" data-name=\\\"min7\\\" x=\\\"2513.57\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-60.25 2060.85) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-26\\\" data-name=\\\"min6\\\" x=\\\"2527.02\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1445.91 3544.87) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-26\\\" data-name=\\\"min5\\\" x=\\\"2513.57\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3541.26 3483.29) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-26\\\" data-name=\\\"min4\\\" x=\\\"2481.1\\\" y=\\\"1000.37\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4933.43 1977.13) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-26\\\" data-name=\\\"min3\\\" x=\\\"2448.62\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4871.84 -26.37) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-26\\\" data-name=\\\"min2\\\" x=\\\"2435.17\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3457.53 -1418.54) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-26\\\" data-name=\\\"min1\\\" x=\\\"2448.62\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1454.03 -1448.8) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_attack_copy_6\\\" data-name=\\\"kick_attack copy 6\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'clap', 'decay')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['clap']['decay']\\\">\\n              <circle cx=\\\"2451.72\\\" cy=\\\"1145.45\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2481.71,1145.78A34.25,34.25,0,1,0,2516,1180,34.25,34.25,0,0,0,2481.71,1145.78Zm0,65A30.73,30.73,0,0,1,2451,1180c0-16.58,11.81-30.08,28.25-30.69V1160a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2481.71,1210.75Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2451.12\\\" y=\\\"1115.6\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-27\\\" data-name=\\\"min7\\\" x=\\\"2513.57\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-150.9 2098.41) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-27\\\" data-name=\\\"min6\\\" x=\\\"2527.02\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1317.71 3673.08) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-27\\\" data-name=\\\"min5\\\" x=\\\"2513.57\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3450.61 3702.16) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-27\\\" data-name=\\\"min4\\\" x=\\\"2481.1\\\" y=\\\"1128.58\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4933.43 2233.55) rotate(180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-27\\\" data-name=\\\"min3\\\" x=\\\"2448.63\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4962.51 192.49) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-27\\\" data-name=\\\"min2\\\" x=\\\"2435.18\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3585.75 -1290.33) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-27\\\" data-name=\\\"min1\\\" x=\\\"2448.63\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1544.69 -1411.25) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_distortion_copy_6\\\" data-name=\\\"kick_distortion copy 6\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'clap', 'distortion')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['clap']['distortion']\\\">\\n              <circle cx=\\\"2451.8\\\" cy=\\\"1273.73\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2481.71,1274a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2481.71,1274Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2481.71,1338.93Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2451.12\\\" y=\\\"1243.78\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-28\\\" data-name=\\\"min7\\\" x=\\\"2513.57\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-241.56 2135.96) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-28\\\" data-name=\\\"min6\\\" x=\\\"2527.02\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1189.49 3801.29) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-28\\\" data-name=\\\"min5\\\" x=\\\"2513.57\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3359.95 3921.02) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-28\\\" data-name=\\\"min4\\\" x=\\\"2481.1\\\" y=\\\"1256.79\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4933.43 2489.96) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-28\\\" data-name=\\\"min3\\\" x=\\\"2448.62\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5053.16 411.36) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-28\\\" data-name=\\\"min2\\\" x=\\\"2435.17\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3713.95 -1162.12) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-28\\\" data-name=\\\"min1\\\" x=\\\"2448.62\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1635.34 -1373.7) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"hihat_knobs\\\">\\n        <g id=\\\"kick_level_copy_7\\\" data-name=\\\"kick_level copy 7\\\">\\n          <g my-knob-turner (value)=\\\"instrumentKnob($event, 'hihat', 'level')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['hihat']['level']\\\">\\n            <circle cx=\\\"2615.91\\\" cy=\\\"889.64\\\" r=\\\"33.08\\\" fill=\\\"#e7745a\\\" />\\n            <path d=\\\"M2646.51,889.28a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2646.51,889.28Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41V892.83c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2646.51,954.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n            <rect x=\\\"2615.91\\\" y=\\\"859.1\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n          </g>\\n          <g>\\n            <rect id=\\\"min7-29\\\" data-name=\\\"min7\\\" x=\\\"2678.37\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(78.68 2139.84) rotate(-45)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min6-29\\\" data-name=\\\"min6\\\" x=\\\"2691.82\\\" y=\\\"918.08\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1738.92 3581.46) rotate(-90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min5-29\\\" data-name=\\\"min5\\\" x=\\\"2678.37\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3913.25 3380.95) rotate(-135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min4-29\\\" data-name=\\\"min4\\\" x=\\\"2645.89\\\" y=\\\"872.16\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5263.02 1720.71) rotate(180)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min3-29\\\" data-name=\\\"min3\\\" x=\\\"2613.42\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5062.52 -361.77) rotate(135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min2-29\\\" data-name=\\\"min2\\\" x=\\\"2599.97\\\" y=\\\"918.09\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3494.12 -1711.54) rotate(90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min1-29\\\" data-name=\\\"min1\\\" x=\\\"2613.42\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1411.65 -1602.89) rotate(45)\\\"\\n              fill=\\\"#fff\\\" />\\n          </g>\\n      \\n        </g>\\n        <g id=\\\"kick_decay_copy_7\\\" data-name=\\\"kick_decay copy 7\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'hihat', 'attack')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['hihat']['attack']\\\">\\n              <circle cx=\\\"2616.52\\\" cy=\\\"1017.14\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2646.51,1017.37a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2646.51,1017.37Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2646.51,1082.34Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2615.91\\\" y=\\\"987.19\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-30\\\" data-name=\\\"min7\\\" x=\\\"2678.36\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-11.98 2177.38) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-30\\\" data-name=\\\"min6\\\" x=\\\"2691.81\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1610.71 3709.67) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-30\\\" data-name=\\\"min5\\\" x=\\\"2678.36\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3822.59 3599.82) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-30\\\" data-name=\\\"min4\\\" x=\\\"2645.89\\\" y=\\\"1000.37\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5263.02 1977.13) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-30\\\" data-name=\\\"min3\\\" x=\\\"2613.42\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5153.17 -142.89) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-30\\\" data-name=\\\"min2\\\" x=\\\"2599.97\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3622.33 -1583.33) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-30\\\" data-name=\\\"min1\\\" x=\\\"2613.42\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1502.3 -1565.33) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_attack_copy_7\\\" data-name=\\\"kick_attack copy 7\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'hihat', 'decay')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['hihat']['decay']\\\">\\n              <circle cx=\\\"2616.52\\\" cy=\\\"1145.45\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2646.51,1145.78a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2646.51,1145.78Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69V1160a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2646.51,1210.75Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2615.91\\\" y=\\\"1115.6\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-31\\\" data-name=\\\"min7\\\" x=\\\"2678.37\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-102.64 2214.94) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-31\\\" data-name=\\\"min6\\\" x=\\\"2691.82\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1482.5 3837.88) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-31\\\" data-name=\\\"min5\\\" x=\\\"2678.37\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3731.93 3818.69) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-31\\\" data-name=\\\"min4\\\" x=\\\"2645.89\\\" y=\\\"1128.58\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5263.02 2233.55) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-31\\\" data-name=\\\"min3\\\" x=\\\"2613.42\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5243.83 75.96) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-31\\\" data-name=\\\"min2\\\" x=\\\"2599.97\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"matrix(0, 1, -1, 0, 3750.54, -1455.13)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-31\\\" data-name=\\\"min1\\\" x=\\\"2613.42\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1592.96 -1527.78) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_distortion_copy_7\\\" data-name=\\\"kick_distortion copy 7\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'hihat', 'distortion')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['hihat']['distortion']\\\">\\n              <circle cx=\\\"2616.59\\\" cy=\\\"1273.73\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2646.51,1274a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2646.51,1274Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2646.51,1338.93Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2615.91\\\" y=\\\"1243.78\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-32\\\" data-name=\\\"min7\\\" x=\\\"2678.36\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-193.3 2252.49) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-32\\\" data-name=\\\"min6\\\" x=\\\"2691.81\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1354.29 3966.08) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-32\\\" data-name=\\\"min5\\\" x=\\\"2678.36\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3641.27 4037.55) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-32\\\" data-name=\\\"min4\\\" x=\\\"2645.89\\\" y=\\\"1256.79\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5263.02 2489.96) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-32\\\" data-name=\\\"min3\\\" x=\\\"2613.42\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5334.48 294.84) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-32\\\" data-name=\\\"min2\\\" x=\\\"2599.97\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3878.75 -1326.91) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-32\\\" data-name=\\\"min1\\\" x=\\\"2613.42\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1683.61 -1490.23) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"cymbal_knobs\\\">\\n        <g id=\\\"kick_level_copy_8\\\" data-name=\\\"kick_level copy 8\\\">\\n          <g my-knob-turner (value)=\\\"instrumentKnob($event, 'cymbal', 'level')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['cymbal']['level']\\\">\\n            <circle cx=\\\"2780.71\\\" cy=\\\"889.64\\\" r=\\\"33.08\\\" fill=\\\"#e7745a\\\" />\\n            <path d=\\\"M2811.3,889.28a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2811.3,889.28Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41V892.83c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2811.3,954.25Z\\\"\\n              transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n            <rect x=\\\"2780.71\\\" y=\\\"859.1\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n          </g>\\n          <g>\\n            <rect id=\\\"min7-33\\\" data-name=\\\"min7\\\" x=\\\"2843.16\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(126.95 2256.36) rotate(-45)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min6-33\\\" data-name=\\\"min6\\\" x=\\\"2856.61\\\" y=\\\"918.08\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1903.71 3746.26) rotate(-90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min5-33\\\" data-name=\\\"min5\\\" x=\\\"2843.16\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4194.57 3497.48) rotate(-135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min4-33\\\" data-name=\\\"min4\\\" x=\\\"2810.69\\\" y=\\\"872.16\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5592.62 1720.71) rotate(180)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min3-33\\\" data-name=\\\"min3\\\" x=\\\"2778.22\\\" y=\\\"885.61\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5343.84 -478.3) rotate(135)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min2-33\\\" data-name=\\\"min2\\\" x=\\\"2764.77\\\" y=\\\"918.09\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3658.92 -1876.34) rotate(90)\\\"\\n              fill=\\\"#fff\\\" />\\n            <rect id=\\\"min1-33\\\" data-name=\\\"min1\\\" x=\\\"2778.22\\\" y=\\\"950.56\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1459.91 -1719.41) rotate(45)\\\"\\n              fill=\\\"#fff\\\" />\\n          </g>\\n      \\n        </g>\\n        <g id=\\\"kick_decay_copy_8\\\" data-name=\\\"kick_decay copy 8\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'cymbal', 'attack')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['cymbal']['attack']\\\">\\n              <circle cx=\\\"2781.31\\\" cy=\\\"1017.14\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2811.3,1017.37a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2811.3,1017.37Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2811.3,1082.34Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2780.71\\\" y=\\\"987.19\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-34\\\" data-name=\\\"min7\\\" x=\\\"2843.16\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(36.29 2293.91) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-34\\\" data-name=\\\"min6\\\" x=\\\"2856.61\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1775.5 3874.46) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-34\\\" data-name=\\\"min5\\\" x=\\\"2843.16\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4103.91 3716.34) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-34\\\" data-name=\\\"min4\\\" x=\\\"2810.69\\\" y=\\\"1000.37\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5592.61 1977.13) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-34\\\" data-name=\\\"min3\\\" x=\\\"2778.21\\\" y=\\\"1013.82\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5434.49 -259.42) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-34\\\" data-name=\\\"min2\\\" x=\\\"2764.76\\\" y=\\\"1046.29\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3787.12 -1748.13) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-34\\\" data-name=\\\"min1\\\" x=\\\"2778.21\\\" y=\\\"1078.77\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1550.56 -1681.86) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_attack_copy_8\\\" data-name=\\\"kick_attack copy 8\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'cymbal', 'decay')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['cymbal']['decay']\\\">\\n              <circle cx=\\\"2781.31\\\" cy=\\\"1145.45\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2811.3,1145.78a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2811.3,1145.78Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69V1160a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2811.3,1210.75Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2780.71\\\" y=\\\"1115.6\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-35\\\" data-name=\\\"min7\\\" x=\\\"2843.16\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-54.37 2331.47) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-35\\\" data-name=\\\"min6\\\" x=\\\"2856.61\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1647.3 4002.67) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-35\\\" data-name=\\\"min5\\\" x=\\\"2843.16\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4013.25 3935.21) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-35\\\" data-name=\\\"min4\\\" x=\\\"2810.69\\\" y=\\\"1128.58\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5592.62 2233.55) rotate(180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-35\\\" data-name=\\\"min3\\\" x=\\\"2778.22\\\" y=\\\"1142.03\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5525.15 -40.57) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-35\\\" data-name=\\\"min2\\\" x=\\\"2764.77\\\" y=\\\"1174.5\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3915.34 -1619.92) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-35\\\" data-name=\\\"min1\\\" x=\\\"2778.22\\\" y=\\\"1206.98\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1641.23 -1644.31) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n        <g id=\\\"kick_distortion_copy_8\\\" data-name=\\\"kick_distortion copy 8\\\">\\n          <g>\\n            <g my-knob-turner (value)=\\\"instrumentKnob($event, 'cymbal', 'distortion')\\\" [starting]=\\\"sequencerLineUp['instrumentSettings']['cymbal']['distortion']\\\">\\n              <circle cx=\\\"2781.39\\\" cy=\\\"1273.73\\\" r=\\\"33.12\\\" fill=\\\"#fffef6\\\" />\\n              <path d=\\\"M2811.3,1274a34.25,34.25,0,1,0,34.24,34.24A34.25,34.25,0,0,0,2811.3,1274Zm0,65a30.73,30.73,0,0,1-30.73-30.73c0-16.58,11.81-30.08,28.25-30.69v10.66a0.4,0.4,0,0,0,.4.41h4.16a0.41,0.41,0,0,0,.4-0.41v-10.66c16.44,0.61,28.24,14.11,28.24,30.69A30.72,30.72,0,0,1,2811.3,1338.93Z\\\"\\n                transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n              <rect x=\\\"2780.71\\\" y=\\\"1243.78\\\" width=\\\"1.22\\\" height=\\\"8.27\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" fill=\\\"#fff200\\\" />\\n            </g>\\n            <g>\\n              <rect id=\\\"min7-36\\\" data-name=\\\"min7\\\" x=\\\"2843.16\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-145.03 2369.01) rotate(-45)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min6-36\\\" data-name=\\\"min6\\\" x=\\\"2856.61\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1519.08 4130.88) rotate(-90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min5-36\\\" data-name=\\\"min5\\\" x=\\\"2843.16\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(3922.6 4154.07) rotate(-135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min4-36\\\" data-name=\\\"min4\\\" x=\\\"2810.69\\\" y=\\\"1256.79\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5592.61 2489.96) rotate(-180)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min3-36\\\" data-name=\\\"min3\\\" x=\\\"2778.21\\\" y=\\\"1270.24\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(5615.81 178.31) rotate(135)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min2-36\\\" data-name=\\\"min2\\\" x=\\\"2764.76\\\" y=\\\"1302.71\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(4043.54 -1491.71) rotate(90)\\\"\\n                fill=\\\"#fff\\\" />\\n              <rect id=\\\"min1-36\\\" data-name=\\\"min1\\\" x=\\\"2778.21\\\" y=\\\"1335.18\\\" width=\\\"1.22\\\" height=\\\"10.88\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1731.88 -1606.75) rotate(45)\\\"\\n                fill=\\\"#fff\\\" />\\n            </g>\\n          </g>\\n        </g>\\n      </g>\\n      <g my-knob-turner (value)=\\\"tempoValue($event)\\\" id=\\\"tempo_knob\\\" [starting]=\\\"sequencerLineUp['projectSettings']['tempo']\\\">\\n        <circle id=\\\"circle\\\" cx=\\\"1182.59\\\" cy=\\\"1402.13\\\" r=\\\"83.14\\\" fill=\\\"#fffef6\\\" />\\n        <path d=\\\"M1212.57,1346.6a90,90,0,1,0,90,90A90,90,0,0,0,1212.57,1346.6Zm0,173.16a83.14,83.14,0,0,1-6.56-166v23.57a2.06,2.06,0,0,0,2.06,2.06h9a2.06,2.06,0,0,0,2.06-2.06v-23.58A83.15,83.15,0,0,1,1212.57,1519.76Z\\\"\\n          transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n        <rect x=\\\"1180.87\\\" y=\\\"1317.38\\\" width=\\\"3.44\\\" height=\\\"21.5\\\" rx=\\\"1\\\" ry=\\\"1\\\" fill=\\\"#fff200\\\" />\\n      </g>\\n        <g>\\n          <rect id=\\\"min7-37\\\" data-name=\\\"min7\\\" x=\\\"1299.25\\\" y=\\\"1513.35\\\" width=\\\"3.31\\\" height=\\\"29.6\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-729.52 1332.97) rotate(-45)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min6-37\\\" data-name=\\\"min6\\\" x=\\\"1335.84\\\" y=\\\"1425.02\\\" width=\\\"3.31\\\" height=\\\"29.6\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-132.3 2742.82) rotate(-90)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min5-37\\\" data-name=\\\"min5\\\" x=\\\"1299.25\\\" y=\\\"1336.68\\\" width=\\\"3.31\\\" height=\\\"29.6\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1235.16 3192.51) rotate(-135)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min4-37\\\" data-name=\\\"min4\\\" x=\\\"1210.91\\\" y=\\\"1300.09\\\" width=\\\"3.31\\\" height=\\\"29.6\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2395.16 2595.29) rotate(180)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min3-37\\\" data-name=\\\"min3\\\" x=\\\"1122.58\\\" y=\\\"1336.68\\\" width=\\\"3.31\\\" height=\\\"29.6\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2844.85 1477.68) rotate(135)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min2-37\\\" data-name=\\\"min2\\\" x=\\\"1085.99\\\" y=\\\"1425.02\\\" width=\\\"3.31\\\" height=\\\"29.6\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2497.48 317.68) rotate(90)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min1-37\\\" data-name=\\\"min1\\\" x=\\\"1122.58\\\" y=\\\"1513.35\\\" width=\\\"3.31\\\" height=\\\"29.6\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1379.86 -381.86) rotate(45)\\\"\\n            fill=\\\"#fff\\\" />\\n        </g>\\n        \\n      <g my-knob-turner (value)=\\\"volumeValue($event)\\\" [starting]=\\\"sequencerLineUp['projectSettings']['volume']\\\" id=\\\"volume_knob\\\">\\n        <circle id=\\\"circle-2\\\" data-name=\\\"circle\\\" cx=\\\"1257.69\\\" cy=\\\"1028.84\\\" r=\\\"49.22\\\" fill=\\\"#fffef6\\\" />\\n        <path d=\\\"M1287.67,1010a53.29,53.29,0,1,0,53.29,53.29A53.29,53.29,0,0,0,1287.67,1010Zm0,102.51a49.22,49.22,0,0,1-3.88-98.29v14a1.22,1.22,0,0,0,1.22,1.22h5.33a1.22,1.22,0,0,0,1.22-1.22v-14A49.22,49.22,0,0,1,1287.67,1112.55Z\\\"\\n          transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n        <rect x=\\\"1256.67\\\" y=\\\"978.67\\\" width=\\\"2.04\\\" height=\\\"12.73\\\" rx=\\\"1\\\" ry=\\\"1\\\" fill=\\\"#fff200\\\" />\\n      </g>\\n        <g>\\n          <rect id=\\\"min7-38\\\" data-name=\\\"min7\\\" x=\\\"1338.98\\\" y=\\\"1108.75\\\" width=\\\"1.96\\\" height=\\\"17.52\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-427.72 1240.32) rotate(-45)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min6-38\\\" data-name=\\\"min6\\\" x=\\\"1360.65\\\" y=\\\"1056.46\\\" width=\\\"1.96\\\" height=\\\"17.52\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(266.42 2392.36) rotate(-90)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min5-38\\\" data-name=\\\"min5\\\" x=\\\"1338.98\\\" y=\\\"1004.16\\\" width=\\\"1.96\\\" height=\\\"17.52\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1541.24 2642.18) rotate(-135)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min4-38\\\" data-name=\\\"min4\\\" x=\\\"1286.69\\\" y=\\\"982.5\\\" width=\\\"1.96\\\" height=\\\"17.52\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2545.35 1948.03) rotate(180)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min3-38\\\" data-name=\\\"min3\\\" x=\\\"1234.39\\\" y=\\\"1004.16\\\" width=\\\"1.96\\\" height=\\\"17.52\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2795.17 821.14) rotate(135)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min2-38\\\" data-name=\\\"min2\\\" x=\\\"1212.73\\\" y=\\\"1056.46\\\" width=\\\"1.96\\\" height=\\\"17.52\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2248.95 -182.98) rotate(90)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min1-38\\\" data-name=\\\"min1\\\" x=\\\"1234.39\\\" y=\\\"1108.75\\\" width=\\\"1.96\\\" height=\\\"17.52\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1122.05 -580.72) rotate(45)\\\"\\n            fill=\\\"#fff\\\" />\\n        </g>\\n      <g  my-knob-turner (value)=\\\"accentValue($event)\\\" [starting]=\\\"sequencerLineUp['projectSettings']['accent']\\\" id=\\\"accent_knob\\\">\\n        <circle id=\\\"circle-3\\\" data-name=\\\"circle\\\" cx=\\\"1070.4\\\" cy=\\\"1140.65\\\" r=\\\"38.07\\\" fill=\\\"#fffef6\\\" />\\n        <path d=\\\"M1100.38,1133.93a41.22,41.22,0,1,0,41.22,41.22A41.22,41.22,0,0,0,1100.38,1133.93Zm0,79.29a38.07,38.07,0,0,1-3-76V1148a0.94,0.94,0,0,0,.94.94h4.12a0.94,0.94,0,0,0,.94-0.94v-10.8A38.07,38.07,0,0,1,1100.38,1213.22Z\\\"\\n          transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#111815\\\" />\\n        <rect x=\\\"1069.61\\\" y=\\\"1101.85\\\" width=\\\"1.58\\\" height=\\\"9.85\\\" rx=\\\"0.79\\\" ry=\\\"0.79\\\" fill=\\\"#fff200\\\" />\\n      </g>\\n        <g>\\n          <rect id=\\\"min7-39\\\" data-name=\\\"min7\\\" x=\\\"1140.07\\\" y=\\\"1210.28\\\" width=\\\"1.52\\\" height=\\\"13.55\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-556.43 1128.66) rotate(-45)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min6-39\\\" data-name=\\\"min6\\\" x=\\\"1156.82\\\" y=\\\"1169.83\\\" width=\\\"1.52\\\" height=\\\"13.55\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(-49.01 2299.7) rotate(-90)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min5-39\\\" data-name=\\\"min5\\\" x=\\\"1140.07\\\" y=\\\"1129.38\\\" width=\\\"1.52\\\" height=\\\"13.55\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1114.15 2711.74) rotate(-135)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min4-39\\\" data-name=\\\"min4\\\" x=\\\"1099.62\\\" y=\\\"1112.63\\\" width=\\\"1.52\\\" height=\\\"13.55\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2170.78 2204.32) rotate(180)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min3-39\\\" data-name=\\\"min3\\\" x=\\\"1059.17\\\" y=\\\"1129.38\\\" width=\\\"1.52\\\" height=\\\"13.55\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2582.82 1155.57) rotate(135)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min2-39\\\" data-name=\\\"min2\\\" x=\\\"1042.42\\\" y=\\\"1169.83\\\" width=\\\"1.52\\\" height=\\\"13.55\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(2189.8 98.94) rotate(90)\\\"\\n            fill=\\\"#fff\\\" />\\n          <rect id=\\\"min1-39\\\" data-name=\\\"min1\\\" x=\\\"1059.17\\\" y=\\\"1210.28\\\" width=\\\"1.52\\\" height=\\\"13.55\\\" rx=\\\"0.61\\\" ry=\\\"0.61\\\" transform=\\\"translate(1141.05 -427.51) rotate(45)\\\"\\n            fill=\\\"#fff\\\" />\\n        </g>\\n\\n        <g id=\\\"_808\\\" data-name=\\\"808\\\">\\n      <g my-kit-button-pusher [current-kit]=\\\"sequencerLineUp['projectSettings']['kit']\\\" [kit]=\\\"'808'\\\" (value)=\\\"kitSet($event)\\\"  >\\n        <rect id=\\\"background-28\\\" data-name=\\\"background\\\" x=\\\"989.98\\\" y=\\\"740.72\\\" width=\\\"76.21\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"/>\\n        <circle id=\\\"indicator-26\\\" data-name=\\\"indicator\\\" cx=\\\"1010.9\\\" cy=\\\"752.78\\\" r=\\\"7.31\\\" fill=\\\"#39b54a\\\"/>\\n        <g>\\n          <path d=\\\"M1062,787a2.8,2.8,0,0,1,1.74,2.67c0,1.67-1.83,2.84-3.69,2.84s-3.71-1.18-3.71-2.84a2.79,2.79,0,0,1,1.73-2.67,2.46,2.46,0,0,1-1.31-2.24c0-1.46,1.64-2.5,3.27-2.5s3.24,1,3.24,2.5A2.45,2.45,0,0,1,1062,787Zm-2,3.57a1.26,1.26,0,1,0-1.25-1.26A1.2,1.2,0,0,0,1060.07,790.56Zm0-6.61a1.11,1.11,0,1,0,0,2.22,1,1,0,0,0,1.09-1.1A1.06,1.06,0,0,0,1060.08,784Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1068.56,782.25c2.12,0,4,1.7,4,5.13,0,3.67-1.9,5.12-4,5.12s-4-1.45-4-5.12C1064.53,784,1066.44,782.25,1068.56,782.25Zm0,8.28c1.08,0,1.74-1,1.74-3.14s-0.66-3.15-1.74-3.15-1.75,1.16-1.75,3.15S1067.47,790.52,1068.56,790.52Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1079,787a2.8,2.8,0,0,1,1.74,2.67c0,1.67-1.83,2.84-3.69,2.84s-3.71-1.18-3.71-2.84a2.79,2.79,0,0,1,1.73-2.67,2.46,2.46,0,0,1-1.31-2.24c0-1.46,1.64-2.5,3.27-2.5s3.24,1,3.24,2.5A2.45,2.45,0,0,1,1079,787Zm-2,3.57a1.26,1.26,0,1,0-1.25-1.26A1.2,1.2,0,0,0,1077,790.56Zm0-6.61a1.11,1.11,0,1,0,0,2.22,1,1,0,0,0,1.09-1.1A1.06,1.06,0,0,0,1077,784Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n        </g>\\n      </g>\\n        </g>\\n        <g id=\\\"_909\\\" data-name=\\\"909\\\">\\n      <g my-kit-button-pusher [current-kit]=\\\"sequencerLineUp['projectSettings']['kit']\\\" [kit]=\\\"'909'\\\" (value)=\\\"kitSet($event)\\\">\\n        <rect id=\\\"background-29\\\" data-name=\\\"background\\\" x=\\\"1075.45\\\" y=\\\"740.72\\\" width=\\\"76.21\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"/>\\n        <circle id=\\\"indicator-27\\\" data-name=\\\"indicator\\\" cx=\\\"1096.37\\\" cy=\\\"752.78\\\" r=\\\"7.31\\\" fill=\\\"#39b54a\\\"/>\\n        <g>\\n          <path d=\\\"M1145.64,788.93a1.53,1.53,0,0,1-.71.14,3.31,3.31,0,0,1-3.15-3.47c0-2.34,1.88-3.36,3.67-3.36,2.22,0,3.95,1.46,3.95,3.36a5.74,5.74,0,0,1-1.56,3.95l-2.33,2.77h-2.78Zm-0.08-4.82a1.47,1.47,0,0,0-1.52,1.5,1.51,1.51,0,1,0,3,0A1.45,1.45,0,0,0,1145.56,784.11Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1154.05,782.25c2.12,0,4,1.7,4,5.13,0,3.67-1.9,5.12-4,5.12s-4-1.45-4-5.12C1150,784,1151.93,782.25,1154.05,782.25Zm0,8.28c1.08,0,1.74-1,1.74-3.14s-0.66-3.15-1.74-3.15-1.75,1.16-1.75,3.15S1153,790.52,1154.05,790.52Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1162.63,788.93a1.53,1.53,0,0,1-.71.14,3.31,3.31,0,0,1-3.15-3.47c0-2.34,1.88-3.36,3.67-3.36,2.22,0,3.95,1.46,3.95,3.36a5.74,5.74,0,0,1-1.56,3.95l-2.33,2.77h-2.78Zm-0.08-4.82a1.47,1.47,0,0,0-1.52,1.5,1.51,1.51,0,1,0,3,0A1.45,1.45,0,0,0,1162.55,784.11Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n        </g>\\n      </g>\\n        </g>\\n        <g id=\\\"Acoustic\\\">\\n      <g my-kit-button-pusher [current-kit]=\\\"sequencerLineUp['projectSettings']['kit']\\\" [kit]=\\\"'acoustic'\\\" (value)=\\\"kitSet($event)\\\">\\n        <rect id=\\\"background-30\\\" data-name=\\\"background\\\" x=\\\"1161.33\\\" y=\\\"740.72\\\" width=\\\"115.21\\\" height=\\\"24.13\\\" rx=\\\"3\\\" ry=\\\"3\\\" fill=\\\"#b3b8b6\\\"/>\\n        <circle id=\\\"indicator-28\\\" data-name=\\\"indicator\\\" cx=\\\"1182.25\\\" cy=\\\"752.78\\\" r=\\\"7.31\\\" fill=\\\"#39b54a\\\"/>\\n        <g>\\n          <path d=\\\"M1237,792.32h-2.42l-0.73-2h-3.77l-0.73,2H1227l4-9.89H1233Zm-5-6.84h0l-1.1,2.88h2.23Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1244.25,789.67l1,1.92a5.14,5.14,0,1,1,0-8.43l-1,1.92a3.44,3.44,0,0,0-1.94-.61,2.93,2.93,0,1,0,0,5.82A3.44,3.44,0,0,0,1244.25,789.67Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1250.63,782.25a5.13,5.13,0,0,1,0,10.25,4.92,4.92,0,0,1-5-5.13A5,5,0,0,1,1250.63,782.25Zm0,8.07c1.8,0,2.54-1.48,2.54-3s-0.79-3-2.54-3-2.55,1.48-2.55,3S1248.78,790.32,1250.63,790.32Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1264.21,788.81c0,2.45-1.34,3.69-3.86,3.69s-3.86-1.25-3.86-3.69v-6.38h2.25v5.72c0,1.66.5,2.13,1.61,2.13s1.61-.48,1.61-2.13v-5.72h2.25v6.38Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1272,783.18l-0.91,1.8a4.08,4.08,0,0,0-2-.68,1,1,0,0,0-1.18.89c0,0.55.94,0.95,2.06,1.43s2.31,1.4,2.31,2.7c0,2.36-1.8,3.19-3.73,3.19a5.78,5.78,0,0,1-3.72-1.31l1.13-1.9a4.83,4.83,0,0,0,2.42,1.12,1.15,1.15,0,0,0,1.43-1c0-.72-1.06-1-2.23-1.63a3,3,0,0,1-1.88-2.54,3.13,3.13,0,0,1,3.23-3A5.63,5.63,0,0,1,1272,783.18Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1272.16,782.43h7v2h-2.35v7.92h-2.25v-7.92h-2.35v-2Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1282.19,792.32h-2.25v-9.89h2.25v9.89Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n          <path d=\\\"M1290.45,789.67l1,1.92a5.14,5.14,0,1,1,0-8.43l-1,1.92a3.44,3.44,0,0,0-1.94-.61,2.93,2.93,0,1,0,0,5.82A3.44,3.44,0,0,0,1290.45,789.67Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#231f20\\\"/>\\n        </g>\\n      </g>\\n        </g>\\n\\n        <g>\\n      <path d=\\\"M1027.11,735.47a9.86,9.86,0,1,1,0,19.71h-5.71V735.47h5.71Zm-0.53,15.7a5.85,5.85,0,0,0,0-11.68h-0.69v11.68h0.69Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\"/>\\n      <path d=\\\"M1039,742.93h4.23v1.77h0a4.8,4.8,0,0,1,3.75-2.13,5.08,5.08,0,0,1,2.68.76l-1.77,3.58a3.57,3.57,0,0,0-2.2-.67,2.54,2.54,0,0,0-2.51,2.49v6.45H1039V742.93Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\"/>\\n      <path d=\\\"M1054.93,748.76c0,2.41.65,3.35,2.41,3.35s2.41-.93,2.41-3.35v-5.83H1064v6.86c0,4.11-2.05,5.76-6.64,5.76s-6.64-1.65-6.64-5.76v-6.86h4.23v5.83Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\"/>\\n      <path d=\\\"M1066.62,742.93h4.23v1.29h0a5.08,5.08,0,0,1,3.51-1.65,4.63,4.63,0,0,1,4.28,2.25,5.39,5.39,0,0,1,4.06-2.25c2.25,0,4.78,1.12,4.78,4.54v8.08h-4.23v-6.93a2.07,2.07,0,0,0-2.15-2.29,1.88,1.88,0,0,0-2,1.91v7.31H1075v-6.93a2.07,2.07,0,0,0-2.15-2.29,1.9,1.9,0,0,0-2,2.06v7.17h-4.23V742.93Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\"/>\\n      <path d=\\\"M1108.44,755.19l-7.26-8.36v8.36h-4.49V735.47h4.49v8.05l6.76-8.05h5.45l-7.93,9.34,9.18,10.37h-6.19Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\"/>\\n      <path d=\\\"M1120.18,737.86a2.51,2.51,0,1,1-2.51-2.51A2.51,2.51,0,0,1,1120.18,737.86Zm-4.68,17.32h4.23V742.93h-4.23v12.26Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\"/>\\n      <path d=\\\"M1123.43,738.36h4.23v4.56h2.58v3.23h-2.58V750c0,1.15.29,1.7,1,1.7a2,2,0,0,0,1.05-.38l1.05,3.42a7,7,0,0,1-3.11.76c-3.37,0-4.18-2.51-4.18-4.68v-4.71h-1.77v-3.23h1.77v-4.56Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\"/>\\n      <path d=\\\"M1141.6,743.53l-1.39,2.77a6.9,6.9,0,0,0-2.72-.76c-0.93,0-1.31.17-1.31,0.74s0.86,0.84,1.91,1.17c1.63,0.5,3.73,1.41,3.73,3.92,0,3.61-3.3,4.18-5.81,4.18a7.33,7.33,0,0,1-4.73-1.65L1133,751a6.13,6.13,0,0,0,3,1.41c0.6,0,1.31-.07,1.31-0.88s-1.34-1-2.72-1.67-2.48-1.51-2.48-3.35c0-2.51,2.13-3.94,5.35-3.94A9.36,9.36,0,0,1,1141.6,743.53Z\\\" transform=\\\"translate(-29.98 -34.49)\\\" fill=\\\"#f9fcf9\\\"/>\\n        </g>\\n    </g>\\n\\n  </svg>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/projects/drum-machine/drum-machine.component.html\n ** module id = 733\n ** module chunks = 2\n **/","module.exports = \"<div id=\\\"credit-card-form\\\">\\n  <a [routerLink]=\\\"['/']\\\">Home</a>\\n  <form \\n    role=\\\"form\\\" \\n    class=\\\"cc-form form-horizontal\\\"\\n    (ngSubmit)=\\\"onSubmit()\\\">\\n    <h2>Personal Information</h2>\\n\\n    <div class=\\\"form-group\\\" id=\\\"user-names\\\">\\n\\n      <div class=\\\"col-sm-6\\\" id=\\\"fname\\\">\\n        <label for=\\\"fname\\\">First Name</label>\\n        <input name=\\\"fname\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"fname\\\" (keypress)=\\\"upperCase()\\\"\\n        />\\n      </div>\\n\\n      <div class=\\\"col-sm-6\\\" id=\\\"lname\\\">\\n        <label for=\\\"lname\\\">Last Name</label>\\n        <input placeholder=\\\"Last Name\\\" class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"last-name\\\" />\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"form-group\\\" id=\\\"user-contact-info\\\">\\n      <div class=\\\"col-sm-6\\\" id=\\\"email\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" />\\n      </div>\\n\\n      <div class=\\\"col-sm-6\\\" id=\\\"phone-number\\\">\\n        <label for=\\\"phone-number\\\">Phone Number</label>\\n        <input name=\\\"phone-number\\\" placeholder=\\\"Phone Number\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"phoneNumber\\\" (keypress)=\\\"phoneNumberFormat()\\\"\\n        />\\n      </div>\\n    </div>\\n\\n\\n    <h2>Credit Card Information</h2>\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-12\\\" id=\\\"card-number\\\">\\n        <label for=\\\"card-number\\\">Card Number</label>\\n        <div class=\\\"input-group\\\">\\n          <input name=\\\"card-number\\\" placeholder=\\\"Card Number\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"cardNumber\\\" (keyup)=\\\"setCardType()\\\"\\n          />\\n          <div class=\\\"input-group-addon\\\">{{cardBrand}}</div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-6\\\" id=\\\"ccv\\\">\\n        <label for=\\\"ccv\\\">CCV</label>\\n        <input type=\\\"text\\\" name=\\\"ccv\\\" placeholder=\\\"CCV\\\" class=\\\"form-control\\\" /></div>\\n\\n      <div class=\\\"col-sm-6\\\" id=\\\"expiration-date\\\">\\n        <label for=\\\"expiration-date\\\">Expiration Date</label>\\n        <input value=\\\"{{12 | date}}\\\" type=\\\"text\\\" name=\\\"expiration-date\\\" placeholder=\\\"Expiration Date\\\" class=\\\"form-control\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-3\\\" id=\\\"zip\\\">\\n        <label for=\\\"zip\\\">Zip Code</label>\\n        <input type=\\\"number\\\" name=\\\"zip\\\" placeholder=\\\"Zip Code\\\" class=\\\"form-control\\\" />\\n      </div>\\n\\n      <div class=\\\"col-sm-9\\\" id=\\\"country\\\">\\n        <label for=\\\"country\\\">Country</label>\\n        <input type=\\\"text\\\" name=\\\"country\\\" placeholder=\\\"Country\\\" class=\\\"form-control\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-12\\\" id=\\\"agreement\\\">\\n        <input type=\\\"checkbox\\\" name=\\\"agree\\\" />\\n        <label for=\\\"agree\\\">Do you agree to the terms?</label>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <button class=\\\"btn col-sm-12\\\">Submit</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/projects/form/form.component.html\n ** module id = 734\n ** module chunks = 2\n **/","module.exports = \"<div class=\\\"panel\\\">\\n    <h2>Let's Play Some TicTacToe</h2>\\n    <form class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n            <label for=\\\"userTwoName\\\">Player One</label>\\n            <div class=\\\"input-group\\\">\\n                <input name=\\\"userOneName\\\" [(ngModel)]=\\\"userOneName\\\" (change)=\\\"updateUserOne()\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\">\\n                <span class=\\\"input-group-btn\\\">\\n                    <button (click)=\\\"toggleTile()\\\" class=\\\"btn btn-secondary\\\">\\n                        <span *ngIf=\\\"userOneTileType == 0\\\">X</span>\\n                        <span *ngIf=\\\"userOneTileType == 1\\\">O</span>\\n                    </button>\\n                </span>\\n            </div>\\n        </div>\\n\\n        <hr>\\n\\n        <div class=\\\"col-sm-12\\\">\\n            <label for=\\\"userTwoName\\\">Player Two</label>\\n            <div class=\\\"input-group\\\">\\n                <input name=\\\"userTwoName\\\" [(ngModel)]=\\\"userTwoName\\\" (change)=\\\"updateUserTwo()\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\">\\n                <span class=\\\"input-group-btn\\\">\\n                    <button (click)=\\\"toggleTile()\\\" class=\\\"btn btn-secondary\\\">\\n                        <span *ngIf=\\\"userTwoTileType == 0\\\">X</span>\\n                        <span *ngIf=\\\"userTwoTileType == 1\\\">O</span>\\n                    </button>\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n            <button (click)=\\\"gameStart($event)\\\" class=\\\"btn btn-default btn-block\\\">Start the Game!</button>\\n        </div>\\n    </form>\\n</div>\\n\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/projects/tictactoe/game-information/game-information.component.html\n ** module id = 735\n ** module chunks = 2\n **/","module.exports = \"<div class=\\\"col-md-12\\\">\\n    <h2>{{currentPlayer.name}}</h2>\\n</div>\\n\\n<!--generate the gameboard-->\\n<div class=\\\"col-md-12 ttc__game-board\\\">\\n    <div class=\\\"row no-gutters ttc__game-board-row\\\" *ngFor=\\\"let tileRow of tileBoard; let y = index\\\">\\n        <div *ngFor=\\\"let tile of tileRow; let x = index\\\" \\n         class=\\\"col-xs-4 ttc__game-board-tile\\\"\\n         (click)=\\\"setTile(x,y)\\\">\\n            <div \\n            [ngClass]=\\\"{'x': tileBoard[y][x]===0,'o':tileBoard[y][x]===1, 'null':tileBoard[y][x]===2 }\\\"\\n            >\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"col-md-12 ttc__user-scoreboard\\\">\\n    <div class=\\\"col-md-6 ttc__user-score\\\">\\n        <h5 class=\\\"ttc__user-name\\\">{{userOne.name}}</h5>\\n        <h5 class=\\\"ttc__user-tile\\\">\\n            <span [ngSwitch]=\\\"userOne.tileType\\\">\\n                <span *ngSwitchWhen=\\\"0\\\">X</span>\\n                <span *ngSwitchWhen=\\\"1\\\">O</span>\\n            </span>\\n        </h5>\\n        <h5 class=\\\"ttc__user-score\\\">Score: {{userOne.score}}</h5>\\n    </div>\\n    <div class=\\\"col-md-6 ttc__user-score\\\">\\n        <h5 class=\\\"ttc__user-name\\\">{{userTwo.name}}</h5>\\n        <h5 class=\\\"ttc__user-tile\\\">\\n            <span [ngSwitch]=\\\"userTwo.tileType\\\">\\n                <span *ngSwitchWhen=\\\"0\\\">X</span>\\n                <span *ngSwitchWhen=\\\"1\\\">O</span>\\n            </span>\\n        </h5>\\n        <h5 class=\\\"ttc__user-score\\\">Score: {{userTwo.score}}</h5>\\n    </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/projects/tictactoe/game-play/game-play.component.html\n ** module id = 736\n ** module chunks = 2\n **/","module.exports = \"<section class=\\\"ttc__resolution\\\">\\n    <div *ngIf=\\\"!isTie\\\">\\n        <h2>{{winner.name}} Won!</h2>\\n        <h5>Score: {{winner.score}}</h5>\\n        <h5>Tile: {{winner.tileType}}</h5>\\n    </div>\\n    <h2 *ngIf='isTie'>It was a tie! Try Again!</h2>\\n    \\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n        <button type=\\\"button\\\" (click)=\\\"playAgain()\\\" class=\\\"btn btn-primary\\\">Play Again!</button>\\n        <button type=\\\"button\\\" (click)=\\\"newGame()\\\" class=\\\"btn btn-primary\\\">New Game</button>\\n    </div>\\n</section>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/projects/tictactoe/game-resolution/game-resolution.component.html\n ** module id = 737\n ** module chunks = 2\n **/","module.exports = \"<h1>watches</h1>\\n<svg version=\\\"1.1\\\" id=\\\"seiko_007\\\" \\n    xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n\\t viewBox=\\\"0 0 250 250\\\" style=\\\"enable-background:new 0 0 250 250;\\\" xml:space=\\\"preserve\\\">\\n<style type=\\\"text/css\\\">\\n\\t.st0{fill:#3A3A3A;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st1{fill:#FFFFFF;}\\n</style>\\n<circle id=\\\"face\\\" class=\\\"st0\\\" cx=\\\"125\\\" cy=\\\"125\\\" r=\\\"125\\\"/>\\n<polygon id=\\\"minute_hand\\\" class=\\\"st1\\\" points=\\\"127.9,125 122.1,125 122.1,16.3 125,3.2 127.9,16.3 \\\"/>\\n</svg>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/projects/watches/watches.component.html\n ** module id = 738\n ** module chunks = 2\n **/","module.exports = \"<li class=\\\"tab-header-and-content\\\">\\n    <div (click)=\\\"toggleOpen($event)\\\" [ngClass]=\\\"{'is-active' : isOpen}\\\" class=\\\"tab-link\\\">\\n        <h4 class=\\\"panel-title\\\">\\n            <a href tabindex=\\\"0\\\"><span>{{heading}}</span></a>\\n        </h4>\\n    </div>\\n    <div [class.show]=\\\"isOpen\\\" class=\\\"tab-content\\\">\\n        <ng-content></ng-content>\\n    </div>\\n</li>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/shared/accordion/accordion-group.component.html\n ** module id = 739\n ** module chunks = 2\n **/","module.exports = \"<ul class=\\\"accordion-tabs\\\" >\\n    <ng-content></ng-content>\\n</ul>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/shared/accordion/accordion.component.html\n ** module id = 740\n ** module chunks = 2\n **/","module.exports = \"<!--replace &  with &amp;\\nReplace  <  with &lt;\\nReplace  >  with &gt;-->\\n\\n<accordion>\\n  <accordion-group\\n    *ngFor=\\\"let code of codeFiles\\\"\\n    heading=\\\"{{code.name}}\\\" >\\n\\n    <!--prismjs directive is causing a type error i think an interface will solveit-->\\n    <codeblock prismjs=\\\"{{code.type}}\\\" >\\n    {{code.code}}\\n    </codeblock>\\n\\n  </accordion-group>\\n</accordion>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/shared/code-container/code-container.component.html\n ** module id = 741\n ** module chunks = 2\n **/","import { Component, OnInit } from '@angular/core';\nimport { ROUTER_DIRECTIVES, Router} from '@angular/router';\nimport { ProjectViewComponent } from './project-view/project-view.component';\nimport { ProjectSelectionsComponent } from './project-selections/project-selections.component';\nimport { NavTitleService } from './../shared/services/nav-title.service';\nimport { CodeContainer } from './../shared/code-container/code-container.component';\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-app',\n    template: require('./app.component.html'),\n    providers: [NavTitleService],\n    directives: [\n        ROUTER_DIRECTIVES,\n        ProjectViewComponent,\n        ProjectSelectionsComponent,\n        CodeContainer]\n})\n\nexport class AppComponent implements OnInit {\n    private showEnabled: boolean = false;\n    private isActive: boolean = false;\n    private routeName: string;\n    private timeToAnimate: boolean = false;\n    private interval: any;\n    private projects: Project[] = [\n        {\n            number: '01',\n            heading: 'Sequencer',\n            caption: 'UI Built with scss and makes use of bootstrap',\n            color: '#36D2C7'\n        },\n        {\n            number: '02',\n            heading: 'Calculator',\n            caption: 'An 808 inspired sequencer built with angular2',\n            color: '#8EDB37'\n        },\n        {\n            number: '03',\n            heading: 'TicTacToe',\n            caption: 'Play a couple games, eh?',\n            color: '#FFAF27'\n        }\n    ];\n    private activeProject: Project = this.projects[0];\n\n    constructor(\n        private navTitleService: NavTitleService,\n        private router: Router) {\n        this.router.events.subscribe(route => {\n            this.routeName = this.navTitleService.getCurrentUrl();\n        });\n    }\n\n    ngOnInit() {\n        this.showEnabled = false;\n    }\n\n    intervalAnimate() {\n        setTimeout(() => {\n        this.timeToAnimate = true;\n            console.log(this.timeToAnimate);\n        }, 5500);\n    }\n\n    setActiveProject(project: Project) {\n        this.activeProject = project;\n        this.intervalAnimate();\n    }\n\n    toggleActive() {\n        this.isActive = !this.isActive;\n    }\n}\n\n// stupid hack to have a blank router at times when others arent selected\n@Component({ selector: 'blank', template: '' }) export class EmptyComponent { }\n\nexport interface Project {\n    number: string;\n    heading: string;\n    caption: string;\n    color: string;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/app-component/app.component.ts\n **/","import { Component, OnInit } from '@angular/core';\nimport { ROUTER_DIRECTIVES, Router} from '@angular/router';\nimport { ProjectViewComponent } from './../project-view/project-view.component';\nimport { ProjectSelectionsComponent } from './../project-selections/project-selections.component';\nimport { NavTitleService } from './../../shared/services/nav-title.service';\nimport { CodeContainer } from './../../shared/code-container/code-container.component';\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-home',\n    template: require('./home.component.html'),\n    providers: [NavTitleService],\n    directives: [\n        ROUTER_DIRECTIVES,\n        ProjectViewComponent,\n        ProjectSelectionsComponent,\n        CodeContainer]\n})\n\nexport class HomeComponent implements OnInit {\n    private showEnabled: boolean = false;\n    private isActive: boolean = false;\n    private routeName: string;\n    private timeToAnimate: boolean = false;\n    private interval: any;\n    private projects: Project[] = [\n        {\n            number: '01',\n            heading: 'Sequencer',\n            caption: 'UI Built with scss and makes use of bootstrap',\n            color: '#36D2C7',\n            link: '/drum'\n        },\n        {\n            number: '02',\n            heading: 'Calculator',\n            caption: 'An 808 inspired sequencer built with angular2',\n            color: '#8EDB37',\n            link: '/calculator'\n        },\n        {\n            number: '03',\n            heading: 'TicTacToe',\n            caption: 'Play a couple games, eh?',\n            color: '#FFAF27',\n            link: '/tictactoe/play'\n        }\n    ];\n    private activeProject: Project = this.projects[0];\n\n    constructor(\n        private navTitleService: NavTitleService,\n        private router: Router) {\n        this.router.events.subscribe(route => {\n            this.routeName = this.navTitleService.getCurrentUrl();\n        });\n    }\n\n    ngOnInit() {\n        this.showEnabled = false;\n    }\n\n    intervalAnimate() {\n        setTimeout(() => {\n        this.timeToAnimate = true;\n            console.log(this.timeToAnimate);\n        }, 5500);\n    }\n\n    setActiveProject(project: Project) {\n        this.activeProject = project;\n        this.intervalAnimate();\n    }\n\n    toggleActive() {\n        this.isActive = !this.isActive;\n    }\n}\n\n// stupid hack to have a blank router at times when others arent selected\n@Component({ selector: 'blank', template: '' }) export class EmptyComponent { }\n\nexport interface Project {\n    number: string;\n    heading: string;\n    caption: string;\n    color: string;\n    link: string\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/app-component/home/home.component.ts\n **/","import { Component } from '@angular/core';\nimport { ROUTER_DIRECTIVES } from '@angular/router';\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-calculator',\n    template: require('./calculator.component.html'),\n    directives: [ROUTER_DIRECTIVES]\n})\n\nexport class CalculatorComponent {\n    // toggle variables in the html\n    private showVariables: boolean = false;\n\n    private displayValue: string = '0';\n    private operatorValue: string = null;\n    private currentValue: number = 0;\n    private valueToOperate: number = 0;\n    private operatorPressed: boolean = false;\n    private displayResetAfterOperator: boolean;\n    private isNegative: boolean;\n\n    toggleNegative() {\n        if (this.displayValue[0] === '0') { return; }\n\n        if (this.displayValue[0] === '-') {\n            this.isNegative = true;\n        }\n\n        this.isNegative = !this.isNegative;\n\n        if (this.isNegative && this.displayValue[0] !== '-') {\n            this.displayValue = '-' + this.displayValue;\n        }\n        if (!this.isNegative && this.displayValue[0] === '-') {\n            this.displayValue = this.displayValue.substr(1);\n        }\n    }\n\n    setDisplayValue(digit?: string) {\n\n        if (this.operatorPressed && !this.displayResetAfterOperator) {\n            this.displayResetAfterOperator = true;\n            this.displayValue = '0';\n        }\n\n        if (this.displayValue === '0') {\n            this.displayValue = '';\n        }\n\n        if (this.displayValue === '0' && digit === '0') {\n            this.displayValue = this.displayValue;\n            return;\n        }\n        // dont let multiple decimals\n        if (this.displayValue.indexOf('.') >= 0 && digit === '.') {\n            digit = '';\n        }\n        this.displayValue += digit;\n    }\n\n    setOperator(operator: string) {\n        this.operatorValue = operator;\n        if (this.operatorPressed) {\n            this.equals();\n        } else {\n            this.currentValue = Number(this.displayValue);     \n        }\n        // this.currentValue = Number(this.displayValue);\n        this.operatorPressed = true;\n        this.displayResetAfterOperator = false;\n        // this.displayValue = '0';\n    }\n\n    equals() {\n        this.operatorPressed = false;\n        this.valueToOperate = Number(this.displayValue);\n\n        switch (this.operatorValue) {\n            case '/':\n                this.currentValue = this.currentValue / this.valueToOperate;\n                break;\n            case '*':\n                this.currentValue *= this.valueToOperate;\n                break;\n            case '(-)':\n                this.currentValue -= this.valueToOperate;\n                break;\n            case '+':\n                this.currentValue += this.valueToOperate;\n                break;\n        }\n\n        this.displayValue = String(this.currentValue);\n    }\n\n    clear() {\n        this.displayValue = '0';\n        this.currentValue = 0;\n        this.valueToOperate = 0;\n    }\n\n    delete() {\n        this.displayValue = this.displayValue.substr(0, this.displayValue.length - 1);\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/calculator/calculator.component.ts\n **/","import { Directive, ElementRef, EventEmitter, AfterViewInit, Output, Input, OnChanges, DoCheck, SimpleChanges } from '@angular/core';\nlet Snap = require( 'imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js');\n\n@Directive({\n    selector: '[my-instrument-beat-changer]'\n})\n\nexport class DrumMachineInstrumentBeatDirective implements AfterViewInit, OnChanges {\n    @Input('beat') beat: number;\n    @Input('current-beat') currentBeat: number;\n    private el: HTMLElement;\n    private s: any;\n    private color: Object = { 'active': '#39B54A', 'inactive': '#003B05' };\n    private checkIfSnapInit: boolean = false;\n    constructor(private _el: ElementRef) { this.el = _el.nativeElement; }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // FIXME: this is a hacky way of making sure that Snap has been initiated -- It cant be called before snap is created\n        if (this.checkIfSnapInit) {\n            this.check();\n        };\n        // console.log('changed', this.currentBeat);\n    }\n\n    ngAfterViewInit() {\n        this.s = Snap(this.el);\n        this.checkIfSnapInit = true;\n        this.check();\n    }\n\n    check() {\n        if (this.beat === this.currentBeat) {\n            this.s.attr({ fill: this.color['active'] });\n            this.s.animate({ fill: this.color['inactive'] }, 50, mina.linear);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/drum-machine/directives/drum-machine-beat.directive.ts\n **/","import { Directive, ElementRef, EventEmitter, AfterViewInit, OnChanges, SimpleChanges, Output, Input } from '@angular/core';\nlet Snap = require( 'imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js');\n\n@Directive({ selector: '[my-button-pusher]' })\n\nexport class DrumMachineButtonDirective implements AfterViewInit, OnChanges {\n    @Output() value = new EventEmitter();\n    @Input('initial') isActivated: boolean = false;\n\n    private el: HTMLElement;\n    private isClicked: boolean = false;\n    private s: any;\n    private activeIndicator: any;\n    private activeLight: Object = { active: 'red' };\n\n    private checkIfSnapInit: boolean = false;\n\n    constructor(private _el: ElementRef) {\n        this.el = _el.nativeElement;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // FIXME: this is a hacky way of making sure that Snap has been initiated -- It cant be called before snap is created\n        if (this.checkIfSnapInit) {\n            console.log('ch', this.isActivated);\n            this.check();\n        };\n    }\n\n    ngAfterViewInit() {\n        this.s = Snap(this.el);\n        this.activeIndicator = this.s.select('circle');\n        this.activeLight['inactive'] = this.activeIndicator.attr('fill');\n        this.init();\n        this.checkIfSnapInit = true;\n\n        this.s.hover(() => {\n            if (this.isActivated) {\n                this.s.animate({ transform: 't0, -2.5' }, 200, mina.elastic);\n                this.activeIndicator.animate({ fill: '#FF4856' }, 200, mina.easeinout);\n            }\n        });\n\n        this.s.mouseout(() => {\n            if (this.isActivated) {\n                this.s.animate({ transform: '' }, 200, mina.elastic);\n                this.activeIndicator.animate({ fill: this.activeLight['inactive'] }, 200, mina.easeinout);\n            }\n        });\n\n        this.s.click(() => {\n            this.check();\n            this.valueOut();\n        });\n    }\n\n    init() {\n        if (this.isActivated) {\n            this.s.animate({ transform: 't0, -3.5' }, 200, mina.elastic);\n            this.activeIndicator.animate({ fill: '#FF4856' }, 200, mina.easeinout);\n        }\n        this.isActivated = !this.isActivated;\n    }\n\n    check() {\n        if (this.isActivated) {\n            this.s.animate({ transform: 't0, -3.5' }, 200, mina.elastic);\n            this.activeIndicator.animate({ fill: '#FF4856' }, 200, mina.easeinout);\n        }\n        if (!this.isActivated) {\n            this.s.animate({ transform: '' }, 200, mina.elastic);\n            this.activeIndicator.animate({ fill: this.activeLight['inactive'] }, 200, mina.easeinout);\n        }\n        this.isActivated = !this.isActivated;\n    }\n\n    valueOut() {\n        this.value.emit({\n            value: !this.isActivated\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/drum-machine/directives/drum-machine-button.directive.ts\n **/","import { Directive, ElementRef, EventEmitter, AfterViewInit, Output, Input, OnChanges, SimpleChanges } from '@angular/core';\nlet Snap = require( 'imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js');\n\n@Directive({\n    selector: '[my-instrument-button-pusher]'\n})\n\nexport class DrumMachineInstrumentButtonDirective implements AfterViewInit, OnChanges {\n    @Output() value = new EventEmitter();\n    @Input('type') instrument: string = 'default';\n    @Input('current') currentInstrument: string = '';\n    @Input('button-group') buttonGroup: string = '';\n    @Input('kit') kit: string = 'default';\n    @Input('current-kit') currentKit: string;\n\n    private el: HTMLElement;\n    private s: any;\n    private activeIndicator: any;\n    private text: any;\n    private background: any;\n\n    private colors: Object = { 'active': '#39B54A', 'inactive': '#003B05', 'light-active': 'white', \n    'light-inactive': 'black', 'background-hover': 'lightgray' };\n    private checkIfSnapInit: boolean = false;\n\n    constructor(private _el: ElementRef) { this.el = _el.nativeElement; }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // FIXME: this is a hacky way of making sure that Snap has been initiated -- It cant be called before snap is created\n        if (this.checkIfSnapInit) {\n            this.check();\n        };\n    }\n\n    ngAfterViewInit() {\n        this.s = Snap(this.el);\n        this.background = this.s.select('rect');\n        this.activeIndicator = this.s.select('circle');\n        this.text = this.s.selectAll('path');\n        this.colors['background'] = this.background.attr('fill');\n\n        this.checkIfSnapInit = true;\n        this.check();\n        this.s.hover(() => {\n            if (this.instrument !== this.currentInstrument) {\n                this.background.animate({\n                        fill: this.colors['background-hover']\n                    }, 100, mina.easein );\n                this.s.animate({\n                        transform: 't0,1, s.99, .98'\n                    }, 100, mina.elastic );\n            }\n        });\n\n        this.s.mouseout(() => {\n            if (this.instrument !== this.currentInstrument) {\n                this.background.animate({ fill: this.colors['background'],\n                                          transform: '' }, 100,  mina.easein );\n                this.s.animate({ transform: '' }, 100, mina.elastic );\n            }\n        });\n\n        this.s.click(() => {\n            this.valueOut();\n            this.check();\n        });\n    }\n\n    check() {\n        // console.log(this.buttonGroup);\n        if (this.buttonGroup === 'instrument') {\n            if (this.instrument === this.currentInstrument) {\n                this.s.animate({ transform: 't0,1.2, s.98, .97' }, 100, mina.elastic );\n\n                this.activeIndicator.animate({\n                        fill: this.colors['active'] },\n                        100,\n                        mina.easein\n                    );\n\n                this.text.forEach( (elem: any) => {\n                    elem.animate({\n                        fill: this.colors['light-active']},\n                        100,\n                        mina.easein\n                    );\n                });\n            } else {\n                this.activeIndicator.attr({ fill: this.colors['inactive'] });\n                this.text.forEach( (elem: any) => { elem.attr({ fill: this.colors['light-inactive']}); });\n                this.s.animate({ transform: '' }, 100, mina.elastic );\n            }\n        }\n        if (this.buttonGroup === 'kit') {\n            if (this.kit === this.currentKit) {\n                this.s.animate({ transform: 't0,1.2, s.98, .97' }, 100, mina.elastic );\n\n                this.activeIndicator.animate({\n                        fill: this.colors['active'] },\n                        100,\n                        mina.easein\n                    );\n\n                this.text.forEach( (elem: any) => {\n                    elem.animate({\n                        fill: this.colors['light-active']},\n                        100,\n                        mina.easein\n                    );\n                });\n            } else {\n                this.activeIndicator.attr({ fill: this.colors['inactive'] });\n                this.text.forEach( (elem: any) => { elem.attr({ fill: this.colors['light-inactive']}); });\n                this.s.animate({ transform: '' }, 100, mina.elastic );\n            }\n        }\n\n    }\n\n    valueOut() {\n        if (this.buttonGroup === 'instrument') {\n            this.value.emit({\n                value: this.instrument\n            });\n        }\n        if (this.buttonGroup === 'kit') {\n            this.value.emit({\n                value: this.kit\n            });\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/drum-machine/directives/drum-machine-instrumentbutton.directive.ts\n **/","import { Directive, ElementRef, EventEmitter, AfterViewInit, Output, Input, OnChanges, SimpleChanges } from '@angular/core';\nlet Snap = require( 'imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js');\n\n@Directive({\n    selector: '[my-kit-button-pusher]'\n})\n\nexport class DrumMachineKitButtonDirective implements AfterViewInit, OnChanges {\n    @Output() value = new EventEmitter();\n    @Input('kit') kit: string = 'default';\n    @Input('current-kit') currentKit: string;\n\n    private el: HTMLElement;\n    private s: any;\n    private activeIndicator: any;\n    private text: any;\n    private background: any;\n\n    private colors: Object = { 'active': '#39B54A', 'inactive': '#003B05', 'light-active': 'white', \n    'light-inactive': 'black', 'background-hover': 'lightgray' };\n    private checkIfSnapInit: boolean = false;\n\n    constructor(private _el: ElementRef) { this.el = _el.nativeElement; }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // FIXME: this is a hacky way of making sure that Snap has been initiated -- It cant be called before snap is created\n        if (this.checkIfSnapInit) {\n            this.check();\n        };\n    }\n\n    ngAfterViewInit() {\n        this.s = Snap(this.el);\n        this.background = this.s.select('rect');\n        this.activeIndicator = this.s.select('circle');\n        this.text = this.s.selectAll('path');\n        this.colors['background'] = this.background.attr('fill');\n\n        this.checkIfSnapInit = true;\n        this.check();\n        this.s.hover(() => {\n            if (this.kit !== this.currentKit) {\n                this.background.animate({\n                        fill: this.colors['background-hover']\n                    }, 100, mina.easein );\n                this.s.animate({\n                        transform: 't0,1, s.99, .98'\n                    }, 100, mina.elastic );\n            }\n        });\n\n        this.s.mouseout(() => {\n            if (this.kit !== this.currentKit) {\n                this.background.animate({ fill: this.colors['background'],\n                                          transform: '' }, 100,  mina.easein );\n                this.s.animate({ transform: '' }, 100, mina.elastic );\n            }\n        });\n\n        this.s.click(() => {\n            this.valueOut();\n            this.check();\n        });\n    }\n\n    check() {\n            if (this.kit === this.currentKit) {\n                this.s.animate({ transform: 't0,1.2, s.98, .97' }, 100, mina.elastic );\n\n                this.activeIndicator.animate({\n                        fill: this.colors['active'] },\n                        100,\n                        mina.easein\n                    );\n\n                this.text.forEach( (elem: any) => {\n                    elem.animate({\n                        fill: this.colors['light-active']},\n                        100,\n                        mina.easein\n                    );\n                });\n            } else {\n                this.activeIndicator.attr({ fill: this.colors['inactive'] });\n                this.text.forEach( (elem: any) => { elem.attr({ fill: this.colors['light-inactive']}); });\n                this.s.animate({ transform: '' }, 100, mina.elastic );\n            }\n    }\n\n    valueOut() {\n            this.value.emit({\n                value: this.kit\n            });\n        }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/drum-machine/directives/drum-machine-kit.directive.ts\n **/","import { Directive, Input,HostListener, ElementRef, EventEmitter, AfterViewInit, Output, OnInit } from '@angular/core';\nimport { DrumMachineMetronomeService } from './../drum-machine-metronome.service';\nlet Snap = require( 'imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js');\n\n@Directive({\n    selector: '[my-knob-turner]'\n})\n\nexport class DrumMachineKnobDirective implements AfterViewInit {\n    @Output() value = new EventEmitter();\n    @Input('starting') startingAngle: number;\n    private angle: number = 0;\n    private el: HTMLElement;\n    private minAngle: number = -130;\n    private maxAngle: number = 130;\n    private cx: number;\n    private cy: number;\n\n    private s: any;\n    private circ: any;\n    constructor(private _el: ElementRef) { this.el = _el.nativeElement; }\n\n    @HostListener('mousewheel', ['$event']) onClick(e: any) {\n        e.preventDefault();\n        this.rotate(e.deltaY);\n    }\n\n    ngAfterViewInit() {\n        this.s = Snap(this.el);\n        this.circ = this.s.select('circle');\n\n        this.rotate(this.calculateInitialAngleFromValue(), true);\n\n        this.circ.drag((dx: number, dy: number) => {\n            this.rotate(dx);\n        }, () => { this.resetMaxandMin(); });\n    }\n\n    rotate(dx: number, init?: boolean) {\n        if (this.angle > 0 && this.angle > this.maxAngle) { this.angle = this.maxAngle - 1; }\n        if (this.angle < 0 && this.angle < this.minAngle) { this.angle = this.minAngle + 1; }\n        if (this.angle > this.maxAngle) { return; }\n        if (this.angle < this.minAngle) { return; }\n        this.cx = this.circ.attr('cx');\n        this.cy = this.circ.attr('cy');\n        this.angle += dx / 10;\n        if (init !== true) {\n            this.valueOut();\n        }\n        this.s.transform('r' + [this.angle, this.cx, this.cy]);\n    }\n\n    calculateValue(): number {\n        let valueOut = (this.angle - this.minAngle) / (this.maxAngle - this.minAngle);\n        if (valueOut > 1) { valueOut = 1; }\n        if (valueOut < 0) { valueOut = 0; }\n        return valueOut;\n    }\n\n    calculateInitialAngleFromValue() {\n        let angle = this.startingAngle * (this.maxAngle - this.minAngle) + this.minAngle;\n        return angle * 10;\n    }\n\n    valueOut() {\n        this.value.emit({\n            value: this.calculateValue()\n        });\n    }\n\n    resetMaxandMin() {\n        if (this.angle > 0 && this.angle > this.maxAngle) { this.angle = this.maxAngle - 1; }\n        if (this.angle < 0 && this.angle < this.minAngle) { this.angle = this.minAngle + 1; }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/drum-machine/directives/drum-machine-knob.directive.ts\n **/","import { Directive, ElementRef, EventEmitter, AfterViewInit, Output, Input, OnChanges, SimpleChanges } from '@angular/core';\nlet Snap = require( 'imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js');\n\n@Directive({\n    selector: '[my-start-button-pusher]'\n})\n\nexport class DrumMachineStartButtonDirective implements AfterViewInit, OnChanges {\n    @Output() value = new EventEmitter();\n\n    private el: HTMLElement;\n    private s: any;\n    private text: any;\n    private background: any;\n\n    private start: boolean = false;\n    private checkIfSnapInit: boolean = false;\n    private colors: Object = { 'active-text': 'yellow', 'inactive-text': 'white' };\n\n    constructor(private _el: ElementRef) { this.el = _el.nativeElement; }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // FIXME: this is a hacky way of making sure that Snap has been initiated -- It cant be called before snap is created\n        if (this.checkIfSnapInit) {\n            this.check();\n        };\n    }\n\n    ngAfterViewInit() {\n        this.s = Snap(this.el);\n        this.background = this.s.select('rect#start_button');\n        this.text = this.s.selectAll('#start_text_button > path');\n\n        this.checkIfSnapInit = true;\n        this.check();\n\n        this.s.hover(() => {\n            if (this.start === true) {\n                this.text.forEach((x: any) => { x.animate({ fill: this.colors['active-text'] }, 100, mina.easein); });\n                this.s.animate({ transform: 't0,1, s.99, .98' }, 100, mina.elastic);\n            }\n        });\n\n        this.s.mouseout(() => {\n            if (this.start === true) {\n                this.text.forEach((x: any) => { x.animate({ fill: this.colors['inactive-text'] }, 100, mina.easein); });\n                this.s.animate({ transform: '' }, 100, mina.elastic);\n            }\n        });\n\n        this.s.click(() => {\n            this.valueOut();\n            this.check();\n        });\n    }\n\n    check() {\n        if (this.start === true) {\n            this.text.forEach((x: any) => { x.animate({ fill: this.colors['active-text'] }, 100, mina.easein); });\n            this.s.animate({ transform: 't0,1, s.99, .98' }, 100, mina.elastic);\n        }\n        if (this.start === false) {\n            this.text.forEach((x: any) => {  x.animate({ fill: this.colors['inactive-text'] }, 100, mina.easein); });\n            this.s.animate({ transform: '' }, 100, mina.elastic);\n        }\n        this.start = !this.start;\n    }\n\n    valueOut() {\n        this.value.emit({\n            value: this.start\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/drum-machine/directives/drum-machine-startbutton.directive.ts\n **/","// TODO: I renamed all the hihat-closed to just hihat rename back when that function is added in\n\n// FIXMe: Very odd bug that is making all samples playback twice and causing extreme slowness\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DrumMachineMetronomeService {\n    private timeWorker: any = null;\n    private noteTime: number;\n    private startTime: number;\n    private currentTime: number;\n    private rhythmIndex: number = 1;\n    private tempo: number;\n    private nextNoteTime: number = 0;\n    private lookahead: number = 25.0;\n    private scheduleAheadTime: number = .5;\n    private noteLength: number = .25;\n    private context: any;\n    private isPlaying: boolean = false;\n    private sequencerLineUp: Object = null;\n    private sampleBuffers: Object = {\n        '808': {},\n        '909': {},\n        'acoustic': {}\n    };\n    private impulse: any;\n\n    init() {\n        this.loadAudioSamples();\n        console.log(this.sampleBuffers);\n        // this.context = new AudioContext();\n        this.createAudioContext();\n        this.timeWorker = new Worker('./app/projects/drum-machine/timeWorker.js');\n        this.timeWorker.onmessage = (e: any) => { if (e.data === 'tick') { this.schedule(); } else { console.log(e.data); } };\n        this.timeWorker.postMessage({ 'interval': this.lookahead });\n    }\n\n    createAudioContext() {\n        this.context = new AudioContext();\n    }\n\n    play() {\n        if (!this.isPlaying) {\n            this.createAudioContext();\n            this.isPlaying = true;\n            this.noteTime = 0;\n            this.rhythmIndex = 0;\n            this.nextNoteTime = 0;\n            this.startTime = this.context.currentTime;\n            this.timeWorker.postMessage('start');\n        }\n    }\n\n    stop() {\n        if (this.isPlaying) {\n            this.isPlaying = false;\n            this.timeWorker.postMessage('stop');\n            this.context.close();\n        }\n    }\n\n    schedule() {\n        this.currentTime = this.context.currentTime - this.startTime;\n        while (this.nextNoteTime < this.context.currentTime + this.scheduleAheadTime) {\n            this.setBeat(this.nextNoteTime, this.rhythmIndex);\n            this.nextNote();\n        }\n    }\n\n    nextNote() {\n        this.tempo = ((this.sequencerLineUp['projectSettings']['tempo'] * 120) + 60) / 2;\n        let secondsPerBeat = 60 / this.tempo;\n        this.nextNoteTime += this.noteLength * secondsPerBeat;\n        this.rhythmIndex++;\n        if (this.rhythmIndex === 16) { this.rhythmIndex = 0; }\n    }\n\n    setSequencerLineUp(sequence: Object) {\n        this.sequencerLineUp = sequence;\n    }\n\n    setBeat(time: number, beat: number) {\n        this.sequencerLineUp['projectSettings']['beat'] = beat;\n        this.setBeatValueAtTime(time, beat);\n\n        if (this.sequencerLineUp['rhythmSettings'][beat]['kick']) { this.playSample('kick', time, beat); }\n        if (this.sequencerLineUp['rhythmSettings'][beat]['snare']) { this.playSample('snare', time, beat); }\n\n        if (this.sequencerLineUp['rhythmSettings'][beat]['lowtom']) { this.playSample('lowtom', time, beat); }\n        if (this.sequencerLineUp['rhythmSettings'][beat]['midtom']) { this.playSample('midtom', time, beat); }\n        if (this.sequencerLineUp['rhythmSettings'][beat]['hitom']) { this.playSample('hitom', time, beat); }\n\n        if (this.sequencerLineUp['rhythmSettings'][beat]['rimshot']) { this.playSample('rimshot', time, beat); }\n        if (this.sequencerLineUp['rhythmSettings'][beat]['clap']) { this.playSample('clap', time, beat); }\n\n        if (this.sequencerLineUp['rhythmSettings'][beat]['hihat']) { this.playSample('hihat', time, beat); }\n        if (this.sequencerLineUp['rhythmSettings'][beat]['cymbal']) { this.playSample('cymbal', time, beat); }\n    }\n\n    setBeatValueAtTime(time: number, beat: number) {\n        window.setTimeout( () => {\n            this.sequencerLineUp['projectSettings']['beat'] = beat;\n        }, (time - this.context.currentTime) * 1000 );\n    }\n\n\n    playSample(drumType: string, time: number, beat: number) {\n        let source = this.context.createBufferSource(),\n            level = this.level(drumType),\n            decay = this.decay(drumType, time),\n            volume = this.globalVolume(beat),\n            attack = this.attack(drumType, time),\n            distortion = this.distortion(drumType),\n            distortionGain = this.distortionGain(drumType);\n\n        source.connect(decay);\n        decay.connect(attack);\n        attack.connect(level);\n        level.connect(distortion);\n        distortion.connect(distortionGain);\n        distortionGain.connect(volume);\n\n        volume.connect(this.context.destination);\n        source.buffer = this.sampleBuffers[this.sequencerLineUp['projectSettings']['kit']][drumType];\n        source.start(time);\n    }\n\n    // get the value for each of these settings from the sequencerLineUp by type\n    globalVolume(beat: number) {\n        let level = this.context.createGain(),\n            volume = this.sequencerLineUp['projectSettings']['volume'];\n\n        if (volume > 1) { volume = 1; }\n\n        if (beat === 0 || beat === 4 || beat === 8 || beat === 12) {\n            volume += this.sequencerLineUp['projectSettings']['accent'];\n        }\n\n        level.gain.value = volume;\n        return level;\n    }\n\n    level(type: string) {\n        let level = this.context.createGain(),\n            levelLevel = this.sequencerLineUp['instrumentSettings'][type]['level'];\n\n        // dont let level leval equal 0 -- it will not output a noise then\n        if (levelLevel > 1) { levelLevel = 1; }\n        level.gain.value = levelLevel;\n        return level;\n    }\n\n    decay(type: string, time: number) {\n        // 1 is the MAX decay -- the longest note -- 0 is the absolute shortest\n        let decay = this.context.createGain(),\n            decayLevel = 1 - this.sequencerLineUp['instrumentSettings'][type]['decay'];\n\n        // dont let decay leval equal 0 -- it will not output a noise then\n        if (decayLevel > 1) { decayLevel = 1; }\n        decay.gain.setValueAtTime(1, time);\n        // formula to calculate the decay level onto a 0 - 1 scale\n        let decayValue = (time + this.noteLength + (this.noteLength * .25)) - (this.noteLength * (1 - decayLevel));\n        decay.gain.linearRampToValueAtTime(0, decayValue) ;\n        return decay;\n    }\n\n    attack(type: string, time: number) {\n        // 1 is the MAX attack -- the softest note -- 0 is the hardest and fastest\n        let attack = this.context.createGain(),\n            attackLevel = this.sequencerLineUp['instrumentSettings'][type]['attack'] * .1; // the .1 is to make it so it doesnt get too soft\n\n        if (attackLevel > 1) { attackLevel = 1; }\n        attack.gain.setValueAtTime(0, time);\n        attack.gain.linearRampToValueAtTime(1, time + (this.noteLength * (attackLevel * 10)));\n        return attack;\n    }\n\n    distortion(type: string) {\n        let distortion = this.context.createWaveShaper();\n        let distortionAmount: number  = this.sequencerLineUp['instrumentSettings'][type]['distortion'] * 100;\n\n        // i have no idea how this function works -- found on Mozilla\n        /* TODO: Make this more effiecient it is using 10% of the memory\n\n            pb.stomp.OverdriveModel.prototype.createWSCurve = function(amount) {\n                var k = amount;\n                var n_samples = 22050;\n                this.wsCurve = new Float32Array(n_samples);\n                var deg = Math.PI / 180;\n                for (var i = 0; i < n_samples; i += 1) {\n                    var x = i * 2 / n_samples - 1;\n                    this.wsCurve[i] = (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n                }\n                this.waveShaper.curve = this.wsCurve;\n            };\n\n            **\n            * Sets the drive level.\n            *\n            * @param {number} newDrive Drive level to set.\n            *\n            pb.stomp.OverdriveModel.prototype.setDrive = function(newDrive) {\n                this.createWSCurve(10 * newDrive);\n            };\n\n\n        */\n\n        function makeDistortionCurve(amount: number) {\n            let k = typeof amount === 'number' ? amount : 50,\n                n_samples = 44100,\n                curve = new Float32Array(n_samples),\n                deg = Math.PI / 180,\n                i = 0,\n                x: any;\n                for ( ; i < n_samples; ++i ) {\n                    x = i * 2 / n_samples - 1;\n                    curve[i] = ( 3 + k ) * x * 20 * deg / ( Math.PI + k * Math.abs(x) );\n                }\n            return curve;\n        };\n\n        distortion.curve = makeDistortionCurve(distortionAmount);\n        distortion.oversample = 'none';\n        return distortion;\n    }\n\n    distortionGain(type: string) {\n        let level = this.context.createGain(),\n            levelLevel = this.sequencerLineUp['instrumentSettings'][type]['level'];\n\n        // dont let level leval equal 0 -- it will not output a noise then\n        if (levelLevel > 1) { levelLevel = 1; }\n        level.gain.value = .8 - (this.sequencerLineUp['instrumentSettings'][type]['distortion'] * .5 );\n        return level;\n    }\n\n    getAudioContext(): any {\n        return this.context;\n    }\n\n    loadAudioSamples() {\n        this.loadDrumKit();\n\n        let urlBody = 'public/samples/impulse/';\n        let impulse = new XMLHttpRequest();\n        impulse.open('GET', urlBody + 'church_impulse.wav', true);\n        impulse.responseType = 'arraybuffer';\n        impulse.onload = () => {;\n            this.context.decodeAudioData(impulse.response).then((decodedData: any) => {\n                this.impulse = decodedData;\n            }, (e: any) => { console.log('Error with reverb audio data' + e.err); });\n        };\n        impulse.send();\n    }\n\n    loadDrumKit() {\n        let kits: string[] = ['808', '909', 'acoustic'],\n            samples: string[] = ['snare', 'clap', 'kick', 'cymbal', 'hihat', 'hitom', 'lowtom', 'midtom', 'rimshot'],\n            urlBody = 'public/samples/';\n\n        for (let kit = 0; kit < kits.length; kit++) {\n            for (let sample = 0; sample < samples.length; sample++) {\n                let request = new XMLHttpRequest();\n                request.open('GET', urlBody + kits[kit] + '/' + samples[sample] + '.wav', true);\n                request.responseType = 'arraybuffer';\n                request.onload = () => {\n                    this.context.decodeAudioData(request.response).then((decodedData: any) => {\n                        this.sampleBuffers[kits[kit]][samples[sample]] = decodedData;\n                    }, (e: any) => { console.log('Error with drum audio data' + e.err); });\n                };\n                request.send();\n            }\n        }\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/drum-machine/drum-machine-metronome.service.ts\n **/","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DrumMachineMetronomeService } from './drum-machine-metronome.service';\nimport { SEQUENCER_LINEUP } from './sequencerLineUp';\nimport { DrumMachineKnobDirective } from './directives/drum-machine-knob.directive';\nimport { DrumMachineButtonDirective } from './directives/drum-machine-button.directive';\nimport { DrumMachineInstrumentButtonDirective } from './directives/drum-machine-instrumentbutton.directive';\nimport { DrumMachineInstrumentBeatDirective } from './directives/drum-machine-beat.directive';\nimport { DrumMachineStartButtonDirective } from './directives/drum-machine-startbutton.directive';\nimport { DrumMachineKitButtonDirective } from './directives/drum-machine-kit.directive';\n\n// maybe change the global knobs so they all veritcally align\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-drum-machine',\n    template: require('./drum-machine.component.html'),\n    providers: [DrumMachineMetronomeService],\n    directives: [\n        DrumMachineKnobDirective,\n        DrumMachineButtonDirective,\n        DrumMachineInstrumentButtonDirective,\n        DrumMachineInstrumentBeatDirective,\n        DrumMachineStartButtonDirective,\n        DrumMachineKitButtonDirective\n    ]\n})\n\nexport class DrumMachineComponent implements OnDestroy {\n    private sequencerLineUp: Object = SEQUENCER_LINEUP;\n    private instruments: string[] = ['kick', 'snare', 'lowtom', 'midtom', 'hitom', 'rimshot', 'clap', 'hihat', 'cymbal'];\n    private currentType: string = 'kick';\n\n    constructor(private metronomeService: DrumMachineMetronomeService) {\n        this.metronomeService.setSequencerLineUp(this.sequencerLineUp);\n        this.metronomeService.init();\n    }\n\n    ngOnDestroy() {\n        this.stop();\n    }\n\n    start() { this.metronomeService.play(); }\n    stop() { this.metronomeService.stop(); }\n\n    togglePlay(e: any) {\n        if (e.value === true) {\n            this.metronomeService.play();\n        } else {\n            this.metronomeService.stop();\n        }\n    }\n\n    update() { this.metronomeService.setSequencerLineUp(this.sequencerLineUp); }\n\n    instrumentKnob(event: any, type: string, knob: string) {\n        this.sequencerLineUp['instrumentSettings'][type][knob] = event.value;\n        // console.log(event.value, type, knob);\n        this.update();\n    }\n\n    instrumentSet(event: any) {\n        this.currentType = event.value;\n    }\n\n    kitSet(event: any) {\n        // console.log(event);\n        this.sequencerLineUp['projectSettings']['kit'] = event.value;\n        this.update();\n    }\n\n    tempoValue(event: any) {\n        // console.log(event.value);\n        // let tempo = (event.value * 120) + 60;\n        // tempo / 2 is only because the beat is in double time\n        this.sequencerLineUp['projectSettings']['tempo'] = event.value;\n        this.update();\n    }\n\n    accentValue(event: any) {\n        this.sequencerLineUp['projectSettings']['accent'] = event.value;\n        this.update();\n    }\n\n    volumeValue(event: any) {\n        // console.log(event.value)\n        this.sequencerLineUp['projectSettings']['volume'] = event.value;\n        this.update();\n        // console.log(this.sequencerLineUp);\n    }\n\n    reverbValue(event: any) {\n        // console.log(event);\n    }\n\n    beatOutputValue(event: any, beatNum: number) {\n        // console.log(event.value, beatNum);\n        // beatnum - 1 is changing the rythm 1-16 into a 0-15 array\n        this.sequencerLineUp['rhythmSettings'][beatNum - 1][this.currentType] = event.value;\n    }\n\n    outputValue(event: any, knob: string) {\n        // TODO: set this up so it assigns the value of each knob to its rightful value\n        // console.log(event, knob);\n        switch (knob) {\n            case 'tempo':\n                this.sequencerLineUp['projectSettings']['tempo'] = event.value;\n                break;\n            case 'volume':\n                this.sequencerLineUp['projectSettings']['volume'] = event.value;\n                break;\n        }\n        this.update();\n    }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/drum-machine/drum-machine.component.ts\n **/","export let SEQUENCER_LINEUP: Object = {\n  'projectSettings': {\n    'tempo': .5,\n    'volume': .5,\n    'reverb': 1,\n    'beat': 0,\n    'accent': 0,\n    'kit': '808'\n  },\n  'instrumentSettings': {\n    'kick': {\n      'level': .5,\n      'attack': 0,\n      'decay': 0,\n      'distortion': 0\n    },\n    'snare': {\n      'level': .5,\n      'attack': 0,\n      'decay': 0,\n      'distortion': 0\n    },\n    'lowtom': {\n      'level': .5,\n      'attack': 0,\n      'decay': 0,\n      'distortion': 0\n    },\n    'midtom': {\n      'level': .5,\n      'attack': 0,\n      'decay': 0,\n      'distortion': 0\n    },\n    'hitom': {\n      'level': .5,\n      'attack': 0,\n      'decay': 0,\n      'distortion': 0\n    },\n    'rimshot': {\n      'level': .5,\n      'attack': 0,\n      'decay': 0,\n      'distortion': 0\n    },\n    'clap': {\n      'level': .5,\n      'attack': 0,\n      'decay': 0,\n      'distortion': 0\n    },\n    'hihat': {\n      'level': .5,\n      'attack': 0,\n      'decay': 0,\n      'distortion': 0\n    },\n    'cymbal': {\n      'level': .5,\n      'attack': 0,\n      'decay': 0,\n      'distortion': 0\n    }\n  },\n  'rhythmSettings': {\n    '0': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '1': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '2': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '3': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '4': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '5': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '6': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '7': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '8': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '9': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '10': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '11': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '12': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '13': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '14': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    },\n    '15': {\n      'kick': false,\n      'snare': false,\n      'lowtom': false,\n      'midtom': false,\n      'hitom': false,\n      'rimshot': false,\n      'clap': false,\n      'hihat': false,\n      'cymbal': false\n    }\n  }\n};\n\n\n\n// 0 to 1 -- 1 is 100% : 0 is 0% \n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/drum-machine/sequencerLineUp.ts\n **/","import { Component } from '@angular/core';\nimport { UpperCasePipe } from '@angular/common';\nimport { ROUTER_DIRECTIVES } from '@angular/router';\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-form',\n    template: require('./form.component.html'),\n    styles: [require('./form.component.style.css')],\n    providers: [UpperCasePipe],\n    directives: [ROUTER_DIRECTIVES]\n})\n\nexport class CCFormComponent {\n//     private fname: string = '';\n//     private phoneNumber: string = '';\n//     private cardBrand: string = 'N/A';\n//     private cardNumber: string = '';\n\n//     constructor(private upperCasePipe: UpperCasePipe) { }\n\n//     onSubmit() {}\n\n//     upperCase(name: string) {\n//         if (this.fname.length > 0 && this.fname.length <= 1) {\n//             let firstLetter = this.fname[0];\n//             this.fname = this.upperCasePipe.transform(firstLetter) + this.fname.substring(1);\n//             this.fname.trim;\n//         }\n//     }\n\n//     phoneNumberFormat() {\n//         if (this.phoneNumber.length === 3) {\n//             this.phoneNumber = this.phoneNumber + '-';\n//         }\n//         if (this.phoneNumber.length === 7) {\n//             this.phoneNumber = this.phoneNumber + '-';\n//         }\n//         if (this.phoneNumber.length > 11) {\n//             this.phoneNumber = this.phoneNumber.substring(0, 11);\n//         }\n//     }\n\n//     // cardNumberFormat() {\n//         /* \n//             TODO:\n//             - set up validations for all forms\n//             - have card number format as typing\n//             - get actual algorithim - regex - to get the card brand as the digits are entered\n//             - have picture of card logo take over for cardbrand\n//             - \n//         // MASTERCARD\t51-55\t16\tmod 10\n//         // VISA\t4\t13, 16\tmod 10\n//         // AMEX\t34 \n//         // 37\t15\tmod 10\n//         // Diners Club/\n//         // Carte Blanche\t300-305\n//         // 36\n//         // 38\t14\tmod 10\n//         // Discover\t6011\t16\tmod 10\n//         // enRoute\t2014\n//         // 2149\t15\tany\n//         // JCB\t3\t16\tmod 10\n//         // JCB\t2131\n//         // 1800\t15\tmod 10\n//         // set this up\n\n//         // this.setCardType('visa');\n//     // }\n// // \n//     setCardType(cardType:string) {\n//         if (this.cardNumber[0] === '1') {\n//             this.cardBrand = 'visa';\n//         }\n//         else if (this.cardNumber[0] === '2') {\n//             this.cardBrand = 'discover';\n//         }\n//         else if (this.cardNumber[0] != '1') {\n//             this.cardBrand = 'N/A';\n//         }\n//     }\n// */\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/form/form.component.ts\n **/","import { Directive, HostBinding, HostListener, Input } from '@angular/core';\n\n@Directive({\n    selector: '[ttc-tiletype-detector]'\n})\n\nexport class TileTypeDirective {\n    private _classToBind: string = 'null';\n    @Input() private tileType: number = 2;\n\n    @HostListener('click') onClick() {\n        if (this.tileType === 0) {\n            this._classToBind = 'x';\n        }\n        if (this.tileType === 1) {\n            this._classToBind = 'o';\n        }\n        if (this.tileType === 2) {\n            this._classToBind = 'null';\n        }\n    }\n\n@HostBinding('class.o') o() {\n    if (this._classToBind === 'o') {\n        return true;\n    }\n}\n\n}\n\n\n    // [ngClass]=\"{ \n    //     'x':tileBoard[y][x]===0,\n    //     'o':tileBoard[y][x]===1,\n    //     'null':tileBoard[y][x]===2 \n    //     }\"\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/tictactoe/directives/tiletype.directive.ts\n **/","import { Component, OnInit } from '@angular/core';\nimport { ROUTER_DIRECTIVES, Router } from '@angular/router';\nimport { GithubCodeService } from './../../../shared/services/github-code-retriever.service';\nimport { TicTacToeService, Player, TileType } from './../tictactoe.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'my-game-information',\n  template: require('./game-information.component.html'),\n  styles: [require('./game-information.component.style.css')],\n  directives: [ROUTER_DIRECTIVES]\n})\n\nexport class GameInformationComponent implements OnInit {\n\n  // TODO: set user one and two in the service\n  private userOne: Player;\n  private userTwo: Player;\n\n  private userOneName: string;\n  private userTwoName: string;\n  private userOneTileType: TileType;\n  private userTwoTileType: TileType;\n  constructor(private router: Router, private ticTacToeService: TicTacToeService) {\n  }\n  ngOnInit() {\n    this.userOne = this.ticTacToeService.getUserOne();\n    this.userTwo = this.ticTacToeService.getUserTwo();\n    this.userOneName = this.userOne.name;\n    this.userTwoName = this.userTwo.name;\n    this.userOneTileType = this.userOne.tileType;\n    this.userTwoTileType = this.userTwo.tileType;\n  }\n\n  toggleTile() {\n    console.log('toggle');\n    this.ticTacToeService.toggleTile();\n    this.updateUserOne(true);\n    this.updateUserTwo(true);\n  }\n\n  updateUserOne(withoutSetting?: boolean) {\n    if (withoutSetting == null) {\n      console.log('without');\n      this.ticTacToeService.setUserOne(this.userOneName, this.userOneTileType);\n    }\n    this.userOne = this.ticTacToeService.getUserOne();\n    this.userOneName = this.userOne.name;\n    this.userOneTileType = this.userOne.tileType;\n  }\n\n  updateUserTwo(withoutSetting?: boolean) {\n    if (withoutSetting == null) {\n      console.log('without')\n      this.ticTacToeService.setUserTwo(this.userTwoName, this.userTwoTileType);\n    }\n    this.userTwo = this.ticTacToeService.getUserTwo();\n    this.userTwoName = this.userTwo.name;\n    this.userTwoTileType = this.userTwo.tileType;\n  }\n\n  gameStart() {\n    this.ticTacToeService.setUserOne(this.userOneName, this.userOneTileType);\n    this.ticTacToeService.setUserTwo(this.userTwoName, this.userTwoTileType);\n    this.router.navigate(['/tictactoe', '/play']);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/tictactoe/game-information/game-information.component.ts\n **/","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ROUTER_DIRECTIVES } from '@angular/router';\nimport { TicTacToeService, Player, TileType } from './../tictactoe.service';\nimport { TileTypeDirective } from '../directives/tiletype.directive';\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-game-play',\n    template: require('./game-play.component.html'),\n    styles: [require('./game-play.component.style.css')],\n    directives: [\n        ROUTER_DIRECTIVES,\n        TileTypeDirective\n    ]\n})\n\nexport class GamePlayComponent implements OnInit, OnDestroy {\n    private tileSetCount: number = 0;\n    private currentPlayer: Player = this.userOne;\n    private userOne: Player;\n    private userTwo: Player;\n\n    private tileBoard: any[] = [\n        [TileType.null, TileType.null, TileType.null],\n        [TileType.null, TileType.null, TileType.null],\n        [TileType.null, TileType.null, TileType.null]\n    ];\n\n    constructor(private ticTacToeService: TicTacToeService, private router: Router) {\n        this.userOne = this.ticTacToeService.getUserOne();\n        this.userTwo = this.ticTacToeService.getUserTwo();\n    }\n\n    ngOnInit() {\n        this.setPlayer();\n        this.ticTacToeService.resetWinner();\n    }\n\n    ngOnDestroy() {\n        this.resetTileBoard();\n    }\n\n    setPlayer() {\n        if (this.currentPlayer === this.userOne) {\n            this.currentPlayer = this.userTwo;\n        } else if (this.currentPlayer === this.userTwo) {\n            this.currentPlayer = this.userOne;\n        } else {\n            this.currentPlayer = this.userOne;\n        }\n    }\n\n    setTile(xaxis: number, yaxis: number) {\n        if (this.tileBoard[yaxis][xaxis] !== TileType.null) { return; }\n\n        if (xaxis === 0) {\n            if (yaxis === 0) { this.tileBoard[0][0] = this.currentPlayer.tileType; }\n            else if (yaxis === 1) { this.tileBoard[1][0] = this.currentPlayer.tileType; }\n            else if (yaxis === 2) { this.tileBoard[2][0] = this.currentPlayer.tileType; }\n        } else if (xaxis === 1) {\n            if (yaxis === 0) { this.tileBoard[0][1] = this.currentPlayer.tileType; }\n            else if (yaxis === 1) { this.tileBoard[1][1] = this.currentPlayer.tileType; }\n            else if (yaxis === 2) { this.tileBoard[2][1] = this.currentPlayer.tileType; }\n        } else if (xaxis === 2) {\n            if (yaxis === 0) { this.tileBoard[0][2] = this.currentPlayer.tileType; }\n            else if (yaxis === 1) { this.tileBoard[1][2] = this.currentPlayer.tileType; }\n            else if (yaxis === 2) { this.tileBoard[2][2] = this.currentPlayer.tileType; }\n        }\n\n        this.tileSetCount++;\n\n        if (this.checkForWinner(xaxis, yaxis)) {\n            this.currentPlayer.score++;\n            this.ticTacToeService.setWinner(this.currentPlayer);\n            this.router.navigate(['/tictactoe', '/end']);\n        }\n\n        if (this.tileSetCount === 9) {\n            this.router.navigate(['/tictactoe', '/end']);\n        }\n\n        this.setPlayer();\n    }\n\n    resetTileBoard() {\n        this.tileSetCount = 0;\n        for (let i = 0; i < this.tileBoard.length; i++) {\n            for (let j = 0; j < this.tileBoard[i].length; j++) {\n                this.tileBoard[i][j] = TileType.null;\n            }\n        }\n    }\n\n    checkForWinner(x: number, y: number): boolean {\n        if (this.checkHorizontalWin(y)) { return true; }\n        if (this.checkVerticalWin(x)) { return true; }\n        if (this.checkDiagonalWin()) { return true; }\n        return false;\n    }\n\n    checkHorizontalWin(y: number): boolean {\n        let count: number = 0;\n        for (let x = 0; x < this.tileBoard.length; x++) {\n            if (this.tileBoard[y][x] === this.currentPlayer.tileType) { count++; }\n            if (count === 3) { return true; }\n        }\n    }\n\n    checkVerticalWin(x: number): boolean {\n        let count: number = 0;\n        for (let y = 0; y < this.tileBoard.length; y++) {\n            if (this.tileBoard[y][x] === this.currentPlayer.tileType) { count++; }\n            if (count === 3) { return true; }\n        }\n    }\n\n    checkDiagonalWin(): boolean {\n        let tb = this.tileBoard;\n        if (tb[0][0] === tb[1][1] && tb[1][1] === tb[2][2] && tb[1][1] !== TileType.null) { return true; }\n        if (tb[0][2] === tb[1][1] && tb[1][1] === tb[2][0] && tb[1][1] !== TileType.null) { return true; }\n    }\n\n}\n\n\n//   <rect id=\"background\" class=\"cls-1\" width=\"300\" height=\"300\"/>\n\nlet x2y2Circle: string = 'M299.56,249.56a49.4,49.4,0,1,1-3.89-19.29A49.4,49.4,0,0,1,299.56,249.56Z';\nlet x1y2Circle: string = 'M199.56,249.56a49.4,49.4,0,1,1-3.89-19.29A49.4,49.4,0,0,1,199.56,249.56Z';\nlet x0y2Circle: string = 'M99.56,249.56a49.4,49.4,0,1,1-3.89-19.29A49.4,49.4,0,0,1,99.56,249.56Z';\nlet x2y1Circle: string = 'M299.56,150a49.4,49.4,0,1,1-3.89-19.29A49.4,49.4,0,0,1,299.56,150Z';\nlet x1y1Circle: string = 'M199.56,150a49.4,49.4,0,1,1-3.89-19.29A49.4,49.4,0,0,1,199.56,150Z';\nlet x0y1Circle: string = 'M99.56,150a49.4,49.4,0,1,1-3.89-19.29A49.4,49.4,0,0,1,99.56,150Z';\nlet x2y0Circle: string = 'M299.56,50a49.4,49.4,0,1,1-3.89-19.29A49.4,49.4,0,0,1,299.56,50Z';\nlet x1y0Circle: string = 'M199.56,50a49.4,49.4,0,1,1-3.89-19.29A49.4,49.4,0,0,1,199.56,50Z';\nlet x0y0Circle: string = 'M99.56,50a49.4,49.4,0,1,1-3.89-19.29A49.4,49.4,0,0,1,99.56,50Z';\n\n\nlet x2y2X: string = 'M200,199.56h25l25,50,25-50h25v25l-50,25,50,25v25H275l-25-50-25,50H200v-25l50-25-50-25v-25Z\" transform=\"translate(0)';\nlet x1y2X: string = 'M100,199.56h25l25,50,25-50h25v25l-50,25,50,25v25H175l-25-50-25,50H100v-25l50-25-50-25v-25Z\" transform=\"translate(0)';\nlet x0y2X: string = 'M0,199.56H25l25,50,25-50h25v25l-50,25,50,25v25H75l-25-50-25,50H0v-25l50-25-50-25v-25Z\" transform=\"translate(0)';\nlet x2y1X: string = 'M200,100h25l25,50,25-50h25v25l-50,25,50,25v25H275l-25-50-25,50H200V175l50-25-50-25V100Z\" transform=\"translate(0)';\nlet x1y1X: string = 'M100,100h25l25,50,25-50h25v25l-50,25,50,25v25H175l-25-50-25,50H100V175l50-25-50-25V100Z\" transform=\"translate(0)';\nlet x0y1X: string = 'M0,100H25l25,50,25-50h25v25L50,150l50,25v25H75L50,150,25,200H0V175l50-25L0,125V100Z\" transform=\"translate(0)';\nlet x2y0X: string = 'M200,0h25l25,50L275,0h25V25L250,50l50,25v25H275L250,50l-25,50H200V75l50-25L200,25V0Z\" transform=\"translate(0)';\nlet x1y0X: string = 'M100,0h25l25,50L175,0h25V25L150,50l50,25v25H175L150,50l-25,50H100V75l50-25L100,25V0Z\" transform=\"translate(0)';\nlet x0y0X: string = 'M0,0H25L50,50,75,0h25V25L50,50l50,25v25H75L50,50,25,100H0V75L50,50,0,25V0Z\" transform=\"translate(0)';\n\nlet x2y2Square: string = 'M200,199.56H300v100H200v-100Z\" transform=\"translate(0 0)';\nlet x1y2Square: string = 'M100,199.56H200v100H100v-100Z\" transform=\"translate(0 0)';\nlet x0y2Square: string = 'M0,199.56H100v100H0v-100Z\" transform=\"translate(0 0)';\nlet x2y1Square: string = 'M200,100H300V200H200V100Z\" transform=\"translate(0 0)';\nlet x1y1Square: string = 'M100,100H200V200H100V100Z\" transform=\"translate(0 0)';\nlet x0y1Square: string = 'M0,100H100V200H0V100Z\" transform=\"translate(0 0)';\nlet x2y0Square: string = 'M200,0H300V100H200V0Z\" transform=\"translate(0 0)';\nlet x1y0Square: string = 'M100,0H200V100H100V0Z\" transform=\"translate(0 0)';\nlet x0y0Square: string = 'M0,0H100V100H0V0Z\" transform=\"translate(0 0)';\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/tictactoe/game-play/game-play.component.ts\n **/","import { Component, OnInit } from '@angular/core';\nimport { Router, ROUTER_DIRECTIVES } from '@angular/router';\nimport { TicTacToeService, Player } from './../tictactoe.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-game-resolution',    \n    template: require('./game-resolution.component.html'),\n    styles: [require('./game-resolution.component.style.css')],\n    directives: [ROUTER_DIRECTIVES]\n})\n\nexport class GameResolutionComponent implements OnInit {\n    private winner: Player;\n    private isTie: boolean = false;\n    constructor(private ticTacToeService: TicTacToeService, private router: Router) {}\n    ngOnInit() {\n        this.winner = this.ticTacToeService.getWinner();\n        if (this.winner === null) {\n            this.isTie = true;\n        }\n    }\n\n    playAgain() {\n        this.router.navigate(['/tictactoe', '/play']);\n    }\n\n    newGame() {\n        this.ticTacToeService.resetGame();\n        this.router.navigate(['/tictactoe', '/new']);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/tictactoe/game-resolution/game-resolution.component.ts\n **/","import { RouterConfig }          from '@angular/router';\nimport { TicTacToeComponent } from './tictactoe.component';\nimport { GamePlayComponent }     from './game-play/game-play.component';\nimport { GameInformationComponent } from './game-information/game-information.component';\nimport { GameResolutionComponent } from './game-resolution/game-resolution.component';\n\nexport const TicTacToeRoutes: RouterConfig = [\n  {\n    path: 'tictactoe',\n    component: TicTacToeComponent,\n    children: [\n      { path: 'new',  component: GameInformationComponent },\n      { path: 'play', component: GamePlayComponent },\n      { path: 'end',  component: GameResolutionComponent }\n    ]\n  }\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/tictactoe/tictactoe.routes.ts\n **/","import {Component, ElementRef, AfterViewInit} from '@angular/core';\nlet Snap = require( \"imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js\" );\n\n@Component({\n    moduleId: module.id,\n    selector: 'my-watches',\n    inputs: ['text'],\n    template: require('./watches.component.html'),\n    styles: ['svg {width: 30%; margin: 0 auto;}']\n})\n\nexport class WatchesComponent implements AfterViewInit  {\n    private watch: any;\n    private face: any;\n    private hand: any;\n    private angle: number = 0;\n\n    constructor(el: ElementRef) {}\n    ngAfterViewInit() {\n        this.watch = Snap('#seiko_007');\n        this.face = {\n            el: this.watch.select('#face'),\n            x: this.watch.select('#face').getBBox().cx,\n            y: this.watch.select('#face').getBBox().cy\n        };\n        this.hand = this.watch.select('#minute_hand');\n    }\n\n    setHour() {\n        let hour = new Date().getHours();\n        this.hand.attr({transform: \"rotate(\"+0+\" \"+this.face.x + \" \"+this.face.y + \")\"});\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/projects/watches/watches.component.ts\n **/","import { provideRouter, RouterConfig } from '@angular/router';\nimport { TicTacToeRoutes } from './../projects/tictactoe/tictactoe.routes';\nimport { HomeComponent } from './../app-component/home/home.component';\nimport { CCFormComponent }  from './../projects/form/form.component';\nimport { CalculatorComponent } from './../projects/calculator/calculator.component';\nimport { TicTacToeComponent } from './../projects/tictactoe/tictactoe.component';\nimport { WatchesComponent } from './../projects/watches/watches.component';\nimport { DrumMachineComponent} from './../projects/drum-machine/drum-machine.component';\nimport { EmptyComponent } from './../app-component/app.component';\n\nexport const routes: RouterConfig = [\n    ...TicTacToeRoutes,\n    { path: '', component: HomeComponent },\n    { path: 'creditcardform', component: CCFormComponent },\n    { path: 'calculator', component: CalculatorComponent },\n    { path: 'tictactoe', component: TicTacToeComponent},\n    { path: 'drum', component: DrumMachineComponent},\n    { path: 'watches', component: WatchesComponent}\n];\nexport const APP_ROUTER_PROVIDERS = [\n  provideRouter(routes)\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/routes/app.routes.ts\n **/","import { Component, Input, OnDestroy } from '@angular/core';\nimport { PrismJsDirective } from \"./../prismjs/prismjs.directive\";\nimport { CodeblockComponent } from \"./../prismjs/codeblock.component\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'accordion',\n  template: require('./accordion.component.html'),\n  styles: [\n    `.show {\n  display: block;\n}\n`\n  ]\n})\n\nexport class Accordion {\n  groups: Array<AccordionGroup> = [];\n  \n  addGroup(group: AccordionGroup): void {\n    this.groups.push(group);\n  }\n  \n  closeOthers(openGroup: AccordionGroup): void {\n    this.groups.forEach((group: AccordionGroup) => {\n      if (group !== openGroup) {\n        group.isOpen = false;\n      }\n    });\n  }\n  \n  removeGroup(group: AccordionGroup): void {\n    const index = this.groups.indexOf(group);\n    if (index !== -1) {\n      this.groups.splice(index, 1);\n    }\n  }\n}\n\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'accordion-group',\n  template: require('./accordion-group.component.html'),\n  styles: [`.show {\n  display: block;\n}\n`],\n  directives: [\n    PrismJsDirective, \n    CodeblockComponent],\n})\n\nexport class AccordionGroup implements OnDestroy {\n  private _isOpen: boolean = false;\n  \n  @Input() heading: string;\n  \n  @Input()\n  set isOpen(value: boolean) {\n    this._isOpen = value;\n    if (value) {\n      this.accordion.closeOthers(this);\n    }\n  }\n  \n  get isOpen() {\n    return this._isOpen;\n  }\n  \n  constructor(private accordion: Accordion) {\n    this.accordion.addGroup(this);\n  }\n  \n  ngOnDestroy() {\n    this.accordion.removeGroup(this);\n  }\n  \n  toggleOpen(event: MouseEvent): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/shared/accordion/accordion.component.ts\n **/","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n    selector: '[my-hover-effect]'\n})\n\nexport class HoverEffectDirective {\n    private xCoord: number;\n    private yCoord: number;\n    private el: HTMLElement;\n    private element: Object = {\n        top: null,\n        bottom: null,\n        left: null,\n        right: null,\n        height: null,\n        width: null\n    };\n\n    constructor(private _el: ElementRef) {\n        this.el = _el.nativeElement;\n    }\n\n    @HostListener('mousemove', ['$event']) onMouseMove(e: any): void {\n        this.calculateCoordPercentage(e.clientX, e.clientY);\n        this.animate(this.xCoord, this.yCoord);\n    }\n    @HostListener('mouseenter') onMouseEnter(): void {\n        this.el.style.transition = 'all .1s ease-in';\n        this.setElementDimensions();\n        this.createShineElement();\n    }\n    @HostListener('mouseleave') onMouseExit(): void {\n        this.el.style.transition = 'all .5s ease-out .3s';\n        this.el.style.transform = '';\n        this.el.style.boxShadow = '';\n        this.destroyShineElement();\n    }\n\n    setElementDimensions(): void {\n        let elDim = this.el.getBoundingClientRect();\n        this.element['top'] = elDim.top;\n        this.element['right'] = elDim.right;\n        this.element['bottom'] = elDim.bottom;\n        this.element['left'] = elDim.left;\n        this.element['width'] = elDim.width;\n        this.element['height'] = elDim.height;\n    }\n\n    // x0 y0 == upper left corner x1 y1 == lower right corner\n    calculateCoordPercentage(x: number, y: number): void {\n        let xRelativeCoord: number = x - this.element['left'],\n            yRelativeCoord: number = y - this.element['top'],\n            xHalfwayPoint: number = (this.element['width'] / 2),\n            yHalfwayPoint = (this.element['height'] / 2),\n            xDistanceFromHalf: number = xRelativeCoord - xHalfwayPoint,\n            yDistanceFromHalf: number = yRelativeCoord - yHalfwayPoint;\n\n        this.xCoord = xDistanceFromHalf / xHalfwayPoint;\n        this.yCoord = yDistanceFromHalf / yHalfwayPoint;\n    }\n\n    animate(x: number, y: number): void {\n        this.animateShadow(x, y);\n        this.animateDiv(x, y);\n        this.animateShine(x, y);\n    }\n\n    animateDiv(x: number, y: number): void {\n        let rotateY = (x * this.element['width']) / 15,\n            rotateX = (y * -this.element['height']) / 15;\n        this.el.style.transform = 'rotateX(' + (rotateX) + 'deg)';\n        this.el.style.transform += 'rotateY(' + (rotateY) + 'deg)';\n    }\n\n    animateShadow(x: number, y: number): void {\n        let shadowX = x * 10,\n            shadowY = y * 10,\n            shadowSize = 100;\n            // 0 45px 100px rgba(0,0,0, .4)\n        this.el.style.boxShadow = shadowX + 'px ' + shadowY + 'px ' + shadowSize + 'px rgba(0,0,0, .4)';\n    }\n\n    createShineElement() {\n        let node: HTMLElement = document.createElement('div');\n        node.setAttribute('id', 'hover-effect-shine');\n        node.style.position = 'absolute';\n        node.style.top = '0';\n        node.style.bottom = '0';\n        node.style.left = '0';\n        node.style.right = '0';\n        this.el.appendChild(node);\n    }\n\n    destroyShineElement() {\n        let childToRemove = document.getElementById('hover-effect-shine');\n        this.el.removeChild(childToRemove);\n    }\n\n    calculateDegreeFromCenter(xCoord: number, yCoord: number): string {\n        let radialValue = Math.atan2(xCoord, yCoord),\n            degreeValue = radialValue * 180 / Math.PI;\n        // if (degreeValue < 0 ) { degreeValue += 360; }\n        console.log(degreeValue, 'deg');\n        return degreeValue * -1 + 'deg';\n    }\n\n    animateShine(x: number, y: number): void {\n        let deg: string = this.calculateDegreeFromCenter(x, y),\n            // giving back which ever value is closer to 1\n            opacity: number = Math.max(Math.abs(y), Math.abs(x)),\n            shine: HTMLElement = document.getElementById('hover-effect-shine'),\n            gradient1: string = 'linear-gradient(' + deg + ', rgba(255, 255, 255, ' + opacity + ') 0%,',\n            gradient2 = ' rgba(255,255,255,0) 80%)',\n            gradient = gradient1  + gradient2;\n        shine.style.backgroundImage = gradient;\n\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./app/shared/directives/hover-effect.directive.ts\n **/"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgEA;AA7DA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3EA;AAAA;;AAAA;AA4EA;AAAA;AA1EA;AAkFA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AAaA;AAAA;AAGA;AACA;AAFA;AAAA;;AAAA;AAbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAMA;AAAA;AAJA;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAWA;AAAA;AACA;AAMA;AAJA;AACA;AACA;AAJA;AAAA;;AAAA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AASA;AAAA;AAPA;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAYA;AAAA;AACA;AACA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAIA;AAAA;AAFA;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AAgBA;AACA;AAAA;AAAA;AAdA;AAAA;AACA;AACA;AACA;AAKA;AACA;AAEA;;AAAA;AAIA;AAAA;AAFA;;;;;;;;;;;;;;;;;;AClBA;AAMA;AAAA;AAAA;AAJA;AAAA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACNA;AACA;AAGA;AACA;AAMA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;;AAAA;AALA;AAAA;AACA;AACA;;AAAA;AAceA;AA4BA;AA5BA;AA6BA;AACA;AA7BA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAlEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAyDA;AAAA;AAvDA;AAyDA;AACA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AAcA;AA+BA;AA/BA;AAgCA;AACA;AAhCA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AArEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA4DA;AAAA;AA1DA;AA4DA;AACA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AChFA;AACA;AASA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAwFA;AApFA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArGA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAkGA;AAAA;AAhGA;;;;;;;;;;;;;;;;;;ACVA;AACA;AAMA;AAOA;AAAA;AAFA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AANA;AAAA;AACA;AACA;;AAAA;AA+BA;AAAA;AA7BA;;;;;;;;;;;;;;;;;;ACPA;AACA;AAIA;AAYA;AAAA;AAXA;AACA;AAGA;AAGA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA1EA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAJA;AAAA;;AAAA;AA8EA;AAAA;AA5EA;;;;;;;;;;;;;;;;;;ACLA;AACA;AAMA;AAkBA;AAAA;AAjBA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1HA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAVA;AAAA;AACA;AACA;;AAAA;AA8HA;AAAA;AA5HA;;;;;;;;;;;;;;;;;;ACPA;AACA;AAMA;AAeA;AAAA;AAdA;AACA;AASA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AArFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAPA;AAAA;AACA;AACA;;AAAA;AA0FA;AAAA;AAxFA;;;;;;;;;;;;;;;;;;ACPA;AAEA;AAMA;AAYA;AAAA;AAXA;AAEA;AAEA;AACA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAhEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAYA;AAAA;;;;AAAA;AAlBA;AAAA;AACA;AACA;;AAAA;AAoEA;AAAA;AAlEA;;;;;;;;;;;;;;;;;;ACRA;AACA;AAMA;AAYA;AAAA;AAXA;AAOA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAhEA;AAAA;;AAAA;AALA;AAAA;AACA;AACA;;AAAA;AAoEA;AAAA;AAlEA;;;;;;;;ACPA;;;;;;;;;;;AAEA;AACA;AAGA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA4PA;AAzPA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATA;;AAUA;;AAXA;;AAYA;AACA;AA7QA;AAAA;;AAAA;AA+QA;AAAA;AA9QA;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAiBA;AAKA;AAAA;AAJA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAwFA;AAAA;AAtvPA;AACA;AACA;AAWA;AAAA;AAqEA;AA9EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAuEA;AAAA;AArEA;;;;;;;;;;;;;;;;;;ACbA;AAMA;AAAA;AACA;AACA;AAoBA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAlBA;AAAA;;AAAA;AAEA;AAAA;;;;AAAA;AAYA;AAAA;;;;AAAA;AApBA;AAAA;AACA;AACA;;AAAA;AAwBA;AAAA;AAtBA;AAyBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnCA;AACA;AAEA;AAUA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAyDA;AAAA;AAvDA;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AAaA;AAYA;AAAA;AAAA;AAXA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAnHA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA4GA;AAAA;AA1GA;AA6GA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5JA;AACA;AACA;AAUA;AAGA;AAAA;AAAA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AA1BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAqBA;AAAA;AAnBA;;;;;;;;;ACXA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChBA;AACA;AAUA;AAMA;AAFA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA5BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAuBA;AAAA;AArBA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AAcA;AAAA;AACA;AAoBA;AAlBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;AAAA;AAuBA;AAAA;AArBA;AAsCA;AAiBA;AAAA;AAhBA;AAiBA;AACA;AAbA;AAOA;AACA;AACA;AATA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AAzBA;AAAA;;AAAA;AAEA;AAAA;;;AAAA;AAlBA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;AAAA;AA+BA;AAAA;AA7BA;;;;;;;;;;;;;;;;;;ACtDA;AAMA;AAaA;AAAA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AA9FA;AAAA;;;;AAAA;AAIA;AAAA;;;;AAAA;AAKA;AAAA;;;;AAAA;AA9BA;AAAA;AACA;AACA;;AAAA;AAkHA;AAAA;AAhHA;;;;;","sourceRoot":""}